import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const c=JSON.parse('{"title":"8.1_手动创建单个NSLayoutConstraint","description":"","frontmatter":{},"headers":[],"relativePath":"swift/uikit/basics/8.1_手动创建单个NSLayoutConstraint.md","filePath":"swift/uikit/basics/8.1_手动创建单个NSLayoutConstraint.md"}'),t={name:"swift/uikit/basics/8.1_手动创建单个NSLayoutConstraint.md"};function l(p,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_8-1-手动创建单个nslayoutconstraint" tabindex="-1">8.1_手动创建单个NSLayoutConstraint <a class="header-anchor" href="#_8-1-手动创建单个nslayoutconstraint" aria-label="Permalink to &quot;8.1_手动创建单个NSLayoutConstraint&quot;">​</a></h1><blockquote><p>手动创建单个 <code>NSLayoutConstraint</code> 是使用代码设置视图约束的关键一步。 让我们一起深入了解如何操作，让你的界面布局更加精准和灵活！🚀</p></blockquote><h2 id="理解-nslayoutconstraint-的构成" tabindex="-1">理解 NSLayoutConstraint 的构成 <a class="header-anchor" href="#理解-nslayoutconstraint-的构成" aria-label="Permalink to &quot;理解 NSLayoutConstraint 的构成&quot;">​</a></h2><p>一个 <code>NSLayoutConstraint</code> 对象定义了两个视图之间的关系。它由以下几个关键部分组成：</p><ol><li><strong><code>item</code></strong>: 参与约束的第一个视图。</li><li><strong><code>attribute</code></strong>: 第一个视图的属性，例如 <code>top</code>, <code>bottom</code>, <code>leading</code>, <code>trailing</code>, <code>width</code>, <code>height</code> 等。</li><li><strong><code>relatedBy</code></strong>: 约束关系，例如 <code>equal</code>, <code>greaterThanOrEqual</code>, <code>lessThanOrEqual</code>。</li><li><strong><code>toItem</code></strong>: 参与约束的第二个视图（可以为 <code>nil</code>）。</li><li><strong><code>attribute</code></strong>: 第二个视图的属性（如果 <code>toItem</code> 不为 <code>nil</code>）。</li><li><strong><code>multiplier</code></strong>: 乘数，用于定义比例关系。</li><li><strong><code>constant</code></strong>: 常数，用于增加或减少约束值。</li></ol><h2 id="手动创建约束的步骤" tabindex="-1">手动创建约束的步骤 <a class="header-anchor" href="#手动创建约束的步骤" aria-label="Permalink to &quot;手动创建约束的步骤&quot;">​</a></h2><p>要手动创建一个 <code>NSLayoutConstraint</code>，你需要使用其初始化方法。以下是一个例子，展示如何创建一个约束，使一个视图的顶部与另一个视图的顶部对齐，并加上一个常数偏移量：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> superView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myView.translatesAutoresizingMaskIntoConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> topConstraint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NSLayoutConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: myView,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                     attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .top,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                     relatedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .equal,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                     toItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: superView,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                     attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .top,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                     multiplier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                     constant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">superView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addSubview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myView)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">superView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(topConstraint)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>在这个例子中，<code>myView</code> 的顶部与 <code>superView</code> 的顶部对齐，并且有 20 个点的偏移量。 确保 <code>myView.translatesAutoresizingMaskIntoConstraints = false</code>，否则约束可能无法生效。</p><h2 id="激活约束" tabindex="-1">激活约束 <a class="header-anchor" href="#激活约束" aria-label="Permalink to &quot;激活约束&quot;">​</a></h2><p>创建约束后，你需要激活它才能生效。有两种方法可以激活约束：</p><ol><li><strong>通过 <code>isActive</code> 属性</strong>:</li></ol><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">topConstraint.isActive </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li><strong>通过 <code>addConstraint</code> 方法</strong>:</li></ol><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">superView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(topConstraint)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>推荐使用 <code>isActive</code> 属性，因为它更简洁明了。</p><h2 id="示例-创建一个居中约束" tabindex="-1">示例：创建一个居中约束 <a class="header-anchor" href="#示例-创建一个居中约束" aria-label="Permalink to &quot;示例：创建一个居中约束&quot;">​</a></h2><p>让我们创建一个约束，使一个视图在另一个视图中水平居中：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> superView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myView.translatesAutoresizingMaskIntoConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> centerXConstraint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NSLayoutConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: myView,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                          attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .centerX,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                          relatedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .equal,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                          toItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: superView,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                          attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .centerX,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                          multiplier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                          constant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">superView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addSubview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(myView)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">superView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(centerXConstraint)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>这个约束将 <code>myView</code> 的水平中心与 <code>superView</code> 的水平中心对齐。</p><h2 id="约束的优先级" tabindex="-1">约束的优先级 <a class="header-anchor" href="#约束的优先级" aria-label="Permalink to &quot;约束的优先级&quot;">​</a></h2><p>你可以设置约束的优先级，以控制在冲突时哪个约束应该被满足。 优先级范围从 1 到 1000，其中 1000 是必需的。 例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">topConstraint.priority </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UILayoutPriority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这表示 <code>topConstraint</code> 的优先级为 900，低于必需的优先级 1000。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>手动创建 <code>NSLayoutConstraint</code> 让你能够精确控制视图的布局。 记住设置 <code>translatesAutoresizingMaskIntoConstraints</code> 为 <code>false</code>，激活约束，并根据需要调整优先级。 通过这些步骤，你可以创建出复杂而灵活的界面布局！🎉</p>`,26)]))}const E=i(t,[["render",l]]);export{c as __pageData,E as default};
