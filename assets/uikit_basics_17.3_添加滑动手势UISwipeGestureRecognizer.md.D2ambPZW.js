import{_ as i,c as e,o as a,ag as n}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"17.3_添加滑动手势UISwipeGestureRecognizer","description":"","frontmatter":{},"headers":[],"relativePath":"uikit/basics/17.3_添加滑动手势UISwipeGestureRecognizer.md","filePath":"uikit/basics/17.3_添加滑动手势UISwipeGestureRecognizer.md"}'),t={name:"uikit/basics/17.3_添加滑动手势UISwipeGestureRecognizer.md"};function p(l,s,h,r,k,d){return a(),e("div",null,s[0]||(s[0]=[n(`<h1 id="_17-3-添加滑动手势uiswipegesturerecognizer" tabindex="-1">17.3_添加滑动手势UISwipeGestureRecognizer <a class="header-anchor" href="#_17-3-添加滑动手势uiswipegesturerecognizer" aria-label="Permalink to &quot;17.3_添加滑动手势UISwipeGestureRecognizer&quot;">​</a></h1><blockquote><p>想要让你的 iOS 应用更具互动性吗？滑动 (Swipe) 手势绝对是你的好帮手！它能让用户通过简单的滑动操作，轻松触发各种功能。让我们一起学习如何在 UIKit 中添加 <code>UISwipeGestureRecognizer</code>，让你的应用体验更上一层楼！🎉</p></blockquote><h2 id="创建-uiswipegesturerecognizer" tabindex="-1">创建 UISwipeGestureRecognizer <a class="header-anchor" href="#创建-uiswipegesturerecognizer" aria-label="Permalink to &quot;创建 UISwipeGestureRecognizer&quot;">​</a></h2><p>首先，你需要创建一个 <code>UISwipeGestureRecognizer</code> 的实例。这个手势识别器会监听屏幕上的滑动操作，并在检测到滑动时触发相应的动作。你可以通过以下代码创建一个向右滑动的识别器：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> swipeRight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UISwipeGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleSwipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_:)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">swipeRight.direction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .right</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(swipeRight)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这段代码创建了一个名为 <code>swipeRight</code> 的滑动识别器，并将其方向设置为 <code>.right</code>，表示只识别向右的滑动。<code>target</code> 设置为 <code>self</code>，表示手势触发时，将调用当前类的 <code>handleSwipe(_:)</code> 方法。最后，使用 <code>view.addGestureRecognizer(swipeRight)</code> 将识别器添加到视图中。</p><h2 id="实现手势处理方法" tabindex="-1">实现手势处理方法 <a class="header-anchor" href="#实现手势处理方法" aria-label="Permalink to &quot;实现手势处理方法&quot;">​</a></h2><p>接下来，你需要实现 <code>handleSwipe(_:)</code> 方法，这个方法会在检测到滑动时被调用。你可以在这个方法中编写处理滑动事件的代码。例如，你可以根据滑动的方向来执行不同的操作：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@objc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleSwipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gesture: UISwipeGestureRecognizer) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gesture.direction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .right {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 处理向右滑动</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;向右滑动！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gesture.direction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .left {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 处理向左滑动</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;向左滑动！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在这个例子中，我们通过 <code>gesture.direction</code> 属性来判断滑动的方向，并根据方向打印不同的信息。你可以根据实际需求，在这个方法中执行更复杂的操作，比如切换视图、显示菜单等等。</p><h2 id="设置滑动方向" tabindex="-1">设置滑动方向 <a class="header-anchor" href="#设置滑动方向" aria-label="Permalink to &quot;设置滑动方向&quot;">​</a></h2><p><code>UISwipeGestureRecognizer</code> 允许你设置滑动的方向。你可以使用 <code>direction</code> 属性来指定识别器应该监听哪个方向的滑动。<code>direction</code> 属性是一个 <code>UISwipeGestureRecognizer.Direction</code> 类型的枚举，它可以取以下值：</p><ul><li><code>.right</code>: 向右滑动</li><li><code>.left</code>: 向左滑动</li><li><code>.up</code>: 向上滑动</li><li><code>.down</code>: 向下滑动</li></ul><p>你可以根据你的应用需求，选择一个或多个方向。例如，如果你想同时监听向左和向右的滑动，你可以这样设置：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">swipeRight.direction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [.right, .left]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="多个手势识别器" tabindex="-1">多个手势识别器 <a class="header-anchor" href="#多个手势识别器" aria-label="Permalink to &quot;多个手势识别器&quot;">​</a></h2><p>你可以在同一个视图上添加多个 <code>UISwipeGestureRecognizer</code>，每个识别器监听不同的滑动方向。这样，你就可以根据不同的滑动方向执行不同的操作。例如，你可以添加一个向右滑动的识别器和一个向左滑动的识别器，分别用于切换到下一个和上一个视图。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> swipeLeft </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UISwipeGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleSwipe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_:)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">swipeLeft.direction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .left</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(swipeLeft)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>通过这种方式，你可以为你的应用添加更丰富的手势交互，提升用户体验。 🚀</p><h2 id="实际应用场景" tabindex="-1">实际应用场景 <a class="header-anchor" href="#实际应用场景" aria-label="Permalink to &quot;实际应用场景&quot;">​</a></h2><p>滑动操作在 iOS 应用中非常常见。例如，在照片应用中，你可以使用滑动手势来切换照片；在邮件应用中，你可以使用滑动手势来删除邮件；在新闻应用中，你可以使用滑动手势来刷新新闻。掌握 <code>UISwipeGestureRecognizer</code> 的使用，可以让你轻松实现这些功能，让你的应用更加实用和易用。 🤩</p><p>希望这个教程能帮助你理解如何在 iOS 应用中添加滑动手势。动手试试吧，你会发现它非常简单有趣！ 🎉</p>`,22)]))}const E=i(t,[["render",p]]);export{o as __pageData,E as default};
