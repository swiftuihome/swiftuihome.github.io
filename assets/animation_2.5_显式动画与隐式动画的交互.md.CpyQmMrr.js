import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.ymCRTBvy.js";const g=JSON.parse('{"title":"2.5_显式动画与隐式动画的交互","description":"","frontmatter":{},"headers":[],"relativePath":"animation/2.5_显式动画与隐式动画的交互.md","filePath":"animation/2.5_显式动画与隐式动画的交互.md"}'),h={name:"animation/2.5_显式动画与隐式动画的交互.md"};function p(t,s,e,k,r,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="_2-5-显式动画与隐式动画的交互" tabindex="-1">2.5_显式动画与隐式动画的交互 <a class="header-anchor" href="#_2-5-显式动画与隐式动画的交互" aria-label="Permalink to &quot;2.5_显式动画与隐式动画的交互&quot;">​</a></h1><h2 id="显式动画与隐式动画的交互" tabindex="-1">显式动画与隐式动画的交互 <a class="header-anchor" href="#显式动画与隐式动画的交互" aria-label="Permalink to &quot;显式动画与隐式动画的交互&quot;">​</a></h2><p>显式动画和隐式动画在 SwiftUI 中各有千秋，理解它们的交互方式至关重要。 掌握它们之间的关系，能让你更灵活地控制动画效果，创造出更精美的用户界面。🎉</p><h2 id="动画优先级" tabindex="-1">动画优先级 <a class="header-anchor" href="#动画优先级" aria-label="Permalink to &quot;动画优先级&quot;">​</a></h2><p>当显式动画和隐式动画同时作用于同一个视图属性时，<strong>显式动画拥有更高的优先级</strong>。这意味着，如果一个属性既有隐式动画，又有 <code>withAnimation</code> 代码块包裹的显式动画，那么显式动画会覆盖隐式动画。</p><p>例如，你可能已经使用 <code>.animation()</code> 修饰符为视图添加了隐式动画。 但是，如果之后你使用 <code>withAnimation</code> 代码块修改同一个属性，那么 <code>withAnimation</code> 中定义的动画效果将会生效。</p><h2 id="动画覆盖" tabindex="-1">动画覆盖 <a class="header-anchor" href="#动画覆盖" aria-label="Permalink to &quot;动画覆盖&quot;">​</a></h2><p>显式动画不仅会覆盖隐式动画，还会影响其后续行为。 一旦显式动画执行完毕，该属性将不再受隐式动画的影响，除非你再次显式地应用隐式动画。</p><p>考虑以下场景：</p><ol><li>你使用 <code>.animation()</code> 为一个视图的 <code>opacity</code> 属性添加了隐式动画。</li><li>然后，你使用 <code>withAnimation</code> 代码块，以不同的动画曲线和时长修改了 <code>opacity</code> 属性。</li><li>显式动画结束后，<code>opacity</code> 属性将保持显式动画结束时的状态，不再受初始隐式动画的影响。</li></ol><h2 id="混合使用策略" tabindex="-1">混合使用策略 <a class="header-anchor" href="#混合使用策略" aria-label="Permalink to &quot;混合使用策略&quot;">​</a></h2><p>虽然显式动画通常会覆盖隐式动画，但你仍然可以巧妙地将它们结合起来，创造出更复杂的动画效果。 一种常见的策略是：</p><ol><li>使用隐式动画为视图添加一个默认的动画效果。</li><li>使用显式动画在特定情况下覆盖默认动画，例如，当用户进行特定操作时。</li></ol><p>这种方法可以让你在保持代码简洁的同时，灵活地控制动画效果。 记住，动画的目的是提升用户体验，让你的应用更加生动有趣！ 🤩</p><h2 id="示例代码" tabindex="-1">示例代码 <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码&quot;">​</a></h2><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isAnimating </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        VStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            RoundedRectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cornerRadius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: isAnimating </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.blue)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaleEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(isAnimating </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: isAnimating) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 隐式动画</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Toggle Animation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                withAnimation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dampingFraction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 显式动画</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    isAnimating.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>在这个例子中，<code>RoundedRectangle</code> 具有隐式动画，但 <code>Button</code> 的点击事件会触发一个显式动画，覆盖隐式动画。 这样，你就可以根据需要控制动画效果，创造出更吸引人的用户界面。 🚀</p>`,17)]))}const o=i(h,[["render",p]]);export{g as __pageData,o as default};
