import{_ as a,c as t,o,ag as l}from"./chunks/framework.Bw-5EFTY.js";const _=JSON.parse('{"title":"处理待处理的交易（Ask to Buy）","description":"","frontmatter":{},"headers":[],"relativePath":"purchase/4.4_处理待处理的交易（Ask to Buy）.md","filePath":"purchase/4.4_处理待处理的交易（Ask to Buy）.md"}'),i={name:"purchase/4.4_处理待处理的交易（Ask to Buy）.md"};function r(s,e,n,c,d,p){return o(),t("div",null,e[0]||(e[0]=[l('<h1 id="处理待处理的交易-ask-to-buy" tabindex="-1">处理待处理的交易（Ask to Buy） <a class="header-anchor" href="#处理待处理的交易-ask-to-buy" aria-label="Permalink to &quot;处理待处理的交易（Ask to Buy）&quot;">​</a></h1><p>处理待处理的交易是订阅流程中的关键一环。当用户启用“购买前询问”功能时，交易会进入待处理状态。这意味着需要家庭组织者批准才能完成购买。</p><h2 id="理解-购买前询问-机制" tabindex="-1">理解“购买前询问”机制 <a class="header-anchor" href="#理解-购买前询问-机制" aria-label="Permalink to &quot;理解“购买前询问”机制&quot;">​</a></h2><p>“购买前询问”是Apple家庭共享的一项重要功能。它赋予了家庭组织者对家庭成员购买行为的控制权。当未成年人尝试购买应用内商品时，购买请求会发送给组织者。</p><p>组织者会收到通知，并可以选择批准或拒绝该购买。这个过程确保了家庭预算的有效管理。它也为家长提供了监督孩子消费的工具。</p><h2 id="监听待处理交易的状态" tabindex="-1">监听待处理交易的状态 <a class="header-anchor" href="#监听待处理交易的状态" aria-label="Permalink to &quot;监听待处理交易的状态&quot;">​</a></h2><p>为了妥善处理这些交易，您的应用需要监听其状态变化。StoreKit 2提供了强大的工具来管理这一点。您可以使用<code>Transaction.updates</code>来观察所有交易的更新。</p><p>当交易状态变为待处理时，您应该向用户提供明确的反馈。例如，您可以显示一个消息，告知他们购买正在等待批准。这能显著提升用户体验。</p><h2 id="处理待处理交易的步骤" tabindex="-1">处理待处理交易的步骤 <a class="header-anchor" href="#处理待处理交易的步骤" aria-label="Permalink to &quot;处理待处理交易的步骤&quot;">​</a></h2><p>处理待处理交易涉及几个关键步骤。遵循这些步骤可以确保您的应用能够无缝地集成此功能。</p><ol><li><p><strong>识别待处理交易</strong>：</p><ul><li>在<code>Transaction.updates</code>流中，检查交易的<code>Transaction.currentEntitlement</code>。</li><li>如果交易的<code>ownershipType</code>是<code>.familyShared</code>且<code>isUpgraded</code>为<code>false</code>，则可能是待处理交易。</li><li>您还可以检查<code>Transaction.currentEntitlement.isPending</code>属性。</li></ul></li><li><p><strong>通知用户</strong>：</p><ul><li>当检测到待处理交易时，立即通知用户。</li><li>例如，显示一个弹窗或横幅，说明购买正在等待家庭组织者的批准。</li><li>您可以说：“您的购买正在等待家庭组织者的批准。请稍候。⏳”</li></ul></li><li><p><strong>等待批准</strong>：</p><ul><li>您的应用需要持续监听交易状态。</li><li>一旦家庭组织者批准了购买，交易状态将更新。</li><li>此时，您可以完成交易并解锁相应的内容。</li></ul></li><li><p><strong>处理拒绝</strong>：</p><ul><li>如果家庭组织者拒绝了购买，交易将失败。</li><li>您应该通知用户购买已被拒绝，并提供重新尝试的选项。</li><li>例如：“您的购买请求已被拒绝。您可以稍后重试。😔”</li></ul></li></ol><h2 id="最佳实践与用户体验" tabindex="-1">最佳实践与用户体验 <a class="header-anchor" href="#最佳实践与用户体验" aria-label="Permalink to &quot;最佳实践与用户体验&quot;">​</a></h2><p>提供清晰的用户界面和反馈至关重要。用户应该始终知道他们的购买处于哪个阶段。</p><ul><li><strong>即时反馈</strong>：一旦用户发起购买，立即显示加载指示器或状态消息。</li><li><strong>明确指示</strong>：如果交易待处理，明确告知用户原因和下一步操作。</li><li><strong>持续监听</strong>：即使应用在后台，也要确保能够接收到交易更新。</li><li><strong>错误处理</strong>：优雅地处理所有可能的错误情况，包括网络问题或StoreKit错误。</li></ul><p>通过精心设计这些流程，您可以为用户提供流畅且无压力的购买体验。这不仅能提高用户满意度，还能增加您的应用收入。🚀</p>',15)]))}const h=a(i,[["render",r]]);export{_ as __pageData,h as default};
