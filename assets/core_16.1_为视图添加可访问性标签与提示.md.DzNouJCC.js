import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"为视图添加可访问性标签与提示","description":"","frontmatter":{},"headers":[],"relativePath":"core/16.1_为视图添加可访问性标签与提示.md","filePath":"core/16.1_为视图添加可访问性标签与提示.md"}'),t={name:"core/16.1_为视图添加可访问性标签与提示.md"};function l(p,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="为视图添加可访问性标签与提示" tabindex="-1">为视图添加可访问性标签与提示 <a class="header-anchor" href="#为视图添加可访问性标签与提示" aria-label="Permalink to &quot;为视图添加可访问性标签与提示&quot;">​</a></h1><blockquote><p>为视图添加可访问性标签与提示，让你的App更贴心！🎉</p></blockquote><h2 id="了解可访问性标签的重要性" tabindex="-1">了解可访问性标签的重要性 <a class="header-anchor" href="#了解可访问性标签的重要性" aria-label="Permalink to &quot;了解可访问性标签的重要性&quot;">​</a></h2><p>为视图添加可访问性标签和提示，对于构建包容性强的App至关重要。它能帮助使用辅助技术的用户，例如屏幕阅读器，更好地理解App的内容和功能。想象一下，如果你的App没有这些标签，视力障碍用户将难以导航和使用。这不仅关乎技术，更关乎人文关怀！💖</p><ul><li><strong>提升用户体验：</strong> 确保所有用户都能轻松使用你的App。</li><li><strong>扩大用户群体：</strong> 吸引更多有特殊需求的用户。</li><li><strong>符合法规要求：</strong> 许多国家和地区都有关于App可访问性的法律规定。</li></ul><h2 id="如何添加可访问性标签" tabindex="-1">如何添加可访问性标签 <a class="header-anchor" href="#如何添加可访问性标签" aria-label="Permalink to &quot;如何添加可访问性标签&quot;">​</a></h2><p>SwiftUI 提供了简单而强大的方法来添加可访问性标签和提示。你可以使用 <code>accessibilityLabel</code> 和 <code>accessibilityHint</code> 修饰符。<code>accessibilityLabel</code> 用于描述视图的内容，而 <code>accessibilityHint</code> 则提供关于视图操作的额外说明。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;登录&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">accessibilityLabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;登录按钮&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">accessibilityHint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;点击以进入登录页面&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这段代码为“登录”按钮添加了可访问性标签和提示。屏幕阅读器会读出“登录按钮，点击以进入登录页面”，帮助用户理解按钮的功能。是不是很简单？😊</p><h2 id="实践案例-优化图像的可访问性" tabindex="-1">实践案例：优化图像的可访问性 <a class="header-anchor" href="#实践案例-优化图像的可访问性" aria-label="Permalink to &quot;实践案例：优化图像的可访问性&quot;">​</a></h2><p>图像是App中常见的元素，但如果没有适当的描述，对于视力障碍用户来说，它们就如同虚设。使用 <code>accessibilityLabel</code> 为图像添加描述，让每个人都能理解图像的含义。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;profile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">accessibilityLabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;用户头像&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>更进一步，你可以使用 <code>accessibilityHidden</code> 来隐藏那些不包含重要信息的装饰性图像，避免屏幕阅读器读取无意义的内容。</p><h2 id="动态更新可访问性标签" tabindex="-1">动态更新可访问性标签 <a class="header-anchor" href="#动态更新可访问性标签" aria-label="Permalink to &quot;动态更新可访问性标签&quot;">​</a></h2><p>在某些情况下，视图的内容可能会动态变化。这时，你需要确保可访问性标签也能同步更新。使用 <code>@State</code> 变量来存储标签文本，并在内容变化时更新它。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;未读消息&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">accessibilityLabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;刷新&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;3条未读消息&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>这样，当消息数量更新时，屏幕阅读器也会读出最新的消息状态。记住，保持可访问性标签的准确性至关重要！👍</p><p>通过以上方法，你可以轻松地为你的SwiftUI App添加可访问性标签和提示，让更多人能够享受到科技带来的便利。行动起来，让你的App更具包容性吧！💪</p>`,18)]))}const E=i(t,[["render",l]]);export{o as __pageData,E as default};
