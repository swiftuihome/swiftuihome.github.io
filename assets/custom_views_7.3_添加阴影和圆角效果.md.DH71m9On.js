import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.ymCRTBvy.js";const E=JSON.parse('{"title":"添加阴影和圆角效果","description":"","frontmatter":{},"headers":[],"relativePath":"custom_views/7.3_添加阴影和圆角效果.md","filePath":"custom_views/7.3_添加阴影和圆角效果.md"}'),l={name:"custom_views/7.3_添加阴影和圆角效果.md"};function e(h,s,p,r,k,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="添加阴影和圆角效果" tabindex="-1">添加阴影和圆角效果 <a class="header-anchor" href="#添加阴影和圆角效果" aria-label="Permalink to &quot;添加阴影和圆角效果&quot;">​</a></h1><h2 id="提升视觉美感-圆角与阴影" tabindex="-1">提升视觉美感：圆角与阴影 <a class="header-anchor" href="#提升视觉美感-圆角与阴影" aria-label="Permalink to &quot;提升视觉美感：圆角与阴影&quot;">​</a></h2><p>为你的信息卡片添加圆角和阴影效果，能够显著提升其视觉吸引力。这不仅让卡片看起来更柔和、更现代，还能在视觉上将其从背景中“抬升”出来，增加层次感。✨</p><p>你可以轻松地在 SwiftUI 中实现这些效果。</p><h2 id="实现圆角效果" tabindex="-1">实现圆角效果 <a class="header-anchor" href="#实现圆角效果" aria-label="Permalink to &quot;实现圆角效果&quot;">​</a></h2><p>圆角是设计中非常常见的元素，它能让界面看起来更友好。在 SwiftUI 中，你可以使用 <code>cornerRadius()</code> 修饰符来为视图添加圆角。</p><p>例如，你可以这样设置一个矩形的圆角：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RoundedRectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cornerRadius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color.white)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这会创建一个圆角半径为 10 的白色矩形。对于你的信息卡片，通常会将其应用于卡片的背景视图上。</p><ul><li><strong>选择合适的半径：</strong> 10到20点通常是一个不错的起始点。</li><li><strong>保持一致性：</strong> 在整个应用中保持圆角风格的一致性非常重要。</li></ul><h2 id="添加阴影效果" tabindex="-1">添加阴影效果 <a class="header-anchor" href="#添加阴影效果" aria-label="Permalink to &quot;添加阴影效果&quot;">​</a></h2><p>阴影是创建深度感和层次感的强大工具。它能让你的卡片看起来像是浮在屏幕上方。在 SwiftUI 中，<code>shadow()</code> 修饰符提供了丰富的自定义选项。</p><p>你可以控制阴影的颜色、半径、X轴和Y轴偏移量。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Color.black.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个例子创建了一个半透明的黑色阴影，半径为 5，并向下偏移了 5 个点。</p><ul><li><strong>颜色和不透明度：</strong> 通常使用黑色或深灰色，并调整不透明度使其看起来更自然。</li><li><strong>半径：</strong> 较大的半径会使阴影更柔和、更扩散。</li><li><strong>偏移量：</strong> 调整 X 和 Y 轴的偏移量可以模拟光源的方向。</li></ul><h2 id="组合应用与最佳实践" tabindex="-1">组合应用与最佳实践 <a class="header-anchor" href="#组合应用与最佳实践" aria-label="Permalink to &quot;组合应用与最佳实践&quot;">​</a></h2><p>将圆角和阴影结合起来，你的信息卡片会立刻变得生动起来。想象一下，一个带有柔和圆角和微妙阴影的卡片，它会多么吸引用户的目光！🤩</p><p>以下是一些最佳实践：</p><ol><li><strong>顺序很重要：</strong> 通常先应用 <code>cornerRadius()</code>，然后再应用 <code>shadow()</code>。</li><li><strong>测试不同参数：</strong> 尝试不同的阴影参数，直到找到最适合你设计风格的效果。</li><li><strong>性能考量：</strong> 过多的复杂阴影可能会影响性能，尤其是在列表或滚动视图中。</li></ol><p>通过这些简单的修饰符，你就能让你的 SwiftUI 视图组件库中的信息卡片视图焕发光彩。用户会非常喜欢这种精致的细节！大约 85% 的用户表示，带有良好视觉效果的界面更能吸引他们。</p>`,21)]))}const g=i(l,[["render",e]]);export{E as __pageData,g as default};
