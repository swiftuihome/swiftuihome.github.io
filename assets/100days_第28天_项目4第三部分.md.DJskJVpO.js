import{_ as t,c as o,o as r,ag as l}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"第28天 项目 4 第三部分","description":"","frontmatter":{},"headers":[],"relativePath":"100days/第28天_项目4第三部分.md","filePath":"100days/第28天_项目4第三部分.md"}'),i={name:"100days/第28天_项目4第三部分.md"};function s(a,e,n,c,d,p){return r(),o("div",null,e[0]||(e[0]=[l('<h1 id="第28天-项目-4-第三部分" tabindex="-1">第28天 项目 4 第三部分 <a class="header-anchor" href="#第28天-项目-4-第三部分" aria-label="Permalink to &quot;第28天 项目 4 第三部分&quot;">​</a></h1><p>这个项目为你提供了练习 SwiftUI 基础知识的机会，让你学习一些新的 UI 控件（如<code>DatePicker</code>和<code>Stepper</code>），亲身体验 Swift 在处理日期方面的便捷性，并且 —— 纯粹为了乐趣 —— 略微涉足机器学习领域。</p><p>这些知识模块彼此独立，也就是说，你现在可以在其他项目中单独使用<code>Stepper</code>、<code>DateComponents</code>或 Create ML—— 你学到的这些内容可以在任何你需要的地方发挥作用。随着你在 SwiftUI 学习之路上不断推进，你会积累越来越多这样的 “拼图碎片”，久而久之，你会发现自己拥有数百个可重新组合、构建的碎片，从而创造出出色的作品。</p><p>我最喜欢的史蒂夫・乔布斯的一句名言是：</p><blockquote><p>“创造力就是把事物联系起来。当你问有创造力的人他们是如何做成某件事的，他们会有点愧疚，因为他们其实并没有真正‘做’这件事，只是发现了它。过一段时间后，这对他们来说似乎变得显而易见。这是因为他们能够将自己的过往经历联系起来，进而合成新的事物。”</p></blockquote><p>这就是我希望你在 SwiftUI 学习中达到的境界 —— 当你有一个新的项目想法时，你知道可以借鉴项目 1、项目 3、项目 4 乃至更多项目中的部分内容，并且能立刻完成目标的 75%。你一定能做到的，只要每天坚持学习！</p><p><strong>今天你应该完成项目 4 的总结章节，做完相关复习，然后完成所有三个挑战任务。</strong></p><ul><li>BetterRest：总结</li><li>项目 4：BetterRest 复习</li></ul><h2 id="betterrest-总结" tabindex="-1">BetterRest：总结 <a class="header-anchor" href="#betterrest-总结" aria-label="Permalink to &quot;BetterRest：总结&quot;">​</a></h2><p>作者：Paul Hudson 2021 年 10 月 27 日</p><p>这个项目让你有机会练习表单和绑定相关知识，同时还介绍了<code>DatePicker</code>、<code>Stepper</code>、<code>Date</code>、<code>DateComponents</code>等内容，此外还展示了如何在导航栏中放置按钮 —— 这些都是你以后会反复用到的知识，所以我希望能尽早让你接触并掌握。</p><p>当然，我也借此机会让你初步了解了使用苹果框架所能构建的一些精彩功能，这一切都要归功于 Create ML 和 Core ML。正如你所看到的，这些框架让我们能够借助数十年的机器学习研究与开发成果，而这一切只需通过拖放式用户界面和几行代码就能实现 —— 简直再简单不过了。</p><p>机器学习真正迷人的地方在于，它并不需要在宏大或复杂的场景中才能发挥作用。你可以用机器学习来预测二手车价格、识别用户手写内容，甚至检测图像中的人脸。而且最重要的是，整个过程都在用户的设备上进行，完全保障隐私。</p><h2 id="回顾所学内容" tabindex="-1">回顾所学内容 <a class="header-anchor" href="#回顾所学内容" aria-label="Permalink to &quot;回顾所学内容&quot;">​</a></h2><p>任何人都能看完一个教程，但要记住所学的知识则需要切实的努力。确保你能从这些教程中收获尽可能多的知识是我的职责，请完成后面的练习题，帮助你检验自己的学习成果。</p><h2 id="挑战任务" tabindex="-1">挑战任务 <a class="header-anchor" href="#挑战任务" aria-label="Permalink to &quot;挑战任务&quot;">​</a></h2><p>学习编程最好的方法之一就是尽可能多地自己编写代码，因此我为你准备了三种扩展这个应用的方式，确保你能完全理解其中的原理：</p><ol><li>用<code>Section</code>替换表单中的每个<code>VStack</code>，其中文本视图作为分区的标题。你更喜欢这种布局还是<code>VStack</code>布局？这是你的应用 —— 由你决定！</li><li>用一个<code>Picker</code>（选择器）替换 “咖啡杯数” 的步进器，<code>Picker</code>需显示与原步进器相同范围的值。</li><li>调整用户界面，使其始终以美观且较大的字体显示推荐的就寝时间。这样你就可以完全移除 “计算” 按钮了。</li></ol><h2 id="【练习题】betterrest" tabindex="-1">【练习题】BetterRest <a class="header-anchor" href="#【练习题】betterrest" aria-label="Permalink to &quot;【练习题】BetterRest&quot;">​</a></h2><p>问题 1/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> Swift 有一个用于处理日期的内置类型。</li><li><strong>选项 2：</strong> 我们应该将<code>DatePicker</code>绑定到一个整数。</li></ul><p>问题 2/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> Create ML 应用可以从 CSV 文件中训练模型。</li><li><strong>选项 2：</strong> 警告消息中的文本不能包含字符串插值。</li></ul><p>问题 3/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> 我们可以通过对日期调用<code>addingTimeInterval()</code>方法，为其添加指定秒数。</li><li><strong>选项 2：</strong> 创建日期范围时，必须同时提供起始值和结束值。</li></ul><p>问题 4/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> 一天总有 86400 秒。</li><li><strong>选项 2：</strong> 当用于<code>Double</code>类型时，<code>formatted()</code>方法会让 SwiftUI 忽略无意义的零。</li></ul><p>问题 5/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> <code>Stepper</code>视图允许用户通过点击来增减某个值。</li><li><strong>选项 2：</strong> 标题（headline）字体大小是动态类型（Dynamic Type）提供的最大字体大小。</li></ul><p>问题 6/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> 我们可以通过引用另一个存储属性来设置某个存储属性的初始值。</li><li><strong>选项 2：</strong> 静态属性（static properties）归类型本身所有，而非该类型的实例所有。</li></ul><p>问题 7/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> 日期选择器（Date pickers）可以显示日期、时间，或同时显示两者。</li><li><strong>选项 2：</strong> 步进器（Steppers）只能处理整数。</li></ul><p>问题 8/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> 要移除日期选择器的标签，我们应使用<code>labelsHidden()</code>方法。</li><li><strong>选项 2：</strong> 日期处理非常简单，我们都应该编写自定义的日期逻辑。</li></ul><p>问题 9/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> 苹果允许我们通过 MLKit 训练机器学习模型。</li><li><strong>选项 2：</strong> 我们可以创建日期范围。</li></ul><p>问题 10/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> 将 Core ML 模型导入 Xcode 后，Xcode 会自动为我们生成一个 Swift 类供使用。</li><li><strong>选项 2：</strong> Core ML 的预测结果始终是准确的。</li></ul><p>问题 11/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> 在从左到右排列的语言中，若在导航栏添加按钮，按钮会显示在右侧。</li><li><strong>选项 2：</strong> SwiftUI 的按钮需要一个闭包，该闭包仅接受被点击的按钮作为其唯一参数。</li></ul><p>问题 12/12：以下哪些陈述是正确的？</p><ul><li><strong>选项 1：</strong> <code>DateComponents</code>类型将日期的各个组成部分以单独的值存储。</li><li><strong>选项 2：</strong> 我们可以通过调用日期的<code>toString()</code>方法，将任何日期转换为字符串。</li></ul>',43)]))}const _=t(i,[["render",s]]);export{u as __pageData,_ as default};
