import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"水平布局容器(HStack)","description":"","frontmatter":{},"headers":[],"relativePath":"base/3.2_水平布局容器(HStack).md","filePath":"base/3.2_水平布局容器(HStack).md"}'),e={name:"base/3.2_水平布局容器(HStack).md"};function l(p,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="水平布局容器-hstack" tabindex="-1">水平布局容器(HStack) <a class="header-anchor" href="#水平布局容器-hstack" aria-label="Permalink to &quot;水平布局容器(HStack)&quot;">​</a></h1><p>在 SwiftUI 中，<code>HStack</code> 是一个强大的布局容器，它能将多个视图水平排列。想象一下，你正在设计一个导航栏，里面有几个图标和文本，<code>HStack</code> 就能完美地帮你实现这种布局。它非常适合创建并排显示元素的界面。</p><h2 id="hstack-的基本用法" tabindex="-1">HStack 的基本用法 <a class="header-anchor" href="#hstack-的基本用法" aria-label="Permalink to &quot;HStack 的基本用法&quot;">​</a></h2><p>使用 <code>HStack</code> 非常简单直观。你只需要将想要水平排列的视图放入 <code>HStack</code> 的闭包中。SwiftUI 会自动处理这些视图的水平对齐和间距。这大大简化了布局代码，让你能专注于内容本身。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;左边&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">systemName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;arrow.right.circle.fill&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;右边&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上面的代码会创建一个包含两个文本视图和一个系统图标的水平布局。它们会从左到右依次排列。这种简洁的语法是 SwiftUI 魅力的一部分！</p><h2 id="对齐与间距控制-📏" tabindex="-1">对齐与间距控制 📏 <a class="header-anchor" href="#对齐与间距控制-📏" aria-label="Permalink to &quot;对齐与间距控制 📏&quot;">​</a></h2><p><code>HStack</code> 提供了灵活的对齐和间距选项，让你能精确控制视图的布局。你可以通过 <code>alignment</code> 参数来指定垂直对齐方式，例如 <code>.top</code>、<code>.center</code> 或 <code>.bottom</code>。默认情况下，视图是垂直居中对齐的。</p><ul><li><strong>对齐方式</strong>: <ul><li><code>.top</code>: 所有视图顶部对齐。</li><li><code>.center</code>: 所有视图垂直居中对齐（默认）。</li><li><code>.bottom</code>: 所有视图底部对齐。</li></ul></li></ul><p>你还可以使用 <code>spacing</code> 参数来调整视图之间的水平间距。默认间距通常是 8 点，但你可以根据设计需求进行调整。例如，设置 <code>spacing: 20</code> 会让视图之间有更大的间隔。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .bottom, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;底部对齐&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.largeTitle)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">systemName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;star.fill&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.title)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;更多空间&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这个例子展示了如何将视图底部对齐，并增加它们之间的间距。灵活的控制让你的界面设计更加精细。</p><h2 id="实际应用场景-💡" tabindex="-1">实际应用场景 💡 <a class="header-anchor" href="#实际应用场景-💡" aria-label="Permalink to &quot;实际应用场景 💡&quot;">​</a></h2><p><code>HStack</code> 在实际应用中无处不在。例如，在电商应用中，商品列表的每一行可能包含商品图片、名称和价格，这些元素通常会用 <code>HStack</code> 来组织。根据统计，大约 70% 的 iOS 应用界面都会用到 <code>HStack</code> 来实现水平布局。</p><ul><li><strong>导航栏</strong>: 放置标题、按钮或图标。</li><li><strong>列表行</strong>: 组织一行中的多个数据点，如头像、用户名和时间戳。</li><li><strong>表单元素</strong>: 将标签和输入框水平排列。</li></ul><p>掌握 <code>HStack</code> 的使用，将极大地提升你构建 SwiftUI 界面的效率和能力。它为你提供了构建美观、响应式界面的坚实基础。继续探索，你会发现更多令人兴奋的布局可能性！</p>`,16)]))}const E=i(e,[["render",l]]);export{o as __pageData,E as default};
