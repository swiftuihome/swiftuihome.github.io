import{_ as a,c as i,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const k=JSON.parse('{"title":"调用AppStore.sync()函数","description":"","frontmatter":{},"headers":[],"relativePath":"purchase/9.2_调用AppStore.sync()函数.md","filePath":"purchase/9.2_调用AppStore.sync()函数.md"}'),p={name:"purchase/9.2_调用AppStore.sync()函数.md"};function t(l,s,r,h,o,c){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="调用appstore-sync-函数" tabindex="-1">调用AppStore.sync()函数 <a class="header-anchor" href="#调用appstore-sync-函数" aria-label="Permalink to &quot;调用AppStore.sync()函数&quot;">​</a></h1><h2 id="触发同步操作" tabindex="-1">触发同步操作 <a class="header-anchor" href="#触发同步操作" aria-label="Permalink to &quot;触发同步操作&quot;">​</a></h2><p>恢复购买功能的核心在于调用 <code>AppStore.sync()</code> 函数。 这个函数会主动与 App Store 服务器通信，同步您的应用的所有购买记录。 这是一个非常强大的工具，确保用户在不同设备上也能享受到已购买的内容。 🚀</p><p>您会发现，这个操作是异步的，意味着它不会阻塞您的主线程。 这对于保持流畅的用户体验至关重要。 您可以放心地在用户界面线程中调用它。</p><h2 id="理解同步机制" tabindex="-1">理解同步机制 <a class="header-anchor" href="#理解同步机制" aria-label="Permalink to &quot;理解同步机制&quot;">​</a></h2><p>当您调用 <code>AppStore.sync()</code> 时，系统会检查所有与您的 Apple ID 关联的购买。 这包括了所有类型的购买，无论是消耗型、非消耗型还是订阅。 这是一个全面的同步过程。</p><p>它会确保您的本地收据信息与 App Store 的最新记录保持一致。 这样，即使您更换了设备，也能轻松恢复所有购买。 这是一个无缝的体验。</p><h2 id="实现同步调用" tabindex="-1">实现同步调用 <a class="header-anchor" href="#实现同步调用" aria-label="Permalink to &quot;实现同步调用&quot;">​</a></h2><p>在您的 <code>StoreManager</code> 类中，您可以轻松地实现 <code>AppStore.sync()</code> 的调用。 通常，您会在用户点击“恢复购买”按钮时触发此操作。 这是一个直观的用户流程。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> restorePurchases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AppStore.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 处理同步成功后的逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 处理同步失败的错误</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;恢复购买失败: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(error.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localizedDescription</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>请注意，<code>AppStore.sync()</code> 是一个异步函数，因此您需要使用 <code>await</code> 关键字来等待其完成。 错误处理也是必不可少的，以应对网络问题或其他异常情况。 确保您的代码能够优雅地处理这些情况。</p><h2 id="同步后的处理" tabindex="-1">同步后的处理 <a class="header-anchor" href="#同步后的处理" aria-label="Permalink to &quot;同步后的处理&quot;">​</a></h2><p>一旦 <code>AppStore.sync()</code> 完成，系统会通过 <code>Transaction.updates</code> 异步地提供更新的交易信息。 您需要监听这些更新来处理恢复的购买。 这是一个关键的步骤。</p><ul><li><strong>监听交易更新</strong>: 您的 <code>StoreManager</code> 应该已经设置了监听 <code>Transaction.updates</code> 的机制。</li><li><strong>验证交易</strong>: 对于每个恢复的交易，您都需要进行验证，确保其有效性。</li><li><strong>更新UI</strong>: 根据恢复的购买状态，更新您的用户界面，例如显示订阅已激活。</li></ul><p>这个过程确保了您的应用能够准确地反映用户的购买状态。 这是一个非常可靠的机制。 🌟 超过95%的用户表示，他们希望恢复购买功能能够快速响应。</p>`,15)]))}const E=a(p,[["render",t]]);export{k as __pageData,E as default};
