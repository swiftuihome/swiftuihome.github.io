import{_ as s,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const E=JSON.parse('{"title":"设置动画时长、延迟和选项","description":"","frontmatter":{},"headers":[],"relativePath":"swift/uikit/advanced/13.2_设置动画时长、延迟和选项.md","filePath":"swift/uikit/advanced/13.2_设置动画时长、延迟和选项.md"}'),t={name:"swift/uikit/advanced/13.2_设置动画时长、延迟和选项.md"};function l(p,i,h,k,r,d){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="设置动画时长、延迟和选项" tabindex="-1">设置动画时长、延迟和选项 <a class="header-anchor" href="#设置动画时长、延迟和选项" aria-label="Permalink to &quot;设置动画时长、延迟和选项&quot;">​</a></h1><p>设置动画时长、延迟和选项，让你的动画更具个性！🎉 你可以通过调整动画的时长、延迟和选项，来创造出各种各样的动画效果。这就像给你的动画赋予了灵魂，让它们更加生动有趣。</p><h2 id="动画时长-duration" tabindex="-1">动画时长（Duration） <a class="header-anchor" href="#动画时长-duration" aria-label="Permalink to &quot;动画时长（Duration）&quot;">​</a></h2><p>动画时长决定了动画播放的时间长度。时长越长，动画播放得越慢；时长越短，动画播放得越快。你可以使用 <code>UIView.animate(withDuration:animations:)</code> 方法来设置动画时长。例如，设置动画时长为 2 秒：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UIView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">withDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 动画代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>动画时长以秒为单位。选择合适的时长，让你的动画既不会太快而显得仓促，也不会太慢而显得拖沓。通常，0.2 秒到 0.5 秒的时长适用于大多数简单的动画。</p><h2 id="动画延迟-delay" tabindex="-1">动画延迟（Delay） <a class="header-anchor" href="#动画延迟-delay" aria-label="Permalink to &quot;动画延迟（Delay）&quot;">​</a></h2><p>动画延迟是指动画开始播放前等待的时间。你可以使用 <code>UIView.animate(withDuration:delay:options:animations:completion:)</code> 方法来设置动画延迟。例如，设置动画延迟 1 秒：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UIView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">withDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 动画代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>动画延迟也以秒为单位。延迟可以让你控制动画的播放顺序，创造出更加复杂的动画效果。例如，你可以让多个动画依次播放，或者让一个动画在另一个动画结束后再开始播放。</p><h2 id="动画选项-options" tabindex="-1">动画选项（Options） <a class="header-anchor" href="#动画选项-options" aria-label="Permalink to &quot;动画选项（Options）&quot;">​</a></h2><p>动画选项提供了更多的控制动画行为的方式。你可以使用 <code>UIView.animate(withDuration:delay:options:animations:completion:)</code> 方法来设置动画选项。<code>UIView.AnimationOptions</code> 是一个枚举类型，包含了各种各样的动画选项。</p><p>以下是一些常用的动画选项：</p><ul><li><code>.curveLinear</code>：线性动画，动画速度恒定。</li><li><code>.curveEaseIn</code>：缓入动画，动画开始时速度较慢，然后逐渐加快。</li><li><code>.curveEaseOut</code>：缓出动画，动画开始时速度较快，然后逐渐减慢。</li><li><code>.curveEaseInOut</code>：缓入缓出动画，动画开始和结束时速度较慢，中间速度较快。</li><li><code>.repeat</code>：重复动画，动画会无限循环播放。</li><li><code>.autoreverse</code>：自动反向动画，动画播放完后会反向播放。</li></ul><p>你可以组合使用多个动画选项，例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UIView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">withDuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [.curveEaseInOut, .autoreverse], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 动画代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">completion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这个例子中，动画会以缓入缓出的方式播放，并且在播放完后会自动反向播放。</p><p>通过灵活运用动画时长、延迟和选项，你可以创造出各种各样令人惊艳的动画效果！ 🚀 记住，实践是最好的老师，多尝试不同的组合，你会发现更多有趣的动画技巧。 动画的世界充满无限可能，尽情发挥你的创造力吧！🎨</p>`,18)]))}const c=s(t,[["render",l]]);export{E as __pageData,c as default};
