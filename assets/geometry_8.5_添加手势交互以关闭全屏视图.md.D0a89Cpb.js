import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.Bw-5EFTY.js";const g=JSON.parse('{"title":"添加手势交互以关闭全屏视图","description":"","frontmatter":{},"headers":[],"relativePath":"geometry/8.5_添加手势交互以关闭全屏视图.md","filePath":"geometry/8.5_添加手势交互以关闭全屏视图.md"}'),e={name:"geometry/8.5_添加手势交互以关闭全屏视图.md"};function p(t,s,h,k,r,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="添加手势交互以关闭全屏视图" tabindex="-1">添加手势交互以关闭全屏视图 <a class="header-anchor" href="#添加手势交互以关闭全屏视图" aria-label="Permalink to &quot;添加手势交互以关闭全屏视图&quot;">​</a></h1><p>太棒了！让我们一起为你的照片墙应用添加手势交互，让关闭全屏视图变得更加自然流畅！🎉</p><h2 id="添加拖动手势" tabindex="-1">添加拖动手势 <a class="header-anchor" href="#添加拖动手势" aria-label="Permalink to &quot;添加拖动手势&quot;">​</a></h2><p>首先，我们需要添加一个拖动手势，让用户可以通过拖动来关闭全屏视图。这会给用户一种直接控制的感觉，增强交互性。💪</p><ul><li>使用 <code>DragGesture()</code> 来检测用户的拖动手势。</li><li>记录拖动的位移量，并根据位移量来调整全屏视图的位置和透明度。</li><li>当拖动结束后，根据拖动的距离和速度来判断是否关闭全屏视图。</li></ul><h2 id="实现平滑过渡动画" tabindex="-1">实现平滑过渡动画 <a class="header-anchor" href="#实现平滑过渡动画" aria-label="Permalink to &quot;实现平滑过渡动画&quot;">​</a></h2><p>为了让关闭过程更加美观，我们可以添加一些平滑的过渡动画。这能让用户体验更上一层楼！✨</p><ol><li>使用 <code>withAnimation</code> 来包裹视图的属性变化，例如位置和透明度。</li><li>调整动画的曲线和时长，以达到最佳的视觉效果。</li><li>可以尝试不同的动画效果，例如 <code>easeInOut</code>、<code>spring</code> 等，找到最适合你的应用的动画。</li></ol><h2 id="优化用户体验" tabindex="-1">优化用户体验 <a class="header-anchor" href="#优化用户体验" aria-label="Permalink to &quot;优化用户体验&quot;">​</a></h2><p>除了基本的拖动关闭功能，我们还可以添加一些额外的交互来优化用户体验。</p><ul><li><strong>添加阻尼效果：</strong> 当拖动到一定程度时，添加阻尼效果，让用户感受到“拉不动”的感觉。</li><li><strong>根据拖动速度调整关闭阈值：</strong> 如果用户快速拖动，可以降低关闭的阈值，让关闭更加灵敏。</li><li><strong>添加视觉反馈：</strong> 在拖动过程中，可以改变背景颜色或添加阴影效果，给用户提供视觉反馈。</li></ul><h2 id="代码示例" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例" aria-label="Permalink to &quot;代码示例&quot;">​</a></h2><p>以下是一个简单的代码示例，展示如何添加拖动手势来关闭全屏视图：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@GestureState</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dragOffset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CGSize.zero</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isFullScreen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaleEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(isFullScreen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">offset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dragOffset)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gesture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            DragGesture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updating</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($dragOffset, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { (value, state, transaction) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value.translation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onEnded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value.translation.height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        withAnimation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            isFullScreen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>希望这些技巧能帮助你打造一个更加流畅、自然的“魔法移动”照片墙效果！ 🚀 记住，不断尝试和调整，才能找到最适合你的应用的交互方式。加油！ 😃</p>`,15)]))}const c=i(e,[["render",p]]);export{g as __pageData,c as default};
