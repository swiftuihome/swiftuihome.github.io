import{_ as a,c as i,o as n,ag as p}from"./chunks/framework.ymCRTBvy.js";const E=JSON.parse('{"title":"onAppear/onDisappear 在导航中的行为 🚀","description":"","frontmatter":{},"headers":[],"relativePath":"lifecycle/12.3_onAppear-onDisappear在导航中的行为.md","filePath":"lifecycle/12.3_onAppear-onDisappear在导航中的行为.md"}'),e={name:"lifecycle/12.3_onAppear-onDisappear在导航中的行为.md"};function l(t,s,h,r,k,o){return n(),i("div",null,s[0]||(s[0]=[p(`<h1 id="onappear-ondisappear-在导航中的行为-🚀" tabindex="-1"><code>onAppear</code>/<code>onDisappear</code> 在导航中的行为 🚀 <a class="header-anchor" href="#onappear-ondisappear-在导航中的行为-🚀" aria-label="Permalink to &quot;\`onAppear\`/\`onDisappear\` 在导航中的行为 🚀&quot;">​</a></h1><blockquote><p>在 SwiftUI 中，<code>onAppear</code> 和 <code>onDisappear</code> 是视图生命周期中非常重要的两个方法。它们分别在视图出现和消失时被调用。当视图在 <code>NavigationStack</code> 中导航时，它们的行为会变得更加有趣！让我们一起探索一下吧！</p></blockquote><h2 id="导航栈中的视图生命周期" tabindex="-1">导航栈中的视图生命周期 <a class="header-anchor" href="#导航栈中的视图生命周期" aria-label="Permalink to &quot;导航栈中的视图生命周期&quot;">​</a></h2><p>当你在 <code>NavigationStack</code> 中 push 一个新的视图时，前一个视图并不会立即从内存中移除。它仍然存在于导航栈中，只是不可见而已。这意味着前一个视图的 <code>onDisappear</code> 方法<strong>不会</strong>立即被调用。只有当视图真正从导航栈中移除时，<code>onDisappear</code> 才会执行。</p><ul><li><code>onAppear</code>：当视图被 push 到导航栈并显示时调用。</li><li><code>onDisappear</code>：当视图从导航栈中 pop 出并消失时调用。</li></ul><h2 id="示例代码分析-👨‍💻" tabindex="-1">示例代码分析 👨‍💻 <a class="header-anchor" href="#示例代码分析-👨‍💻" aria-label="Permalink to &quot;示例代码分析 👨‍💻&quot;">​</a></h2><p>假设你有一个列表，点击列表中的某一项会 push 一个新的详情视图。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NavigationStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                NavigationLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;详情页&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    DetailView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">navigationTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;列表&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DetailView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;详情内容&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onAppear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DetailView appeared!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onDisappear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DetailView disappeared!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">navigationTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;详情&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>在这个例子中，当你点击 &quot;详情页&quot; 链接时，<code>DetailView</code> 的 <code>onAppear</code> 会被调用。当你返回到列表页时，<code>DetailView</code> 的 <code>onDisappear</code> <strong>不会</strong>立即被调用。只有当 <code>ContentView</code> 本身被移除时，<code>DetailView</code> 的 <code>onDisappear</code> 才会执行。</p><h2 id="实际应用场景-💡" tabindex="-1">实际应用场景 💡 <a class="header-anchor" href="#实际应用场景-💡" aria-label="Permalink to &quot;实际应用场景 💡&quot;">​</a></h2><p>理解 <code>onAppear</code> 和 <code>onDisappear</code> 在导航中的行为对于管理视图的状态至关重要。例如，你可能需要在视图出现时启动一个定时器，并在视图消失时停止它。</p><ol><li><strong>数据加载</strong>：在 <code>onAppear</code> 中加载数据，确保每次视图显示时数据都是最新的。</li><li><strong>资源管理</strong>：在 <code>onDisappear</code> 中释放资源，避免内存泄漏。</li><li><strong>状态保存</strong>：在 <code>onDisappear</code> 中保存视图的状态，以便下次显示时恢复。</li></ol><h2 id="注意事项-🤔" tabindex="-1">注意事项 🤔 <a class="header-anchor" href="#注意事项-🤔" aria-label="Permalink to &quot;注意事项 🤔&quot;">​</a></h2><ul><li><code>onAppear</code> 和 <code>onDisappear</code> 可能会被多次调用，特别是在复杂的导航结构中。</li><li>不要在 <code>onAppear</code> 中执行耗时操作，以免阻塞 UI 线程。</li><li>使用 <code>onDisappear</code> 来清理资源，确保应用程序的性能和稳定性。</li></ul><p>希望这些解释能帮助你更好地理解 <code>onAppear</code> 和 <code>onDisappear</code> 在 SwiftUI 导航中的行为！继续加油，你一定可以掌握 SwiftUI 的精髓！💪</p>`,15)]))}const c=a(e,[["render",l]]);export{E as __pageData,c as default};
