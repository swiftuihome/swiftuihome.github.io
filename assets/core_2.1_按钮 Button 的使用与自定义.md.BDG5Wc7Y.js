import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bw-5EFTY.js";const E=JSON.parse('{"title":"按钮 Button 的使用与自定义","description":"","frontmatter":{},"headers":[],"relativePath":"core/2.1_按钮 Button 的使用与自定义.md","filePath":"core/2.1_按钮 Button 的使用与自定义.md"}'),l={name:"core/2.1_按钮 Button 的使用与自定义.md"};function e(p,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="按钮-button-的使用与自定义" tabindex="-1">按钮 Button 的使用与自定义 <a class="header-anchor" href="#按钮-button-的使用与自定义" aria-label="Permalink to &quot;按钮 Button 的使用与自定义&quot;">​</a></h1><h2 id="swiftui-中的按钮-打造互动体验" tabindex="-1">SwiftUI 中的按钮：打造互动体验 <a class="header-anchor" href="#swiftui-中的按钮-打造互动体验" aria-label="Permalink to &quot;SwiftUI 中的按钮：打造互动体验&quot;">​</a></h2><p>在 SwiftUI 中，<strong>Button</strong> 是构建用户界面的基石，它让你的应用能够响应用户的操作。你可以使用它来触发各种事件，从简单的导航到复杂的数据处理。让我们一起探索如何使用和自定义按钮，为你的应用增添活力！🚀</p><h2 id="基础按钮的使用" tabindex="-1">基础按钮的使用 <a class="header-anchor" href="#基础按钮的使用" aria-label="Permalink to &quot;基础按钮的使用&quot;">​</a></h2><p>创建一个按钮非常简单。你只需要提供一个标题和一个动作即可。例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;点击我&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;按钮被点击了！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这段代码会创建一个显示 &quot;点击我&quot; 的按钮。当用户点击它时，控制台会打印出 &quot;按钮被点击了！&quot;。是不是很简单？你可以根据需要修改标题和动作，实现各种功能。</p><ul><li><strong>文本标签</strong>: 使用字符串作为按钮的标题。</li><li><strong>动作闭包</strong>: 在闭包中编写按钮点击后执行的代码。</li></ul><h2 id="自定义按钮样式" tabindex="-1">自定义按钮样式 <a class="header-anchor" href="#自定义按钮样式" aria-label="Permalink to &quot;自定义按钮样式&quot;">​</a></h2><p>SwiftUI 提供了多种方式来定制按钮的外观。你可以修改按钮的背景颜色、文字颜色、字体等等。这让你可以创建与你的应用风格完美匹配的按钮。🎨</p><ol><li><strong>修改背景颜色</strong>: 使用 <code>.background()</code> 修饰符来设置背景颜色。</li><li><strong>修改文字颜色</strong>: 使用 <code>.foregroundColor()</code> 修饰符来设置文字颜色。</li><li><strong>修改字体</strong>: 使用 <code>.font()</code> 修饰符来设置字体。</li></ol><p>例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;自定义按钮&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;自定义按钮被点击了！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color.blue)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">foregroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.white)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.title)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cornerRadius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>这段代码会创建一个蓝色的、带有白色文字的、圆角标题按钮。你可以根据自己的喜好调整这些属性。</p><h2 id="按钮的各种样式" tabindex="-1">按钮的各种样式 <a class="header-anchor" href="#按钮的各种样式" aria-label="Permalink to &quot;按钮的各种样式&quot;">​</a></h2><p>SwiftUI 提供了多种内置的按钮样式，你可以使用 <code>.buttonStyle()</code> 修饰符来应用它们。这些样式可以让你快速创建不同风格的按钮，而无需手动设置各种属性。</p><ul><li><strong><code>.bordered</code></strong>: 带有边框的按钮。</li><li><strong><code>.borderedProminent</code></strong>: 突出显示的带有边框的按钮。</li><li><strong><code>.plain</code></strong>: 纯文本按钮。</li></ul><p>例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;边框按钮&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;边框按钮被点击了！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">buttonStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.bordered)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="按钮的状态与交互" tabindex="-1">按钮的状态与交互 <a class="header-anchor" href="#按钮的状态与交互" aria-label="Permalink to &quot;按钮的状态与交互&quot;">​</a></h2><p>按钮可以有不同的状态，例如禁用状态。你可以使用 <code>.disabled()</code> 修饰符来禁用按钮。当按钮被禁用时，用户无法点击它。这在某些情况下非常有用，例如当用户没有满足某些条件时。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isDisabled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;禁用按钮&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;禁用按钮被点击了！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(isDisabled)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;切换状态&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    isDisabled.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>这段代码创建了一个可以被禁用的按钮。点击 &quot;切换状态&quot; 按钮可以切换 &quot;禁用按钮&quot; 的禁用状态。🎉</p><p>通过这些方法，你可以创建各种各样的按钮，为你的 SwiftUI 应用增加丰富的交互体验。记住，实践是最好的老师！动手尝试不同的样式和属性，你会发现更多有趣的用法。</p>`,24)]))}const c=i(l,[["render",e]]);export{E as __pageData,c as default};
