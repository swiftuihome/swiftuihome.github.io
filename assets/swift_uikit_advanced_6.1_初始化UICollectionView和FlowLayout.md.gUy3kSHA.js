import{_ as s,c as a,o as l,ag as e}from"./chunks/framework.ymCRTBvy.js";const d=JSON.parse('{"title":"初始化UICollectionView和FlowLayout","description":"","frontmatter":{},"headers":[],"relativePath":"swift/uikit/advanced/6.1_初始化UICollectionView和FlowLayout.md","filePath":"swift/uikit/advanced/6.1_初始化UICollectionView和FlowLayout.md"}'),n={name:"swift/uikit/advanced/6.1_初始化UICollectionView和FlowLayout.md"};function t(h,i,o,p,k,c){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="初始化uicollectionview和flowlayout" tabindex="-1">初始化UICollectionView和FlowLayout <a class="header-anchor" href="#初始化uicollectionview和flowlayout" aria-label="Permalink to &quot;初始化UICollectionView和FlowLayout&quot;">​</a></h1><p>当然！让我们一起探索如何在纯代码中初始化 <code>UICollectionView</code> 和 <code>FlowLayout</code>，为你的 iOS 应用增添强大的数据展示功能！🚀</p><h2 id="创建-flowlayout-实例" tabindex="-1">创建 FlowLayout 实例 <a class="header-anchor" href="#创建-flowlayout-实例" aria-label="Permalink to &quot;创建 FlowLayout 实例&quot;">​</a></h2><p>首先，你需要创建一个 <code>UICollectionViewFlowLayout</code> 的实例。<code>UICollectionViewFlowLayout</code> 负责管理 <code>UICollectionView</code> 中 item 的布局。你可以通过以下代码创建一个基本的 flow layout：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flowLayout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UICollectionViewFlowLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个 flow layout 实例将决定你的 collection view 中 cell 的排列方式，比如是水平滚动还是垂直滚动，以及 cell 之间的间距。</p><h2 id="设置-flowlayout-属性" tabindex="-1">设置 FlowLayout 属性 <a class="header-anchor" href="#设置-flowlayout-属性" aria-label="Permalink to &quot;设置 FlowLayout 属性&quot;">​</a></h2><p>接下来，你可以设置 <code>flowLayout</code> 的各种属性，以定制你的 collection view 的外观和行为。以下是一些常用的属性：</p><ul><li><code>scrollDirection</code>：设置滚动方向，可以是 <code>.horizontal</code>（水平）或 <code>.vertical</code>（垂直）。</li><li><code>itemSize</code>：设置每个 cell 的大小。</li><li><code>minimumInteritemSpacing</code>：设置同一行（或列）中 cell 之间的最小间距。</li><li><code>minimumLineSpacing</code>：设置不同行（或列）之间的最小间距。</li><li><code>sectionInset</code>：设置 collection view 内容区域的边距。</li></ul><p>例如，要创建一个垂直滚动的 collection view，cell 大小为 100x100，cell 之间的最小间距为 10，你可以这样设置：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flowLayout.scrollDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .vertical</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flowLayout.itemSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CGSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flowLayout.minimumInteritemSpacing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flowLayout.minimumLineSpacing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flowLayout.sectionInset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIEdgeInsets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="创建-uicollectionview-实例" tabindex="-1">创建 UICollectionView 实例 <a class="header-anchor" href="#创建-uicollectionview-实例" aria-label="Permalink to &quot;创建 UICollectionView 实例&quot;">​</a></h2><p>现在，你可以使用创建好的 <code>flowLayout</code> 实例来初始化 <code>UICollectionView</code>。<code>UICollectionView</code> 是一个强大的视图，用于展示有序的数据集合。你可以通过以下代码创建一个 <code>UICollectionView</code> 实例：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> collectionView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UICollectionView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .zero, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collectionViewLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: flowLayout)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这里，<code>.zero</code> 表示 collection view 的初始 frame 为空，你需要在后续代码中设置它的 frame。<code>collectionViewLayout</code> 参数传入之前创建的 <code>flowLayout</code> 实例，这样 collection view 就会按照你设置的布局方式来展示 cell。</p><h2 id="配置-uicollectionview-属性" tabindex="-1">配置 UICollectionView 属性 <a class="header-anchor" href="#配置-uicollectionview-属性" aria-label="Permalink to &quot;配置 UICollectionView 属性&quot;">​</a></h2><p>创建 <code>UICollectionView</code> 实例后，你需要配置一些属性，例如：</p><ul><li><code>backgroundColor</code>：设置背景颜色。</li><li><code>delegate</code> 和 <code>dataSource</code>：设置代理和数据源，用于处理 collection view 的交互和数据展示。</li><li><code>register(_:forCellWithReuseIdentifier:)</code>：注册 cell 类，以便 collection view 可以重用 cell。</li></ul><p>例如，要设置背景颜色为白色，并设置代理和数据源，你可以这样写：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">collectionView.backgroundColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .white</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">collectionView.delegate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">collectionView.dataSource </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">collectionView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MyCollectionViewCell.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forCellWithReuseIdentifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyCell&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="添加-uicollectionview-到视图层级" tabindex="-1">添加 UICollectionView 到视图层级 <a class="header-anchor" href="#添加-uicollectionview-到视图层级" aria-label="Permalink to &quot;添加 UICollectionView 到视图层级&quot;">​</a></h2><p>最后，你需要将 <code>UICollectionView</code> 添加到你的视图层级中，并设置约束，以便它可以在屏幕上正确显示。你可以通过以下代码将 collection view 添加到 view 中：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addSubview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(collectionView)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">collectionView.translatesAutoresizingMaskIntoConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NSLayoutConstraint.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    collectionView.topAnchor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view.topAnchor),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    collectionView.bottomAnchor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view.bottomAnchor),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    collectionView.leadingAnchor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view.leadingAnchor),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    collectionView.trailingAnchor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view.trailingAnchor)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>这段代码使用 Auto Layout 来设置 collection view 的约束，使其充满整个 view。确保 <code>translatesAutoresizingMaskIntoConstraints</code> 设置为 <code>false</code>，以便使用 Auto Layout。🎉</p><p>通过以上步骤，你就可以成功地在纯代码中初始化 <code>UICollectionView</code> 和 <code>FlowLayout</code>，并将其添加到你的 iOS 应用中。希望这个教程对你有所帮助！</p>`,25)]))}const E=s(n,[["render",t]]);export{d as __pageData,E as default};
