import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"ScenePhase环境值的使用","description":"","frontmatter":{},"headers":[],"relativePath":"lifecycle/11.2_ScenePhase环境值的使用.md","filePath":"lifecycle/11.2_ScenePhase环境值的使用.md"}'),p={name:"lifecycle/11.2_ScenePhase环境值的使用.md"};function l(h,s,t,k,r,c){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="scenephase环境值的使用" tabindex="-1">ScenePhase环境值的使用 <a class="header-anchor" href="#scenephase环境值的使用" aria-label="Permalink to &quot;ScenePhase环境值的使用&quot;">​</a></h1><blockquote><p>SwiftUI 中的 <code>ScenePhase</code> 环境值，让你能够掌握 App 的活跃状态，简直是太棒了！🎉 你可以根据 App 是在前台、后台还是非活跃状态，来调整你的界面和行为。</p></blockquote><h2 id="什么是-scenephase" tabindex="-1">什么是 ScenePhase？ <a class="header-anchor" href="#什么是-scenephase" aria-label="Permalink to &quot;什么是 ScenePhase？&quot;">​</a></h2><p><code>ScenePhase</code> 是一个环境值，它告诉你 App 的当前场景状态。它有三个可能的值：</p><ul><li><code>.active</code>：App 正在前台运行，并且是活跃的。用户可以与它互动。</li><li><code>.inactive</code>：App 正在前台运行，但不是活跃的。例如，用户可能收到了一个电话，或者正在切换 App。</li><li><code>.background</code>：App 在后台运行。它可能正在执行任务，或者被挂起。</li></ul><h2 id="如何使用-scenephase" tabindex="-1">如何使用 ScenePhase？ <a class="header-anchor" href="#如何使用-scenephase" aria-label="Permalink to &quot;如何使用 ScenePhase？&quot;">​</a></h2><p>你可以使用 <code>@Environment</code> 属性包装器来访问 <code>ScenePhase</code>。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\\.scenePhase) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scenePhase</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后，你可以在你的视图中使用 <code>scenePhase</code> 变量来根据 App 的状态更新你的界面。例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SwiftUI</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\\.scenePhase) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scenePhase</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;App 状态：</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(scenePhase.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: scenePhase) { newPhase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newPhase {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .active</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;App 变为活跃状态！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .inactive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;App 变为非活跃状态！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .background</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;App 进入后台！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                @unknown</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;未知 App 状态！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>在这个例子中，<code>onChange(of: scenePhase)</code> 修饰符会在 <code>scenePhase</code> 改变时执行一个闭包。你可以使用这个闭包来执行任何你需要的操作，例如保存数据、暂停动画或更新界面。</p><h2 id="scenephase-的实际应用" tabindex="-1">ScenePhase 的实际应用 <a class="header-anchor" href="#scenephase-的实际应用" aria-label="Permalink to &quot;ScenePhase 的实际应用&quot;">​</a></h2><p><code>ScenePhase</code> 在很多情况下都非常有用。以下是一些例子：</p><ol><li><strong>暂停和恢复游戏</strong>：当 App 进入后台时，你可以暂停游戏。当 App 返回前台时，你可以恢复游戏。</li><li><strong>保存用户数据</strong>：当 App 进入后台时，你可以保存用户数据，以防止数据丢失。</li><li><strong>更新界面</strong>：当 App 返回前台时，你可以更新界面，以反映最新的数据。</li><li><strong>限制后台活动</strong>：为了节省电量，你可以在 App 进入后台时限制后台活动。例如，你可以停止播放音乐或停止下载文件。</li></ol><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><ul><li><strong>不要在后台执行长时间运行的任务</strong>：iOS 会在 App 在后台运行一段时间后将其挂起。如果你的 App 需要执行长时间运行的任务，你应该使用 <code>BackgroundTasks</code> 框架。</li><li><strong>处理未知状态</strong>：<code>ScenePhase</code> 可能会返回一个未知状态。你应该处理这种情况，以防止你的 App 崩溃。</li><li><strong>使用 <code>onChange</code> 修饰符</strong>：使用 <code>onChange</code> 修饰符来监听 <code>scenePhase</code> 的变化。这可以确保你的 App 能够及时响应 App 状态的变化。</li></ul><p>掌握 <code>ScenePhase</code>，你就能更好地控制 App 的生命周期，并为用户提供更流畅的体验！🚀</p>`,17)]))}const E=i(p,[["render",l]]);export{o as __pageData,E as default};
