import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.ymCRTBvy.js";const E=JSON.parse('{"title":"17.4_添加拖动手势UIPanGestureRecognizer","description":"","frontmatter":{},"headers":[],"relativePath":"swift/uikit/basics/17.4_添加拖动手势UIPanGestureRecognizer.md","filePath":"swift/uikit/basics/17.4_添加拖动手势UIPanGestureRecognizer.md"}'),t={name:"swift/uikit/basics/17.4_添加拖动手势UIPanGestureRecognizer.md"};function l(h,s,p,r,k,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_17-4-添加拖动手势uipangesturerecognizer" tabindex="-1">17.4_添加拖动手势UIPanGestureRecognizer <a class="header-anchor" href="#_17-4-添加拖动手势uipangesturerecognizer" aria-label="Permalink to &quot;17.4_添加拖动手势UIPanGestureRecognizer&quot;">​</a></h1><h2 id="探索uipangesturerecognizer-让视图随你而动-🖐️" tabindex="-1">探索UIPanGestureRecognizer：让视图随你而动 🖐️ <a class="header-anchor" href="#探索uipangesturerecognizer-让视图随你而动-🖐️" aria-label="Permalink to &quot;探索UIPanGestureRecognizer：让视图随你而动 🖐️&quot;">​</a></h2><p>想要让你的 iOS 应用更具互动性吗？ <strong>UIPanGestureRecognizer</strong> 绝对是你的好帮手！它能让你轻松实现视图的拖动功能，让用户体验更上一层楼。准备好一起探索了吗？🚀</p><h2 id="创建并添加uipangesturerecognizer" tabindex="-1">创建并添加UIPanGestureRecognizer <a class="header-anchor" href="#创建并添加uipangesturerecognizer" aria-label="Permalink to &quot;创建并添加UIPanGestureRecognizer&quot;">​</a></h2><p>首先，你需要创建一个 <code>UIPanGestureRecognizer</code> 实例，并将其添加到你想要拖动的视图上。这就像给视图安装了一个“拖动感应器”。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> panGesture </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIPanGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handlePan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_:)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(panGesture)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这段代码创建了一个新的拖动手势识别器，并将其与 <code>handlePan(_:)</code> 方法关联起来。每当用户在视图上拖动时，<code>handlePan(_:)</code> 方法就会被调用。</p><h2 id="实现拖动手势处理方法" tabindex="-1">实现拖动手势处理方法 <a class="header-anchor" href="#实现拖动手势处理方法" aria-label="Permalink to &quot;实现拖动手势处理方法&quot;">​</a></h2><p>接下来，你需要实现 <code>handlePan(_:)</code> 方法，来处理拖动手势。这个方法会接收一个 <code>UIPanGestureRecognizer</code> 对象作为参数，你可以通过它来获取拖动的相关信息。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@objc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handlePan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gesture: UIPanGestureRecognizer) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> translation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gesture.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 将拖动应用于视图的中心点</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gesture.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.center </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CGPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: gesture.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.center.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> translation.x, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: gesture.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.center.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> translation.y)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 重置手势的translation，以便下次增量计算</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gesture.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setTranslation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CGPoint.zero, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这段代码的核心在于 <code>gesture.translation(in: view)</code>。它会告诉你，从手势开始到现在，用户在视图上的拖动距离。然后，你可以将这个距离应用到视图的中心点，从而实现拖动效果。别忘了使用 <code>gesture.setTranslation(CGPoint.zero, in: view)</code> 重置手势的 translation，确保每次拖动都是增量计算。</p><h2 id="优化拖动体验" tabindex="-1">优化拖动体验 <a class="header-anchor" href="#优化拖动体验" aria-label="Permalink to &quot;优化拖动体验&quot;">​</a></h2><p>为了让拖动体验更流畅，你可以考虑以下几点：</p><ol><li><strong>限制拖动范围</strong>：避免视图被拖出屏幕外。你可以通过判断视图的中心点是否超出屏幕边界来限制拖动范围。</li><li><strong>添加动画效果</strong>：在拖动结束后，可以添加一个动画效果，让视图平滑地回到最终位置。</li><li><strong>处理手势状态</strong>：<code>UIPanGestureRecognizer</code> 有不同的状态，例如 <code>.began</code>、<code>.changed</code> 和 <code>.ended</code>。你可以在不同的状态下执行不同的操作。例如，在 <code>.began</code> 状态下，你可以改变视图的透明度，让用户知道视图正在被拖动。</li></ol><h2 id="示例-拖动一个imageview-🖼️" tabindex="-1">示例：拖动一个ImageView 🖼️ <a class="header-anchor" href="#示例-拖动一个imageview-🖼️" aria-label="Permalink to &quot;示例：拖动一个ImageView 🖼️&quot;">​</a></h2><p>假设你有一个 <code>UIImageView</code>，想要让用户可以拖动它。你可以按照以下步骤操作：</p><ol><li>创建一个 <code>UIImageView</code> 实例，并将其添加到视图上。</li><li>创建一个 <code>UIPanGestureRecognizer</code> 实例，并将其添加到 <code>UIImageView</code> 上。</li><li>实现 <code>handlePan(_:)</code> 方法，将拖动应用于 <code>UIImageView</code> 的中心点。</li></ol><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> imageView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIImageView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UIImage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">named</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_image&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">imageView.isUserInteractionEnabled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 允许用户交互</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> panGesture </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIPanGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handlePan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_:)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">imageView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(panGesture)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addSubview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(imageView)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>记住，一定要设置 <code>imageView.isUserInteractionEnabled = true</code>，否则手势识别器无法工作！</p><h2 id="总结-🎉" tabindex="-1">总结 🎉 <a class="header-anchor" href="#总结-🎉" aria-label="Permalink to &quot;总结 🎉&quot;">​</a></h2><p>通过 <code>UIPanGestureRecognizer</code>，你可以轻松地为你的 iOS 应用添加拖动功能，提升用户体验。记住，关键在于创建手势识别器、实现处理方法，并根据需要优化拖动体验。现在就开始动手，让你的应用更具互动性吧！💪</p>`,21)]))}const o=i(t,[["render",l]]);export{E as __pageData,o as default};
