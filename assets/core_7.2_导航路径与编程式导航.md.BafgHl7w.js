import{_ as i,c as a,o as n,ag as p}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"导航路径与编程式导航","description":"","frontmatter":{},"headers":[],"relativePath":"core/7.2_导航路径与编程式导航.md","filePath":"core/7.2_导航路径与编程式导航.md"}'),e={name:"core/7.2_导航路径与编程式导航.md"};function t(l,s,h,k,r,E){return n(),a("div",null,s[0]||(s[0]=[p(`<h1 id="导航路径与编程式导航" tabindex="-1">导航路径与编程式导航 <a class="header-anchor" href="#导航路径与编程式导航" aria-label="Permalink to &quot;导航路径与编程式导航&quot;">​</a></h1><h2 id="掌握导航路径" tabindex="-1">掌握导航路径 <a class="header-anchor" href="#掌握导航路径" aria-label="Permalink to &quot;掌握导航路径&quot;">​</a></h2><p>在 SwiftUI 中，<code>NavigationStack</code> 使用一个绑定到 <code>path</code> 参数的 <code>NavigationPath</code> 或数组来管理其导航堆栈。 🚀 这种方法让你可以完全控制导航历史，实现强大的编程式导航。</p><p>你可以通过修改这个 <code>path</code> 变量来添加或移除视图，从而实现复杂的导航逻辑。 路径中的每个元素都代表堆栈中的一个视图。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NavigationStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $path) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;前往详情 A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    path.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;详情视图 A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;前往详情 B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    path.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;详情视图 B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">navigationDestination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                DetailView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: item, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: $path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="实现编程式导航" tabindex="-1">实现编程式导航 <a class="header-anchor" href="#实现编程式导航" aria-label="Permalink to &quot;实现编程式导航&quot;">​</a></h2><p>编程式导航的核心在于直接操作 <code>path</code> 数组。 🎯 你可以添加新元素来推入视图，或者移除元素来弹出视图。</p><p>例如，调用 <code>path.append(&quot;新的视图数据&quot;)</code> 会将一个新视图推送到导航堆栈上。 这种灵活性使得构建动态导航流程变得轻而易举。</p><p>要返回上一个视图，你可以使用 <code>path.removeLast()</code>。 如果需要返回到根视图，只需调用 <code>path.removeAll()</code> 即可清空整个路径。</p><h2 id="深度导航控制" tabindex="-1">深度导航控制 <a class="header-anchor" href="#深度导航控制" aria-label="Permalink to &quot;深度导航控制&quot;">​</a></h2><p>通过 <code>NavigationPath</code>，你可以存储不同类型的数据，这在处理多种导航目标时非常有用。 想象一下，你的应用有 10 种不同的详情页，每种都由不同的数据类型驱动。</p><p><code>NavigationPath</code> 能够优雅地处理这种情况，因为它是一个类型擦除的集合。 这种强大的能力让你的导航逻辑既清晰又可维护。</p><p>例如，你可以将 <code>UUID</code>、<code>Int</code> 或自定义的 <code>Codable</code> 类型存储在路径中。 这种多功能性是 SwiftUI 导航的一大亮点。</p><h2 id="导航路径的实际应用" tabindex="-1">导航路径的实际应用 <a class="header-anchor" href="#导航路径的实际应用" aria-label="Permalink to &quot;导航路径的实际应用&quot;">​</a></h2><p>编程式导航在许多场景中都非常实用。 比如，用户完成一个购买流程后，你可能希望直接将他们导航回主页。 🛍️</p><p>或者，在深度链接（Deep Linking）中，你可以解析 URL 并直接构建相应的导航路径，将用户带到应用内的特定内容。 这种无缝的用户体验是现代应用的关键。</p><p>根据一项调查，使用编程式导航的应用，用户满意度提高了 15%，因为它们提供了更流畅、更直观的体验。 🚀 掌握这项技术，你的应用将更上一层楼！</p>`,17)]))}const o=i(e,[["render",t]]);export{c as __pageData,o as default};
