import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"配置和兑换优惠代码","description":"","frontmatter":{},"headers":[],"relativePath":"purchase/12.4_配置和兑换优惠代码.md","filePath":"purchase/12.4_配置和兑换优惠代码.md"}'),p={name:"purchase/12.4_配置和兑换优惠代码.md"};function t(l,s,r,h,o,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="配置和兑换优惠代码" tabindex="-1">配置和兑换优惠代码 <a class="header-anchor" href="#配置和兑换优惠代码" aria-label="Permalink to &quot;配置和兑换优惠代码&quot;">​</a></h1><h2 id="优惠代码的强大功能" tabindex="-1">优惠代码的强大功能 <a class="header-anchor" href="#优惠代码的强大功能" aria-label="Permalink to &quot;优惠代码的强大功能&quot;">​</a></h2><p>优惠代码是推广订阅的绝佳工具！它们能让你为用户提供折扣或免费试用，从而有效吸引新用户并留住现有用户。想象一下，你可以为特定活动或合作伙伴创建独家优惠，这真是太棒了！🚀</p><p>配置优惠代码非常灵活。你可以在 App Store Connect 中轻松设置它们。这包括定义代码类型、持续时间和适用的产品。</p><h2 id="在app-store-connect中配置" tabindex="-1">在App Store Connect中配置 <a class="header-anchor" href="#在app-store-connect中配置" aria-label="Permalink to &quot;在App Store Connect中配置&quot;">​</a></h2><p>首先，登录到你的 App Store Connect 账户。导航到“我的 App”，然后选择你的应用。接着，点击“功能”选项卡，再选择“订阅”。</p><p>在这里，你会看到“优惠代码”部分。点击“创建优惠代码”来开始你的配置之旅。你可以选择一次性代码或可重复使用的代码。</p><ul><li><strong>一次性代码：</strong> 每个代码只能被一个用户兑换一次。这非常适合限量促销。</li><li><strong>可重复使用代码：</strong> 多个用户可以使用同一个代码。这对于公开活动或合作伙伴推广非常方便。</li></ul><p>你还可以设置代码的有效期和兑换次数上限。例如，你可以创建一个在特定日期后失效的代码，或者限制其只能被兑换1000次。</p><h2 id="兑换优惠代码的流程" tabindex="-1">兑换优惠代码的流程 <a class="header-anchor" href="#兑换优惠代码的流程" aria-label="Permalink to &quot;兑换优惠代码的流程&quot;">​</a></h2><p>用户兑换优惠代码的体验非常流畅。他们可以通过多种方式进行兑换。最常见的方式是在 App Store 中直接兑换。</p><p>用户只需打开 App Store，点击右上角的个人头像，然后选择“兑换礼品卡或代码”。输入你的优惠代码后，他们就能立即享受优惠。</p><p>你也可以在应用内引导用户兑换。通过 StoreKit，你可以提供一个链接或按钮，直接跳转到兑换界面。这大大提升了用户体验。</p><p>例如，你可以通过 <code>presentCodeRedemptionSheet()</code> 方法在你的 SwiftUI 应用中展示兑换表单。这让整个过程变得无缝且直观。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StoreKit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> presentRedemptionSheet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">iOS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        SKPaymentQueue.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">presentCodeRedemptionSheet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="成功兑换后的处理" tabindex="-1">成功兑换后的处理 <a class="header-anchor" href="#成功兑换后的处理" aria-label="Permalink to &quot;成功兑换后的处理&quot;">​</a></h2><p>当用户成功兑换优惠代码后，你的应用会收到相应的通知。你需要监听 StoreKit 的交易更新。这确保你能及时更新用户的订阅状态。</p><p>通常，你会通过 <code>SKPaymentQueueDelegate</code> 来处理这些更新。验证交易并更新你的后端系统是关键步骤。</p><p>确保你的应用能够正确识别并应用优惠。这包括更新用户界面，显示他们当前享受的订阅状态。</p><p>例如，如果用户兑换了免费试用，你的应用应该显示他们正在免费试用中，并告知试用期何时结束。这提供了极佳的透明度。</p><p>通过精心配置和顺畅的兑换流程，优惠代码将成为你订阅业务增长的强大助推器。加油！🎉</p>`,21)]))}const u=a(p,[["render",t]]);export{c as __pageData,u as default};
