import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.ymCRTBvy.js";const c=JSON.parse('{"title":"17.2_添加长按手势UILongPressGestureRecognizer","description":"","frontmatter":{},"headers":[],"relativePath":"uikit/basics/17.2_添加长按手势UILongPressGestureRecognizer.md","filePath":"uikit/basics/17.2_添加长按手势UILongPressGestureRecognizer.md"}'),l={name:"uikit/basics/17.2_添加长按手势UILongPressGestureRecognizer.md"};function t(r,s,p,h,k,o){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_17-2-添加长按手势uilongpressgesturerecognizer" tabindex="-1">17.2_添加长按手势UILongPressGestureRecognizer <a class="header-anchor" href="#_17-2-添加长按手势uilongpressgesturerecognizer" aria-label="Permalink to &quot;17.2_添加长按手势UILongPressGestureRecognizer&quot;">​</a></h1><blockquote><p>长按手势，让你的应用更具交互性！🎉 让我们一起探索如何在UIKit中添加 <code>UILongPressGestureRecognizer</code>，为你的应用增加长按识别功能。这能让用户通过持续按压屏幕来触发特定操作，是不是很酷？😎</p></blockquote><h2 id="创建并配置长按手势识别器" tabindex="-1">创建并配置长按手势识别器 <a class="header-anchor" href="#创建并配置长按手势识别器" aria-label="Permalink to &quot;创建并配置长按手势识别器&quot;">​</a></h2><p>首先，你需要创建一个 <code>UILongPressGestureRecognizer</code> 的实例。你可以设置长按的最小持续时间和允许的移动范围。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> longPressRecognizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UILongPressGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleLongPress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_:)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">longPressRecognizer.minimumPressDuration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 设置最小长按时间为0.5秒</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">longPressRecognizer.allowableMovement </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 允许10个点的移动范围</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yourView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(longPressRecognizer)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><code>minimumPressDuration</code>: 决定用户需要按住屏幕多久才能被识别为长按手势。</li><li><code>allowableMovement</code>: 允许手指在按住屏幕时移动的最大距离（以像素为单位）。</li></ul><h2 id="实现手势处理方法" tabindex="-1">实现手势处理方法 <a class="header-anchor" href="#实现手势处理方法" aria-label="Permalink to &quot;实现手势处理方法&quot;">​</a></h2><p>接下来，你需要实现一个方法来处理长按手势。这个方法会在手势被识别时调用。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@objc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleLongPress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> recognizer: UILongPressGestureRecognizer) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> recognizer.state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .began {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 手势开始时执行的操作</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;长按手势开始！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> recognizer.state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .ended {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 手势结束时执行的操作</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;长按手势结束！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><code>recognizer.state</code>: 这个属性告诉你手势的当前状态，例如 <code>.began</code>（手势开始）或 <code>.ended</code>（手势结束）。</li></ul><h2 id="将手势识别器添加到视图" tabindex="-1">将手势识别器添加到视图 <a class="header-anchor" href="#将手势识别器添加到视图" aria-label="Permalink to &quot;将手势识别器添加到视图&quot;">​</a></h2><p>现在，你需要将手势识别器添加到你想要监听长按手势的视图上。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yourView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(longPressRecognizer)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>确保 <code>yourView</code> 是你想要添加手势的 <code>UIView</code> 实例。例如，你可以将它添加到 <code>UIImageView</code>、<code>UIButton</code> 或任何其他自定义视图上。</p><h2 id="进阶用法-动态调整参数" tabindex="-1">进阶用法：动态调整参数 <a class="header-anchor" href="#进阶用法-动态调整参数" aria-label="Permalink to &quot;进阶用法：动态调整参数&quot;">​</a></h2><p>你还可以在运行时动态调整 <code>UILongPressGestureRecognizer</code> 的参数，以适应不同的场景。例如，你可以根据用户的操作来改变 <code>minimumPressDuration</code>。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">longPressRecognizer.minimumPressDuration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 动态设置为1秒</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>通过调整这些参数，你可以创建出更加灵活和响应式的长按手势体验。</p><h2 id="实际应用场景" tabindex="-1">实际应用场景 <a class="header-anchor" href="#实际应用场景" aria-label="Permalink to &quot;实际应用场景&quot;">​</a></h2><p>长按手势在很多场景下都非常有用。例如：</p><ol><li><strong>编辑模式</strong>: 在相册应用中，长按图片进入编辑模式。</li><li><strong>快捷菜单</strong>: 长按应用图标显示快捷操作菜单。</li><li><strong>游戏控制</strong>: 在游戏中，长按屏幕进行持续攻击或移动。</li></ol><p>长按手势可以极大地提升用户体验，让你的应用更加直观和易用。🚀 试试看，你会发现它能为你的应用带来意想不到的惊喜！🎉</p>`,22)]))}const g=i(l,[["render",t]]);export{c as __pageData,g as default};
