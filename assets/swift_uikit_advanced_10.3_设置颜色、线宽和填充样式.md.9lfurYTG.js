import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.ymCRTBvy.js";const g=JSON.parse('{"title":"设置颜色、线宽和填充样式","description":"","frontmatter":{},"headers":[],"relativePath":"swift/uikit/advanced/10.3_设置颜色、线宽和填充样式.md","filePath":"swift/uikit/advanced/10.3_设置颜色、线宽和填充样式.md"}'),h={name:"swift/uikit/advanced/10.3_设置颜色、线宽和填充样式.md"};function l(e,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="设置颜色、线宽和填充样式" tabindex="-1">设置颜色、线宽和填充样式 <a class="header-anchor" href="#设置颜色、线宽和填充样式" aria-label="Permalink to &quot;设置颜色、线宽和填充样式&quot;">​</a></h1><h2 id="绘制路径的颜色设置" tabindex="-1">绘制路径的颜色设置 <a class="header-anchor" href="#绘制路径的颜色设置" aria-label="Permalink to &quot;绘制路径的颜色设置&quot;">​</a></h2><p>在Core Graphics中，为你的路径设置颜色是至关重要的一步。你可以使用<code>UIColor</code>来定义颜色，然后将其转换为Core Graphics的颜色。例如，你可以轻松地将线条颜色设置为鲜艳的蓝色，让你的图形脱颖而出！🎨</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIGraphicsGetCurrentContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setStrokeColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UIColor.blue.cgColor) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置描边颜色为蓝色</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>你也可以设置填充颜色，这对于创建实心形状非常有用。想象一下，一个红色的圆形按钮，是不是很吸引人？</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setFillColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UIColor.red.cgColor) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置填充颜色为红色</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>记住，<code>cgColor</code>属性是<code>UIColor</code>和Core Graphics之间沟通的桥梁。</p><h2 id="线宽的精细控制" tabindex="-1">线宽的精细控制 <a class="header-anchor" href="#线宽的精细控制" aria-label="Permalink to &quot;线宽的精细控制&quot;">​</a></h2><p>线宽决定了你绘制的线条的粗细。通过调整线宽，你可以创造出从纤细到粗犷的各种视觉效果。默认线宽通常是1.0点，但你可以根据需要进行修改。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setLineWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置线宽为5点</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>一个更粗的线宽（例如5.0点）可以使你的图形更加醒目，而一个较细的线宽（例如0.5点）则能带来精致感。实验不同的线宽，你会发现它们对整体设计的影响有多大！</p><h2 id="填充样式的灵活运用" tabindex="-1">填充样式的灵活运用 <a class="header-anchor" href="#填充样式的灵活运用" aria-label="Permalink to &quot;填充样式的灵活运用&quot;">​</a></h2><p>填充样式决定了封闭路径内部的绘制方式。最常见的填充样式是实心填充，但Core Graphics也支持更复杂的填充模式。</p><ul><li><strong>实心填充</strong>: 这是最常用的方式，用单一颜色填充整个区域。</li><li><strong>图案填充</strong>: 你可以使用图像或自定义图案来填充区域，这为你的设计增添了无限可能。</li></ul><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 绘制一个矩形并填充</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CGRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rect)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fillPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 填充路径</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>填充操作通常在路径被定义并关闭之后进行。</p><h2 id="描边与填充的协同作用" tabindex="-1">描边与填充的协同作用 <a class="header-anchor" href="#描边与填充的协同作用" aria-label="Permalink to &quot;描边与填充的协同作用&quot;">​</a></h2><p>描边和填充可以单独使用，也可以结合使用，以创建更丰富的视觉效果。例如，你可以绘制一个带有蓝色描边和红色填充的圆形。这就像给你的图形穿上了一件漂亮的衣服！👗</p><ol><li><strong>设置描边颜色和线宽</strong>：首先定义线条的外观。</li><li><strong>绘制路径</strong>：创建你想要的形状。</li><li><strong>描边路径</strong>：应用描边样式。</li><li><strong>设置填充颜色</strong>：定义内部的颜色。</li><li><strong>填充路径</strong>：填充形状内部。</li></ol><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setStrokeColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UIColor.blue.cgColor)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setLineWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setFillColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(UIColor.red.cgColor)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> circlePath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIBezierPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arcCenter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CGPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">startAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">endAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clockwise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circlePath.cgPath)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">drawPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .fillStroke) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 同时描边和填充</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>使用<code>drawPath(using: .fillStroke)</code>可以一次性完成描边和填充，效率更高！</p><h2 id="颜色、线宽和填充的实践技巧" tabindex="-1">颜色、线宽和填充的实践技巧 <a class="header-anchor" href="#颜色、线宽和填充的实践技巧" aria-label="Permalink to &quot;颜色、线宽和填充的实践技巧&quot;">​</a></h2><p>掌握这些基本设置，你就能在Core Graphics中创造出令人惊叹的图形。记住，实践是最好的老师！多尝试不同的颜色组合、线宽和填充方式，你会发现无限的创意空间。</p><ul><li><strong>选择合适的颜色</strong>: 考虑你的应用主题和用户体验。</li><li><strong>调整线宽</strong>: 突出重点或创造细节。</li><li><strong>巧妙运用填充</strong>: 区分不同区域或增加视觉趣味。</li></ul><p>通过这些简单的步骤，你就能让你的自定义视图变得生动起来！🚀 别忘了，Core Graphics提供了强大的绘图能力，等待你去探索和利用。</p>`,25)]))}const o=i(h,[["render",l]]);export{g as __pageData,o as default};
