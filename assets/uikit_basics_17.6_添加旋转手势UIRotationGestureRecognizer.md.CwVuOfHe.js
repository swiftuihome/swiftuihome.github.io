import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.ymCRTBvy.js";const c=JSON.parse('{"title":"17.6_添加旋转手势UIRotationGestureRecognizer","description":"","frontmatter":{},"headers":[],"relativePath":"uikit/basics/17.6_添加旋转手势UIRotationGestureRecognizer.md","filePath":"uikit/basics/17.6_添加旋转手势UIRotationGestureRecognizer.md"}'),t={name:"uikit/basics/17.6_添加旋转手势UIRotationGestureRecognizer.md"};function l(h,s,r,p,k,o){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_17-6-添加旋转手势uirotationgesturerecognizer" tabindex="-1">17.6_添加旋转手势UIRotationGestureRecognizer <a class="header-anchor" href="#_17-6-添加旋转手势uirotationgesturerecognizer" aria-label="Permalink to &quot;17.6_添加旋转手势UIRotationGestureRecognizer&quot;">​</a></h1><blockquote><p>想要让你的 iOS 应用更具互动性吗？旋转手势绝对是你的好帮手！通过 <code>UIRotationGestureRecognizer</code>，你可以轻松地为视图添加旋转功能，让用户通过简单的手势就能改变视图的角度。是不是很酷？😎</p></blockquote><h2 id="创建-uirotationgesturerecognizer" tabindex="-1">创建 UIRotationGestureRecognizer <a class="header-anchor" href="#创建-uirotationgesturerecognizer" aria-label="Permalink to &quot;创建 UIRotationGestureRecognizer&quot;">​</a></h2><p>首先，你需要创建一个 <code>UIRotationGestureRecognizer</code> 的实例。这个手势识别器会监听用户的旋转手势，并在手势发生时通知你。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotationGesture </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIRotationGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleRotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_:)))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这里，<code>target</code> 指定了手势识别器将通知的对象（通常是你的视图控制器），<code>action</code> 指定了当手势发生时要调用的方法。</p><h2 id="实现手势处理方法" tabindex="-1">实现手势处理方法 <a class="header-anchor" href="#实现手势处理方法" aria-label="Permalink to &quot;实现手势处理方法&quot;">​</a></h2><p>接下来，你需要实现 <code>handleRotation(_:)</code> 方法，这个方法会在每次旋转手势发生时被调用。在这个方法里，你可以获取旋转的角度，并将其应用到你的视图上。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@objc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleRotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gesture: UIRotationGestureRecognizer) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    guard</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> view </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gesture.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    view.transform </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> view.transform.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: gesture.rotation)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gesture.rotation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 重置旋转角度，避免累积误差</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这段代码的关键在于 <code>view.transform.rotated(by:)</code>，它会将视图的当前变换与旋转变换结合起来。同时，<code>gesture.rotation = 0</code> 非常重要，它可以重置手势识别器的旋转角度，避免因为角度累积而导致视图旋转过度。</p><h2 id="将手势识别器添加到视图" tabindex="-1">将手势识别器添加到视图 <a class="header-anchor" href="#将手势识别器添加到视图" aria-label="Permalink to &quot;将手势识别器添加到视图&quot;">​</a></h2><p>最后，你需要将手势识别器添加到你想要旋转的视图上。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yourView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rotationGesture)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样，当用户在 <code>yourView</code> 上进行旋转手势时，<code>handleRotation(_:)</code> 方法就会被调用，视图就会随之旋转。</p><h2 id="进阶技巧" tabindex="-1">进阶技巧 <a class="header-anchor" href="#进阶技巧" aria-label="Permalink to &quot;进阶技巧&quot;">​</a></h2><ul><li><strong>多手势冲突处理</strong>：如果你的视图同时支持多个手势，你可能需要处理手势之间的冲突。<code>UIGestureRecognizerDelegate</code> 协议可以帮助你解决这个问题。</li><li><strong>旋转角度限制</strong>：你可以设置旋转角度的范围，防止视图旋转过度。</li><li><strong>动画效果</strong>：你可以使用 <code>UIView.animate(withDuration:)</code> 方法为旋转添加动画效果，让旋转过程更加平滑自然。</li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p>假设你有一个 <code>UIImageView</code>，想要让用户可以通过旋转手势来调整图片的角度。你可以按照以下步骤操作：</p><ol><li>创建一个 <code>UIImageView</code> 实例，并将其添加到你的视图中。</li><li>创建 <code>UIRotationGestureRecognizer</code> 实例，并将其添加到 <code>UIImageView</code> 上。</li><li>实现 <code>handleRotation(_:)</code> 方法，并在其中更新 <code>UIImageView</code> 的 <code>transform</code> 属性。</li></ol><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> imageView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIImageView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UIImage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">named</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_image&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">imageView.isUserInteractionEnabled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 允许用户交互</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addSubview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(imageView)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rotationGesture </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIRotationGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleRotation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_:)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">imageView.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addGestureRecognizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rotationGesture)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>现在，运行你的应用，尝试在图片上进行旋转手势，你会发现图片可以随着你的手指旋转了！🎉</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>通过 <code>UIRotationGestureRecognizer</code>，你可以轻松地为你的 iOS 应用添加旋转手势支持，让用户能够更加自由地控制视图。记住，关键在于创建手势识别器、实现手势处理方法，并将手势识别器添加到视图上。希望你能灵活运用旋转手势，为你的应用带来更多创意和乐趣！🚀</p>`,23)]))}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
