import{_ as t,c as a,o,ag as p}from"./chunks/framework.ymCRTBvy.js";const h=JSON.parse('{"title":"在Xcode中启用App内购买功能","description":"","frontmatter":{},"headers":[],"relativePath":"purchase/2.1_在Xcode中启用App内购买功能.md","filePath":"purchase/2.1_在Xcode中启用App内购买功能.md"}'),i={name:"purchase/2.1_在Xcode中启用App内购买功能.md"};function n(l,e,s,d,c,r){return o(),a("div",null,e[0]||(e[0]=[p('<h1 id="在xcode中启用app内购买功能" tabindex="-1">在Xcode中启用App内购买功能 <a class="header-anchor" href="#在xcode中启用app内购买功能" aria-label="Permalink to &quot;在Xcode中启用App内购买功能&quot;">​</a></h1><p>在 Xcode 中启用 App 内购买功能，是开始构建订阅功能的第一步！🚀 让我们一起看看如何操作，确保你的 App 能够顺利支持内购。</p><h2 id="开启-app-内购买功能" tabindex="-1">开启 App 内购买功能 <a class="header-anchor" href="#开启-app-内购买功能" aria-label="Permalink to &quot;开启 App 内购买功能&quot;">​</a></h2><p>首先，打开你的 Xcode 项目。在项目导航器中，找到你的项目文件（通常是蓝色的 Xcode 图标）。选择你的项目，然后选择你的目标（target）。</p><p>接下来，你会看到一个标签栏，包括 &quot;General&quot;, &quot;Signing &amp; Capabilities&quot; 等。点击 &quot;Signing &amp; Capabilities&quot; 标签。</p><p>现在，点击左上角的 &quot;+ Capability&quot; 按钮。在弹出的菜单中，搜索 &quot;In-App Purchase&quot;，然后双击它，或者选中后点击 &quot;+&quot; 按钮。Xcode 会自动为你配置必要的文件和设置。🎉</p><ul><li>确保你的 Bundle Identifier 已经设置好，并且与你在 App Store Connect 中创建的 App ID 相匹配。</li><li>检查 &quot;Automatically manage signing&quot; 是否启用，这可以简化证书管理。</li></ul><h2 id="检查-entitlements-文件" tabindex="-1">检查 Entitlements 文件 <a class="header-anchor" href="#检查-entitlements-文件" aria-label="Permalink to &quot;检查 Entitlements 文件&quot;">​</a></h2><p>启用 &quot;In-App Purchase&quot; 后，Xcode 会自动创建一个 <code>.entitlements</code> 文件。这个文件包含了你的 App 的授权信息。</p><ol><li>在项目导航器中，找到你的 <code>.entitlements</code> 文件。</li><li>确认文件中包含了 <code>com.apple.developer.in-app-payments</code> 键，并且值为 <code>true</code>。</li></ol><p>如果文件不存在或者键值不正确，你需要手动添加。右键点击项目导航器，选择 &quot;New File...&quot;，然后搜索 &quot;Entitlements File&quot;。创建一个新的 <code>.entitlements</code> 文件，并添加上述键值对。</p><h2 id="代码中的准备工作" tabindex="-1">代码中的准备工作 <a class="header-anchor" href="#代码中的准备工作" aria-label="Permalink to &quot;代码中的准备工作&quot;">​</a></h2><p>虽然这一步主要是在 Xcode 中进行配置，但我们也要在代码中做好准备。确保你的 App 已经导入了 <code>StoreKit</code> 框架。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StoreKit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样，你就可以在代码中使用 <code>SKProductsRequest</code> 和 <code>SKPaymentQueue</code> 等类，来请求产品信息和处理购买流程了。</p><h2 id="常见问题和解决方案" tabindex="-1">常见问题和解决方案 <a class="header-anchor" href="#常见问题和解决方案" aria-label="Permalink to &quot;常见问题和解决方案&quot;">​</a></h2><ul><li><strong>问题</strong>：App 内购买功能无法启用。 <ul><li><strong>解决方案</strong>：检查你的 App ID 是否在 App Store Connect 中正确配置，并且 Bundle Identifier 与 Xcode 项目匹配。</li></ul></li><li><strong>问题</strong>：<code>.entitlements</code> 文件缺失或配置错误。 <ul><li><strong>解决方案</strong>：手动创建 <code>.entitlements</code> 文件，并确保 <code>com.apple.developer.in-app-payments</code> 键值为 <code>true</code>。</li></ul></li></ul><p>启用 App 内购买功能后，你就可以开始配置你的产品，并编写代码来处理购买流程了。加油！💪 你已经迈出了成功的第一步。记住，每一步都至关重要，确保每个细节都正确配置，才能让你的 App 顺利支持订阅功能。🌟</p>',18)]))}const m=t(i,[["render",n]]);export{h as __pageData,m as default};
