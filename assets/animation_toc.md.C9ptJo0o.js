import{_ as e,c as t,o as i,ag as r}from"./chunks/framework.Bw-5EFTY.js";const d=JSON.parse('{"title":"《SwiftUI动画核心技术与实践》","description":"","frontmatter":{},"headers":[],"relativePath":"animation/toc.md","filePath":"animation/toc.md"}'),n={name:"animation/toc.md"};function o(h,a,l,s,_,m){return i(),t("div",null,a[0]||(a[0]=[r('<h1 id="《swiftui动画核心技术与实践》" tabindex="-1">《SwiftUI动画核心技术与实践》 <a class="header-anchor" href="#《swiftui动画核心技术与实践》" aria-label="Permalink to &quot;《SwiftUI动画核心技术与实践》&quot;">​</a></h1><h2 id="第1章-隐式动画" tabindex="-1">第1章 隐式动画 <a class="header-anchor" href="#第1章-隐式动画" aria-label="Permalink to &quot;第1章 隐式动画&quot;">​</a></h2><p>1.1_使用 .animation() 修饰符 1.2_配置动画曲线- .easeInOut, .linear, .spring 1.3_设置动画时长- duration参数 1.4_应用 .animation() 到容器视图 1.5_使用 .animation(nil) 禁用动画</p><h2 id="第2章-显式动画" tabindex="-1">第2章 显式动画 <a class="header-anchor" href="#第2章-显式动画" aria-label="Permalink to &quot;第2章 显式动画&quot;">​</a></h2><p>2.1_使用 withAnimation 代码块 2.2_在 withAnimation 中改变状态 2.3_为 withAnimation 指定动画曲线和时长 2.4_嵌套 withAnimation 代码块 2.5_显式动画与隐式动画的交互</p><h2 id="第3章-动画与状态绑定" tabindex="-1">第3章 动画与状态绑定 <a class="header-anchor" href="#第3章-动画与状态绑定" aria-label="Permalink to &quot;第3章 动画与状态绑定&quot;">​</a></h2><p>3.1_使用 $binding.animation() 3.2_为 Toggle、Slider 等控件添加动画 3.3_绑定动画的特定参数配置 3.4_理解绑定动画的执行时机</p><h2 id="第4章-转场-transitions" tabindex="-1">第4章 转场（Transitions） <a class="header-anchor" href="#第4章-转场-transitions" aria-label="Permalink to &quot;第4章 转场（Transitions）&quot;">​</a></h2><p>4.1_使用 .transition() 修饰符 4.2_内置转场效果- .opacity, .slide, .scale 4.3_组合多个转场效果 4.4_使用 .asymmetric 创建非对称转场 4.5_根据状态切换视图并触发转场</p><h2 id="第5章-animatable-协议与-vectorarithmetic" tabindex="-1">第5章 Animatable 协议与 VectorArithmetic <a class="header-anchor" href="#第5章-animatable-协议与-vectorarithmetic" aria-label="Permalink to &quot;第5章 Animatable 协议与 VectorArithmetic&quot;">​</a></h2><p>5.1_理解 Animatable 协议 5.2_实现 animatableData 计算属性 5.3_使用 VectorArithmetic 协议 5.4_为自定义数据类型添加动画能力 5.5_动画化非数值属性 (例如颜色)</p><h2 id="第6章-geometryeffect" tabindex="-1">第6章 GeometryEffect <a class="header-anchor" href="#第6章-geometryeffect" aria-label="Permalink to &quot;第6章 GeometryEffect&quot;">​</a></h2><p>6.1_GeometryEffect 协议基础 6.2_实现 effectValue(size-) 方法 6.3_创建自定义视图变换动画 6.4_SkewEffect- 实现倾斜效果 6.5_FollowPathEffect- 实现路径跟随动画</p><h2 id="第7章-内置动画曲线" tabindex="-1">第7章 内置动画曲线 <a class="header-anchor" href="#第7章-内置动画曲线" aria-label="Permalink to &quot;第7章 内置动画曲线&quot;">​</a></h2><p>7.1_线性动画 .linear 7.2_缓入缓出 .easeInOut 7.3_缓入 .easeIn 与 缓出 .easeOut 7.4_自定义缓动曲线 timingCurve</p><h2 id="第8章-弹簧动画-spring" tabindex="-1">第8章 弹簧动画（Spring） <a class="header-anchor" href="#第8章-弹簧动画-spring" aria-label="Permalink to &quot;第8章 弹簧动画（Spring）&quot;">​</a></h2><p>8.1_基础弹簧动画 .spring() 8.2_交互式弹簧 .interactiveSpring() 8.3_配置弹簧参数- response, dampingFraction 8.4_配置弹簧参数- blendDuration 8.5_创建果冻效果</p><h2 id="第9章-相位动画师-phase-animator" tabindex="-1">第9章 相位动画师（Phase Animator） <a class="header-anchor" href="#第9章-相位动画师-phase-animator" aria-label="Permalink to &quot;第9章 相位动画师（Phase Animator）&quot;">​</a></h2><p>9.1_PhaseAnimator 视图基础 9.2_定义动画阶段（Phases） 9.3_在 content 闭包中应用视图修饰符 9.4_在 animation 闭包中配置动画 9.5_通过 trigger 触发相位动画</p><h2 id="第10章-关键帧动画-keyframe-animator" tabindex="-1">第10章 关键帧动画（Keyframe Animator） <a class="header-anchor" href="#第10章-关键帧动画-keyframe-animator" aria-label="Permalink to &quot;第10章 关键帧动画（Keyframe Animator）&quot;">​</a></h2><p>10.1_KeyframeAnimator 视图基础 10.2_定义关键帧轨道 KeyframeTrack 10.3_使用 LinearKeyframe 10.4_使用 SpringKeyframe 10.5_使用 CubicKeyframe</p><h2 id="第11章-形状-shape-动画" tabindex="-1">第11章 形状（Shape）动画 <a class="header-anchor" href="#第11章-形状-shape-动画" aria-label="Permalink to &quot;第11章 形状（Shape）动画&quot;">​</a></h2><p>11.1_动画化路径 Path 11.2_使用 animatableData 动画化自定义形状 11.3_Trim 修剪动画- strokeStart, strokeEnd 11.4_实现路径绘制动画效果 11.5_形状变形动画</p><h2 id="第12章-matchedgeometryeffect" tabindex="-1">第12章 MatchedGeometryEffect <a class="header-anchor" href="#第12章-matchedgeometryeffect" aria-label="Permalink to &quot;第12章 MatchedGeometryEffect&quot;">​</a></h2><p>12.1_MatchedGeometryEffect 概念与应用 12.2_定义命名空间 @Namespace 12.3_在不同视图间同步几何属性 12.4_实现“魔法移动”效果 12.5_处理源视图和目标视图的切换 13.1_使用 TimelineView 创建定时更新</p><h2 id="第13章-canvas-与-timelineview" tabindex="-1">第13章 Canvas 与 TimelineView <a class="header-anchor" href="#第13章-canvas-与-timelineview" aria-label="Permalink to &quot;第13章 Canvas 与 TimelineView&quot;">​</a></h2><p>13.2_TimelineView 的 schedule 参数 13.3_在 Canvas 中绘制动态图形 13.4_结合 TimelineView 和 Canvas 实现复杂动画 13.5_动画化 Canvas 中的符号 (Symbols)</p><h2 id="第14章-常见动画案例" tabindex="-1">第14章 常见动画案例 <a class="header-anchor" href="#第14章-常见动画案例" aria-label="Permalink to &quot;第14章 常见动画案例&quot;">​</a></h2><p>14.1_实现加载指示器动画 14.2_创建卡片翻转效果 14.3_构建视差滚动效果 14.4_制作可交互的拖拽动画 14.5_实现心跳动画效果</p><h2 id="第15章-性能考量与调试" tabindex="-1">第15章 性能考量与调试 <a class="header-anchor" href="#第15章-性能考量与调试" aria-label="Permalink to &quot;第15章 性能考量与调试&quot;">​</a></h2><p>15.1_识别导致性能问题的动画 15.2_使用 Instruments 分析动画性能 15.3_最小化视图重绘范围 15.4_将动画计算移出主线程 15.5_利用 .drawingGroup() 优化渲染</p><h2 id="第16章-与uikit-appkit动画集成" tabindex="-1">第16章 与UIKit/AppKit动画集成 <a class="header-anchor" href="#第16章-与uikit-appkit动画集成" aria-label="Permalink to &quot;第16章 与UIKit/AppKit动画集成&quot;">​</a></h2><p>16.1_在 UIViewRepresentable 中使用 UIView 动画 16.2_在 NSViewRepresentable 中使用 Core Animation 16.3_通过 Coordinator 同步状态 16.4_从 SwiftUI 触发 UIKit 动画</p>',33)]))}const p=e(n,[["render",o]]);export{d as __pageData,p as default};
