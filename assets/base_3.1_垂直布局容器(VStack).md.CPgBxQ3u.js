import{_ as a,c as i,o as n,ag as t}from"./chunks/framework.ymCRTBvy.js";const E=JSON.parse('{"title":"垂直布局容器(VStack)","description":"","frontmatter":{},"headers":[],"relativePath":"base/3.1_垂直布局容器(VStack).md","filePath":"base/3.1_垂直布局容器(VStack).md"}'),l={name:"base/3.1_垂直布局容器(VStack).md"};function e(p,s,k,h,r,d){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="垂直布局容器-vstack" tabindex="-1">垂直布局容器(VStack) <a class="header-anchor" href="#垂直布局容器-vstack" aria-label="Permalink to &quot;垂直布局容器(VStack)&quot;">​</a></h1><p>在SwiftUI中，<code>VStack</code> 是你构建垂直布局的得力助手。它能将多个视图元素整齐地堆叠在一起，从上到下依次排列。想象一下，你正在设计一个用户界面，需要将标题、图片和按钮垂直地组织起来，<code>VStack</code> 就是你的理想选择！</p><h2 id="vstack-的核心功能" tabindex="-1">VStack 的核心功能 <a class="header-anchor" href="#vstack-的核心功能" aria-label="Permalink to &quot;VStack 的核心功能&quot;">​</a></h2><p><code>VStack</code> 能够自动管理其内部视图的垂直间距和对齐方式。这极大地简化了布局代码，让你能更专注于视图内容本身。例如，你可以轻松地创建一个包含文本和图像的垂直列表。</p><ul><li><strong>自动布局</strong>: <code>VStack</code> 会根据其内容自动调整大小。</li><li><strong>对齐控制</strong>: 你可以指定内部视图的水平对齐方式。</li><li><strong>间距调整</strong>: 默认情况下，视图之间会有一定的间距，你也可以自定义。</li></ul><h2 id="如何使用-vstack-🌟" tabindex="-1">如何使用 VStack 🌟 <a class="header-anchor" href="#如何使用-vstack-🌟" aria-label="Permalink to &quot;如何使用 VStack 🌟&quot;">​</a></h2><p>使用 <code>VStack</code> 非常直观。你只需将想要垂直排列的视图放入其闭包中。SwiftUI 会自动处理它们的布局。这就像搭积木一样简单，你只需把积木一块块地堆叠起来。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;欢迎来到 SwiftUI 世界！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">systemName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;star.fill&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.largeTitle)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">foregroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.yellow)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;点击我&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 执行操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这段代码会创建一个垂直堆叠的文本、星形图标和按钮。是不是很酷？</p><h2 id="强大的对齐与间距控制-💪" tabindex="-1">强大的对齐与间距控制 💪 <a class="header-anchor" href="#强大的对齐与间距控制-💪" aria-label="Permalink to &quot;强大的对齐与间距控制 💪&quot;">​</a></h2><p><code>VStack</code> 不仅仅是简单地堆叠视图。它还提供了强大的修饰符，让你能精确控制视图的对齐和间距。例如，你可以使用 <code>.leading</code> 对齐方式让所有内容靠左。</p><ul><li><strong>对齐方式</strong>: <ul><li><code>.leading</code>: 左对齐</li><li><code>.center</code>: 居中对齐 (默认)</li><li><code>.trailing</code>: 右对齐</li></ul></li><li><strong>间距</strong>: 你可以通过 <code>spacing</code> 参数来设置视图之间的固定间距。</li></ul><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .leading, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;我的个人资料&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.title)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;姓名：SwiftUI 开发者&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;城市：创新之都&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这个例子展示了如何创建一个左对齐且视图间距为10点的垂直布局。数据显示，使用 <code>VStack</code> 可以减少约 30% 的布局代码量，显著提升开发效率！🚀 掌握 <code>VStack</code>，你的UI布局能力将得到质的飞跃！</p>`,14)]))}const o=a(l,[["render",e]]);export{E as __pageData,o as default};
