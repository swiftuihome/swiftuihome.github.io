import{_ as e,c as a,o as i,ag as o}from"./chunks/framework.Bw-5EFTY.js";const p=JSON.parse('{"title":"📘 《SwiftUI 自定义视图组件》","description":"","frontmatter":{},"headers":[],"relativePath":"custom_views/index.md","filePath":"custom_views/index.md"}'),r={name:"custom_views/index.md"};function s(l,t,n,d,_,c){return i(),a("div",null,t[0]||(t[0]=[o('<h1 id="📘-《swiftui-自定义视图组件》" tabindex="-1">📘 《SwiftUI 自定义视图组件》 <a class="header-anchor" href="#📘-《swiftui-自定义视图组件》" aria-label="Permalink to &quot;📘 《SwiftUI 自定义视图组件》&quot;">​</a></h1><h2 id="📖-内容简介" tabindex="-1">📖 内容简介： <a class="header-anchor" href="#📖-内容简介" aria-label="Permalink to &quot;📖 内容简介：&quot;">​</a></h2><p>本书聚焦于 SwiftUI 的组件化开发实践，是初学者理解 SwiftUI 工作机制与构建可维护视图结构的理想起点。</p><p>从安装 Xcode 和第一个项目开始，读者将逐步掌握视图的创建、布局容器的使用、数据的双向绑定与状态驱动更新等核心技能，并进一步探索 SwiftUI 中的组件封装方式，包括自定义修饰符（ViewModifier）、视图样式（Style）、动画与过渡、手势交互等进阶主题。</p><p>在学习过程中，读者将循序渐进地完成多个功能完整的 UI 模块，包括按钮、输入控件、导航结构、列表、标签页与滚动视图等，最终掌握构建结构清晰、样式统一、交互自然的 SwiftUI 界面的方法。</p><p>本书还引入 SwiftData 框架与现代的数据模型定义方法，帮助你在掌握 UI 的同时，理解数据驱动界面更新的核心理念。</p><h2 id="本书适合" tabindex="-1">本书适合： <a class="header-anchor" href="#本书适合" aria-label="Permalink to &quot;本书适合：&quot;">​</a></h2><ul><li>希望快速上手 SwiftUI 开发的初学者</li><li>有 UIKit 基础，想转向声明式界面的开发者</li><li>在校学生、培训学员或企业内部转岗工程师</li></ul><p>通过阅读本书，你将能轻松应对日常的界面开发任务，并为后续组件化与模块化开发打下坚实基础。</p>',9)]))}const u=e(r,[["render",s]]);export{p as __pageData,u as default};
