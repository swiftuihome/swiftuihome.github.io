import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.Bw-5EFTY.js";const E=JSON.parse('{"title":"控制动画曲线与延迟","description":"","frontmatter":{},"headers":[],"relativePath":"core/10.3_控制动画曲线与延迟.md","filePath":"core/10.3_控制动画曲线与延迟.md"}'),t={name:"core/10.3_控制动画曲线与延迟.md"};function l(h,s,p,k,r,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="控制动画曲线与延迟" tabindex="-1">控制动画曲线与延迟 <a class="header-anchor" href="#控制动画曲线与延迟" aria-label="Permalink to &quot;控制动画曲线与延迟&quot;">​</a></h1><h2 id="动画曲线的魔力-✨" tabindex="-1">动画曲线的魔力 ✨ <a class="header-anchor" href="#动画曲线的魔力-✨" aria-label="Permalink to &quot;动画曲线的魔力 ✨&quot;">​</a></h2><p>在 SwiftUI 中，你可以通过 <code>.animation()</code> 修饰符轻松控制动画的节奏。这就像给你的视图运动设定一个独特的“个性”。默认情况下，SwiftUI 使用 <code>easeInOut</code> 曲线，它让动画开始和结束时都比较平缓。</p><p>但你可以选择更多！例如，<code>easeIn</code> 会让动画开始时慢，然后加速。而 <code>easeOut</code> 则相反，开始时快，然后减速。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello SwiftUI&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.largeTitle)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.easeIn, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: someState)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>选择合适的动画曲线能够极大地提升用户体验。想象一下，一个按钮点击后平滑地放大，而不是突然跳变，是不是感觉更棒？</p><h2 id="探索不同的动画曲线-🚀" tabindex="-1">探索不同的动画曲线 🚀 <a class="header-anchor" href="#探索不同的动画曲线-🚀" aria-label="Permalink to &quot;探索不同的动画曲线 🚀&quot;">​</a></h2><p>SwiftUI 提供了多种内置的动画曲线，每种都有其独特的视觉效果。了解它们能帮助你创造出更生动的界面。</p><ul><li><strong><code>.linear</code></strong>: 动画以恒定速度进行，没有加速或减速。这在需要精确时间控制的场景中非常有用。</li><li><strong><code>.spring()</code></strong>: 模拟弹簧效果，视图会超出目标位置一点，然后回弹。这能带来非常活泼和自然的动画效果。</li><li><strong><code>.interactiveSpring()</code></strong>: 类似于 <code>.spring()</code>，但更适合用户交互驱动的动画，例如拖拽手势。</li></ul><p>你可以根据动画的意图来选择最合适的曲线。例如，一个删除操作可能适合快速的 <code>easeOut</code>，而一个加载指示器则可能需要持续的 <code>linear</code>。</p><h2 id="精准控制动画延迟-⏱️" tabindex="-1">精准控制动画延迟 ⏱️ <a class="header-anchor" href="#精准控制动画延迟-⏱️" aria-label="Permalink to &quot;精准控制动画延迟 ⏱️&quot;">​</a></h2><p>除了动画曲线，你还可以通过 <code>.delay()</code> 修饰符来控制动画的开始时间。这在需要序列化动画或创建复杂动画流程时非常有用。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;延迟出现&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.easeInOut.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: showText)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这段代码会让文本在 <code>showText</code> 变为 <code>true</code> 后，等待 1 秒才开始淡入。这种延迟机制让你能够编排多个动画，使它们按顺序或在特定时间点发生。</p><p>例如，你可以让一个视图先移动，然后另一个视图再淡入，创造出流畅的过渡效果。这种精细的控制是构建专业级用户界面的关键。</p><h2 id="组合与自定义动画-🎨" tabindex="-1">组合与自定义动画 🎨 <a class="header-anchor" href="#组合与自定义动画-🎨" aria-label="Permalink to &quot;组合与自定义动画 🎨&quot;">​</a></h2><p>SwiftUI 的动画系统非常灵活，你可以将不同的动画修饰符组合起来，创造出独一无二的效果。例如，你可以将 <code>.delay()</code> 与任何动画曲线结合使用。</p><p>你甚至可以创建自定义的动画曲线，通过 <code>Animation.timingCurve()</code> 来定义贝塞尔曲线。这为你提供了无限的可能性，让你的动画与众不同。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timingCurve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: someState)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这种高级定制能力让你能够完全掌控动画的每一个细节，从而实现你所有的创意设想。尽情发挥你的想象力吧！</p>`,20)]))}const c=i(t,[["render",l]]);export{E as __pageData,c as default};
