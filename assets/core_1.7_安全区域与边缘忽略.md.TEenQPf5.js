import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"安全区域与边缘忽略","description":"","frontmatter":{},"headers":[],"relativePath":"core/1.7_安全区域与边缘忽略.md","filePath":"core/1.7_安全区域与边缘忽略.md"}'),l={name:"core/1.7_安全区域与边缘忽略.md"};function t(p,s,r,h,d,k){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="安全区域与边缘忽略" tabindex="-1">安全区域与边缘忽略 <a class="header-anchor" href="#安全区域与边缘忽略" aria-label="Permalink to &quot;安全区域与边缘忽略&quot;">​</a></h1><h2 id="安全区域的重要性" tabindex="-1">安全区域的重要性 <a class="header-anchor" href="#安全区域的重要性" aria-label="Permalink to &quot;安全区域的重要性&quot;">​</a></h2><p>在 SwiftUI 中，安全区域是指屏幕上视图内容不应被系统界面元素（如状态栏、导航栏、Home 指示器等）遮挡的区域。理解并正确使用安全区域对于创建美观且用户友好的应用至关重要。忽略安全区域可能导致内容被裁剪或遮挡，影响用户体验。</p><ul><li>确保你的应用在不同设备和屏幕尺寸上都能正确显示。</li><li>避免内容与系统界面元素重叠，提高可读性和可用性。</li><li>提供一致的用户体验，无论用户使用哪种设备。</li></ul><h2 id="了解-safeareainset" tabindex="-1">了解 <code>safeAreaInset</code> <a class="header-anchor" href="#了解-safeareainset" aria-label="Permalink to &quot;了解 \`safeAreaInset\`&quot;">​</a></h2><p><code>safeAreaInset</code> 是一个强大的工具，允许你自定义视图如何与安全区域交互。你可以使用它来增加或减少视图周围的安全区域，从而精确控制视图的布局。例如，你可以使用 <code>safeAreaInset</code> 将视图的内容推入安全区域，或者将视图的内容拉出安全区域。</p><ul><li><code>safeAreaInset(edge: .top, amount: 20)</code>：在顶部增加 20 个点的安全区域。</li><li><code>safeAreaInset(edge: .bottom, amount: -10)</code>：在底部减少 10 个点的安全区域。</li><li><code>safeAreaInset(edge: .all, amount: 5)</code>：在所有边缘增加 5 个点的安全区域。</li></ul><h2 id="边缘忽略-ignoressafearea" tabindex="-1">边缘忽略：<code>ignoresSafeArea()</code> <a class="header-anchor" href="#边缘忽略-ignoressafearea" aria-label="Permalink to &quot;边缘忽略：\`ignoresSafeArea()\`&quot;">​</a></h2><p>有时，你可能希望视图完全忽略安全区域，并延伸到屏幕的边缘。这时，你可以使用 <code>ignoresSafeArea()</code> 修饰符。这在创建全屏背景或沉浸式体验时非常有用。但是，请务必小心使用 <code>ignoresSafeArea()</code>，确保你的内容不会被系统界面元素遮挡。</p><blockquote><p>使用 <code>ignoresSafeArea()</code> 时，请务必进行充分的测试，以确保你的应用在各种设备上都能正常工作。</p></blockquote><h2 id="实际应用示例-🚀" tabindex="-1">实际应用示例 🚀 <a class="header-anchor" href="#实际应用示例-🚀" aria-label="Permalink to &quot;实际应用示例 🚀&quot;">​</a></h2><p>假设你想要创建一个全屏图像，并确保图像的内容不会被状态栏遮挡。你可以使用以下代码：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resizable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaledToFill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ignoresSafeArea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>或者，如果你想在列表顶部添加一个自定义标题，并确保标题位于安全区域内，你可以使用 <code>safeAreaInset</code>：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;我的列表&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.largeTitle)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">safeAreaInset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .top, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 列表内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>通过灵活运用 <code>safeAreaInset</code> 和 <code>ignoresSafeArea()</code>，你可以创建出令人惊叹且用户体验良好的 SwiftUI 应用。记住，良好的布局是优秀用户体验的基础！🎉</p>`,16)]))}const E=a(l,[["render",t]]);export{c as __pageData,E as default};
