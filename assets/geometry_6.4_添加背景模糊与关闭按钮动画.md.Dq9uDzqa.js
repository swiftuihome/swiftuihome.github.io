import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"添加背景模糊与关闭按钮动画","description":"","frontmatter":{},"headers":[],"relativePath":"geometry/6.4_添加背景模糊与关闭按钮动画.md","filePath":"geometry/6.4_添加背景模糊与关闭按钮动画.md"}'),l={name:"geometry/6.4_添加背景模糊与关闭按钮动画.md"};function p(t,s,h,k,d,r){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="添加背景模糊与关闭按钮动画" tabindex="-1">添加背景模糊与关闭按钮动画 <a class="header-anchor" href="#添加背景模糊与关闭按钮动画" aria-label="Permalink to &quot;添加背景模糊与关闭按钮动画&quot;">​</a></h1><h2 id="添加背景模糊效果-🎨" tabindex="-1">添加背景模糊效果 🎨 <a class="header-anchor" href="#添加背景模糊效果-🎨" aria-label="Permalink to &quot;添加背景模糊效果 🎨&quot;">​</a></h2><p>想要让你的卡片展开动画更上一层楼吗？添加背景模糊效果绝对是个好主意！它可以让用户的注意力更集中在卡片内容上，同时也能增加视觉层次感。你可以使用 <code>blur(radius:)</code> 修饰符来实现这个效果。只需简单几行代码，就能让你的 App 看起来更专业！✨</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Color.black.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: isExpanded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">edgesIgnoringSafeArea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.all)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><code>Color.black.opacity(0.3)</code>：创建一个半透明的黑色背景。</li><li><code>.blur(radius: isExpanded ? 10 : 0)</code>：根据 <code>isExpanded</code> 状态应用模糊效果。展开时模糊，收起时不模糊。</li><li><code>.edgesIgnoringSafeArea(.all)</code>：让背景覆盖整个屏幕，忽略安全区域。</li></ul><h2 id="实现关闭按钮动画-🎬" tabindex="-1">实现关闭按钮动画 🎬 <a class="header-anchor" href="#实现关闭按钮动画-🎬" aria-label="Permalink to &quot;实现关闭按钮动画 🎬&quot;">​</a></h2><p>一个优雅的关闭按钮动画能给用户带来更好的交互体验。你可以使用 <code>withAnimation</code> 来实现按钮的淡入淡出效果。当卡片展开时，按钮淡入；卡片收起时，按钮淡出。这样，用户就能清晰地知道如何关闭卡片。👍</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    withAnimation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        isExpanded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">systemName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmark.circle.fill&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.title)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">foregroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.white)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(isExpanded </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 控制按钮的透明度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li><code>withAnimation(.spring())</code>：使用弹簧动画，让按钮的出现和消失更自然。</li><li><code>opacity(isExpanded ? 1 : 0)</code>：根据 <code>isExpanded</code> 状态控制按钮的透明度。</li></ul><h2 id="优化动画效果-🚀" tabindex="-1">优化动画效果 🚀 <a class="header-anchor" href="#优化动画效果-🚀" aria-label="Permalink to &quot;优化动画效果 🚀&quot;">​</a></h2><p>为了让动画更流畅，你可以调整动画的曲线和时长。SwiftUI 提供了多种动画选项，例如 <code>.linear</code>、<code>.easeIn</code>、<code>.easeInOut</code> 等。选择合适的动画曲线，可以让你的动画看起来更自然、更舒适。同时，也要注意动画的时长，过快或过慢都会影响用户体验。⏱️</p><ul><li><code>.linear</code>：匀速动画。</li><li><code>.easeIn</code>：开始慢，然后加速。</li><li><code>.easeInOut</code>：开始和结束慢，中间加速。</li><li><code>.spring()</code>：弹簧动画，可以模拟物理效果。</li></ul><h2 id="解决常见问题-🛠️" tabindex="-1">解决常见问题 🛠️ <a class="header-anchor" href="#解决常见问题-🛠️" aria-label="Permalink to &quot;解决常见问题 🛠️&quot;">​</a></h2><p>在添加背景模糊和关闭按钮动画时，可能会遇到一些问题。例如，背景模糊效果不明显，或者关闭按钮的动画不流畅。这时，你可以尝试调整模糊半径、动画曲线和时长，找到最佳的参数组合。此外，还要注意视图的层级关系，确保背景模糊效果能够正确显示。💪</p><ol><li>检查 <code>isExpanded</code> 状态是否正确更新。</li><li>调整 <code>blur(radius:)</code> 的参数，找到合适的模糊程度。</li><li>使用不同的动画曲线，看看哪种效果最好。</li><li>确保关闭按钮的 <code>opacity</code> 属性正确绑定到 <code>isExpanded</code> 状态。</li></ol><p>希望这些技巧能帮助你打造出更炫酷的卡片展开动画！🎉</p>`,16)]))}const c=i(l,[["render",p]]);export{o as __pageData,c as default};
