import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"管理 SwiftUI 视图的尺寸与更新","description":"","frontmatter":{},"headers":[],"relativePath":"core/13.3_管理 SwiftUI 视图的尺寸与更新.md","filePath":"core/13.3_管理 SwiftUI 视图的尺寸与更新.md"}'),t={name:"core/13.3_管理 SwiftUI 视图的尺寸与更新.md"};function p(e,s,h,k,r,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="管理-swiftui-视图的尺寸与更新" tabindex="-1">管理 SwiftUI 视图的尺寸与更新 <a class="header-anchor" href="#管理-swiftui-视图的尺寸与更新" aria-label="Permalink to &quot;管理 SwiftUI 视图的尺寸与更新&quot;">​</a></h1><h2 id="管理-swiftui-视图的尺寸与更新-1" tabindex="-1">管理 SwiftUI 视图的尺寸与更新 <a class="header-anchor" href="#管理-swiftui-视图的尺寸与更新-1" aria-label="Permalink to &quot;管理 SwiftUI 视图的尺寸与更新&quot;">​</a></h2><p>在 UIKit/AppKit 中使用 SwiftUI 时，精确管理 SwiftUI 视图的尺寸和更新至关重要。这确保了你的 SwiftUI 内容能够无缝集成到现有的 UIKit/AppKit 应用中，并提供一致的用户体验。让我们一起探索如何有效地做到这一点！🚀</p><h2 id="尺寸管理策略" tabindex="-1">尺寸管理策略 <a class="header-anchor" href="#尺寸管理策略" aria-label="Permalink to &quot;尺寸管理策略&quot;">​</a></h2><p>首先，你需要明确 SwiftUI 视图在 UIKit/AppKit 容器中的尺寸。你可以使用以下方法来控制尺寸：</p><ol><li><p><strong>固定尺寸</strong>：直接设置 SwiftUI 视图的 <code>frame</code>。这适用于你知道 SwiftUI 视图所需确切尺寸的情况。例如，你可以设置一个固定高度和宽度的按钮。</p></li><li><p><strong>自动布局约束</strong>：使用 UIKit/AppKit 的自动布局约束来管理 SwiftUI 视图的尺寸。这允许 SwiftUI 视图根据其内容或周围的 UIKit/AppKit 元素动态调整大小。</p></li><li><p><strong><code>intrinsicContentSize</code></strong>：利用 SwiftUI 视图的固有内容尺寸。UIKit/AppKit 可以查询 SwiftUI 视图的 <code>intrinsicContentSize</code>，并据此调整布局。</p></li></ol><h2 id="更新机制" tabindex="-1">更新机制 <a class="header-anchor" href="#更新机制" aria-label="Permalink to &quot;更新机制&quot;">​</a></h2><p>SwiftUI 视图的更新由 SwiftUI 运行时管理。当 SwiftUI 视图的状态发生变化时，它会自动重新渲染。然而，在 UIKit/AppKit 中，你需要确保这些更新能够正确地反映出来。以下是一些关键点：</p><ul><li><p><strong><code>UIViewRepresentable</code> 和 <code>UIViewControllerRepresentable</code></strong>：这两个协议提供了桥接 SwiftUI 和 UIKit/AppKit 的机制。确保你的 <code>updateUIView</code> 或 <code>updateUIViewController</code> 方法能够正确地处理 SwiftUI 视图的更新。</p></li><li><p><strong><code>EnvironmentObject</code> 和 <code>ObservedObject</code></strong>：使用这些属性包装器来管理 SwiftUI 视图的状态。当这些状态发生变化时，SwiftUI 视图会自动更新。</p></li><li><p><strong><code>invalidateIntrinsicContentSize()</code></strong>：如果 SwiftUI 视图的内容尺寸发生变化，你需要调用 <code>invalidateIntrinsicContentSize()</code> 来通知 UIKit/AppKit。</p></li></ul><h2 id="示例代码片段" tabindex="-1">示例代码片段 <a class="header-anchor" href="#示例代码片段" aria-label="Permalink to &quot;示例代码片段&quot;">​</a></h2><p>以下是一个简单的示例，展示了如何在 UIKit 中嵌入 SwiftUI 视图，并管理其尺寸：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SwiftUI</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UIKit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MySwiftUIView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> counter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        VStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Counter: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(counter)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Increment&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                counter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyViewController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UIViewController </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> viewDidLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">viewDidLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> swiftUIView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MySwiftUIView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hostingController </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIHostingController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rootView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: swiftUIView)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        addChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hostingController)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        view.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addSubview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hostingController.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        hostingController.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">didMove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">toParent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        hostingController.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.translatesAutoresizingMaskIntoConstraints </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        NSLayoutConstraint.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            hostingController.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.topAnchor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view.topAnchor),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            hostingController.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.leadingAnchor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view.leadingAnchor),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            hostingController.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.trailingAnchor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view.trailingAnchor),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            hostingController.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.bottomAnchor.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: view.bottomAnchor)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><ul><li><p><strong>性能优化</strong>：避免不必要的 SwiftUI 视图更新。使用 <code>EquatableView</code> 或 <code>shouldUpdateUIView</code> 来减少不必要的渲染。</p></li><li><p><strong>响应式设计</strong>：确保你的 SwiftUI 视图能够适应不同的屏幕尺寸和方向。使用 <code>GeometryReader</code> 或 <code>SizeClass</code> 来实现响应式布局。</p></li><li><p><strong>测试</strong>： Thoroughly 测试你的 SwiftUI 视图在 UIKit/AppKit 中的集成，以确保其行为符合预期。</p></li></ul><p>通过掌握这些技巧，你可以自信地在 UIKit/AppKit 应用中集成 SwiftUI 视图，并提供卓越的用户体验！🎉</p>`,15)]))}const c=i(t,[["render",p]]);export{o as __pageData,c as default};
