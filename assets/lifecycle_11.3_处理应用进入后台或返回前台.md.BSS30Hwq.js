import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"处理应用进入后台或返回前台","description":"","frontmatter":{},"headers":[],"relativePath":"lifecycle/11.3_处理应用进入后台或返回前台.md","filePath":"lifecycle/11.3_处理应用进入后台或返回前台.md"}'),e={name:"lifecycle/11.3_处理应用进入后台或返回前台.md"};function p(h,s,t,k,r,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="处理应用进入后台或返回前台" tabindex="-1">处理应用进入后台或返回前台 <a class="header-anchor" href="#处理应用进入后台或返回前台" aria-label="Permalink to &quot;处理应用进入后台或返回前台&quot;">​</a></h1><blockquote><p>SwiftUI 应用程序的生命周期管理中，处理应用进入后台或返回前台至关重要。这不仅关乎用户体验，还直接影响数据安全和资源利用率。让我们一起探索如何在 SwiftUI 中优雅地处理这些状态变化！🚀</p></blockquote><h2 id="监听应用状态变化" tabindex="-1">监听应用状态变化 <a class="header-anchor" href="#监听应用状态变化" aria-label="Permalink to &quot;监听应用状态变化&quot;">​</a></h2><p>SwiftUI 提供了 <code>Environment</code> 属性 <code>@Environment(\\.scenePhase)</code>，你可以用它来监听应用的状态变化。<code>ScenePhase</code> 是一个枚举，包含以下几种状态：</p><ul><li><code>.active</code>: 应用处于前台活跃状态。</li><li><code>.inactive</code>: 应用处于非活跃状态，例如来电或锁屏。</li><li><code>.background</code>: 应用处于后台状态。</li></ul><p>你可以通过观察 <code>scenePhase</code> 的变化，执行相应的操作。例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\\.scenePhase) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scenePhase</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: scenePhase) { newPhase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newPhase {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .active</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;应用进入前台&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .inactive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;应用进入非活跃状态&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .background</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;应用进入后台&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            @unknown</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;未知状态&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="后台任务处理" tabindex="-1">后台任务处理 <a class="header-anchor" href="#后台任务处理" aria-label="Permalink to &quot;后台任务处理&quot;">​</a></h2><p>当应用进入后台时，系统会限制其资源使用。如果需要在后台执行任务，例如保存数据或完成网络请求，可以使用 <code>UIApplication.shared.beginBackgroundTask(expirationHandler:)</code>。</p><ol><li><strong>注册后台任务</strong>：在应用进入后台时，调用 <code>beginBackgroundTask</code> 注册一个后台任务。</li><li><strong>执行任务</strong>：在注册的任务中执行你的后台操作。</li><li><strong>结束任务</strong>：务必在任务完成后调用 <code>UIApplication.shared.endBackgroundTask(_:)</code> 结束任务，否则系统可能会终止应用。</li></ol><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">onChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: scenePhase) { newPhase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newPhase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .background {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> taskID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UIApplication.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beginBackgroundTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 后台任务超时处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            UIApplication.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">endBackgroundTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(taskID)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 执行后台任务，例如保存数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DispatchQueue.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 模拟耗时操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Thread.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forTimeInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;后台任务完成&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            UIApplication.shared.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">endBackgroundTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(taskID)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="数据持久化" tabindex="-1">数据持久化 <a class="header-anchor" href="#数据持久化" aria-label="Permalink to &quot;数据持久化&quot;">​</a></h2><p>应用进入后台时，应及时保存用户数据，防止数据丢失。你可以使用以下方法：</p><ul><li><strong>UserDefaults</strong>: 适合保存少量简单数据。</li><li><strong>Core Data</strong>: 适合管理复杂的数据模型。</li><li><strong>文件</strong>: 适合保存大型文件或二进制数据。</li></ul><p>确保在 <code>scenePhase</code> 变为 <code>.background</code> 时，执行数据保存操作。</p><h2 id="优化用户体验" tabindex="-1">优化用户体验 <a class="header-anchor" href="#优化用户体验" aria-label="Permalink to &quot;优化用户体验&quot;">​</a></h2><ul><li><strong>快速恢复</strong>：当应用从后台返回前台时，应尽快恢复到之前的状态，减少用户等待时间。</li><li><strong>状态保存</strong>：保存应用的状态，例如滚动位置、输入内容等，以便用户下次打开应用时能够继续之前的操作。</li><li><strong>资源释放</strong>：在应用进入后台时，释放不必要的资源，例如图片缓存、网络连接等，以减少内存占用。</li></ul><p>通过合理地处理应用进入后台和返回前台的状态，你可以提升应用的稳定性和用户体验。记住，及时保存数据、释放资源，并快速恢复应用状态，是构建优秀 SwiftUI 应用的关键！🎉</p>`,18)]))}const o=i(e,[["render",p]]);export{c as __pageData,o as default};
