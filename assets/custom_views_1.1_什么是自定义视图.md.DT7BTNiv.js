import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.ymCRTBvy.js";const c=JSON.parse('{"title":"什么是自定义视图？","description":"","frontmatter":{},"headers":[],"relativePath":"custom_views/1.1_什么是自定义视图.md","filePath":"custom_views/1.1_什么是自定义视图.md"}'),p={name:"custom_views/1.1_什么是自定义视图.md"};function e(t,s,h,k,r,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="什么是自定义视图" tabindex="-1">什么是自定义视图？ <a class="header-anchor" href="#什么是自定义视图" aria-label="Permalink to &quot;什么是自定义视图？&quot;">​</a></h1><p>自定义视图是 SwiftUI 开发中的强大工具，它允许你创建可重用、模块化的 UI 组件。 想象一下，你正在构建一个复杂的应用程序，其中包含许多相似但略有不同的部分。 🎨</p><p>与其每次都从头开始编写代码，不如将这些通用部分封装成自定义视图。 这样可以大大提高开发效率！</p><h2 id="为什么自定义视图如此重要" tabindex="-1">为什么自定义视图如此重要？ <a class="header-anchor" href="#为什么自定义视图如此重要" aria-label="Permalink to &quot;为什么自定义视图如此重要？&quot;">​</a></h2><p>自定义视图的核心在于其可重用性。 你可以设计一个视图，例如一个漂亮的卡片或一个独特的按钮，然后在应用程序的任何地方多次使用它。 🚀</p><p>这不仅节省了大量时间，还确保了整个应用程序 UI 的一致性。 统计数据显示，使用自定义视图可以减少高达 40% 的重复代码。</p><h2 id="自定义视图的优势" tabindex="-1">自定义视图的优势 <a class="header-anchor" href="#自定义视图的优势" aria-label="Permalink to &quot;自定义视图的优势&quot;">​</a></h2><p>自定义视图带来了诸多好处，让你的开发体验更加愉快和高效。 它们是构建健壮、可维护应用程序的关键。</p><ul><li><strong>代码复用性高</strong>：创建一次，随处使用。 这意味着更少的代码，更少的错误。</li><li><strong>提高可读性</strong>：将复杂 UI 拆分成小块，代码结构更清晰，易于理解。</li><li><strong>易于维护</strong>：如果需要更改某个 UI 元素，只需修改自定义视图一次即可。 🛠️</li><li><strong>促进团队协作</strong>：不同的开发者可以专注于不同的自定义视图，并行开发。</li></ul><h2 id="构建你的第一个自定义视图" tabindex="-1">构建你的第一个自定义视图 <a class="header-anchor" href="#构建你的第一个自定义视图" aria-label="Permalink to &quot;构建你的第一个自定义视图&quot;">​</a></h2><p>创建自定义视图非常简单。 你只需定义一个遵循 <code>View</code> 协议的结构体。 这个结构体必须有一个 <code>body</code> 属性，它返回一个或多个 SwiftUI 视图。</p><p>例如，你可以创建一个自定义的 <code>CardView</code>：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CardView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> title: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> description: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        VStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(title)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.headline)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(description)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.subheadline)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color.white)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cornerRadius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>然后，你可以在任何地方使用这个 <code>CardView</code>，只需传入不同的标题和描述即可。 真是太棒了！ 🤩 这种模块化的方法让你的代码库变得整洁有序，易于管理。</p>`,14)]))}const o=i(p,[["render",e]]);export{c as __pageData,o as default};
