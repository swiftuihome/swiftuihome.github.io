import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.ymCRTBvy.js";const c=JSON.parse('{"title":"访问当前订阅权利","description":"","frontmatter":{},"headers":[],"relativePath":"purchase/5.4_检查用户的当前订阅权利.md","filePath":"purchase/5.4_检查用户的当前订阅权利.md"}'),e={name:"purchase/5.4_检查用户的当前订阅权利.md"};function l(p,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="访问当前订阅权利" tabindex="-1">访问当前订阅权利 <a class="header-anchor" href="#访问当前订阅权利" aria-label="Permalink to &quot;访问当前订阅权利&quot;">​</a></h1><p>检查用户的当前订阅权利是订阅管理的核心。 你可以通过 <code>Transaction.currentEntitlements</code> 属性轻松实现这一点。 这是一个强大的工具，让你能够即时了解用户的订阅状态。 🚀</p><p>这个属性会返回一个包含所有当前有效订阅的数组。 想象一下，你正在构建一个高级内容平台，你需要知道用户是否已订阅。 <code>currentEntitlements</code> 就是你的答案！</p><h2 id="遍历订阅以验证状态" tabindex="-1">遍历订阅以验证状态 <a class="header-anchor" href="#遍历订阅以验证状态" aria-label="Permalink to &quot;遍历订阅以验证状态&quot;">​</a></h2><p>获取到 <code>currentEntitlements</code> 数组后，下一步就是遍历它。 你需要检查每个 <code>Entitlement</code> 对象，以确定其是否代表一个活跃的订阅。 这通常涉及检查订阅的 <code>productID</code> 和 <code>offerID</code>。</p><p>例如，你可以筛选出特定产品或服务的所有有效订阅。 这种方法确保你只关注与你的应用功能相关的订阅。 这是一个非常精确的验证过程。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verificationResult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Transaction.currentEntitlements {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verificationResult {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">verified</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entitlement)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 检查 entitlement.productID 和其他属性</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;已验证的权利：</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(entitlement.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">productID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unverified</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unverifiedTransaction, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verificationError)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 处理未验证的交易</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;未验证的交易：</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(unverifiedTransaction.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">productID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, 错误：</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(verificationError)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="处理订阅状态的逻辑" tabindex="-1">处理订阅状态的逻辑 <a class="header-anchor" href="#处理订阅状态的逻辑" aria-label="Permalink to &quot;处理订阅状态的逻辑&quot;">​</a></h2><p>一旦你确定了用户的订阅权利，就可以根据这些信息解锁相应的功能。 这可能包括：</p><ul><li><strong>解锁高级内容：</strong> 比如独家文章或视频。</li><li><strong>移除广告：</strong> 提供无广告的体验。</li><li><strong>启用额外功能：</strong> 比如云存储或高级编辑工具。</li></ul><p>记住，用户体验至关重要。 确保你的应用能够流畅地根据订阅状态调整其界面和功能。 你的用户会因此感到惊喜！ ✨</p><h2 id="持续监听订阅变化" tabindex="-1">持续监听订阅变化 <a class="header-anchor" href="#持续监听订阅变化" aria-label="Permalink to &quot;持续监听订阅变化&quot;">​</a></h2><p>订阅状态可能会随时改变，例如用户取消订阅或续订。 因此，持续监听 <code>Transaction.updates</code> 至关重要。 当有新的交易或状态更新时，<code>currentEntitlements</code> 会自动反映这些变化。</p><p>通过这种方式，你的应用始终保持最新状态，确保用户始终拥有正确的访问权限。 这是一个动态且响应迅速的系统。 保持警惕，你的应用将永远领先一步！ 🏆</p>`,14)]))}const o=i(e,[["render",l]]);export{c as __pageData,o as default};
