import{_ as t,c as e,o as i,ag as o}from"./chunks/framework.ymCRTBvy.js";const f=JSON.parse('{"title":"使用 SwiftyJSON 高效处理 JSON","description":"","frontmatter":{},"headers":[],"relativePath":"swift/swifty_json/目录.md","filePath":"swift/swifty_json/目录.md"}'),r={name:"swift/swifty_json/目录.md"};function s(_,a,p,n,S,h){return i(),e("div",null,a[0]||(a[0]=[o('<h1 id="使用-swiftyjson-高效处理-json" tabindex="-1">使用 SwiftyJSON 高效处理 JSON <a class="header-anchor" href="#使用-swiftyjson-高效处理-json" aria-label="Permalink to &quot;使用 SwiftyJSON 高效处理 JSON&quot;">​</a></h1><h2 id="第1章-理解json及其重要性" tabindex="-1">第1章_理解JSON及其重要性 <a class="header-anchor" href="#第1章-理解json及其重要性" aria-label="Permalink to &quot;第1章_理解JSON及其重要性&quot;">​</a></h2><p>1.1_什么是JSON？</p><p>1.2_为什么JSON在现代应用中被广泛使用</p><p>1.3_在Swift中处理JSON的挑战</p><h2 id="第2章-swiftyjson概述" tabindex="-1">第2章_SwiftyJSON概述 <a class="header-anchor" href="#第2章-swiftyjson概述" aria-label="Permalink to &quot;第2章_SwiftyJSON概述&quot;">​</a></h2><p>2.1_什么是SwiftyJSON？</p><p>2.2_使用SwiftyJSON相对于原生JSON处理的优势</p><p>2.3_SwiftyJSON的安装与设置</p><h2 id="第3章-解析json数据" tabindex="-1">第3章_解析JSON数据 <a class="header-anchor" href="#第3章-解析json数据" aria-label="Permalink to &quot;第3章_解析JSON数据&quot;">​</a></h2><p>3.1_从字符串解析JSON</p><p>3.2_从文件解析JSON</p><p>3.3_处理解析错误</p><h2 id="第4章-访问json数据" tabindex="-1">第4章_访问JSON数据 <a class="header-anchor" href="#第4章-访问json数据" aria-label="Permalink to &quot;第4章_访问JSON数据&quot;">​</a></h2><p>4.1_使用下标访问值</p><p>4.2_访问嵌套的JSON对象</p><p>4.3_访问JSON中的数组</p><h2 id="第5章-修改json数据" tabindex="-1">第5章_修改JSON数据 <a class="header-anchor" href="#第5章-修改json数据" aria-label="Permalink to &quot;第5章_修改JSON数据&quot;">​</a></h2><p>5.1_更新现有值</p><p>5.2_添加新的键值对</p><p>5.3_从JSON中移除键</p><h2 id="第6章-处理可选值" tabindex="-1">第6章_处理可选值 <a class="header-anchor" href="#第6章-处理可选值" aria-label="Permalink to &quot;第6章_处理可选值&quot;">​</a></h2><p>6.1_安全地处理可选值</p><p>6.2_在SwiftyJSON中使用可选链</p><p>6.3_为缺失的键提供默认值</p><h2 id="第7章-转换json数据" tabindex="-1">第7章_转换JSON数据 <a class="header-anchor" href="#第7章-转换json数据" aria-label="Permalink to &quot;第7章_转换JSON数据&quot;">​</a></h2><p>7.1_将JSON转换为Swift类型</p><p>7.2_使用SwiftyJSON进行自定义转换</p><p>7.3_将JSON映射到自定义对象</p><h2 id="第8章-错误处理与调试" tabindex="-1">第8章_错误处理与调试 <a class="header-anchor" href="#第8章-错误处理与调试" aria-label="Permalink to &quot;第8章_错误处理与调试&quot;">​</a></h2><p>8.1_常见错误及如何避免</p><p>8.2_调试JSON解析问题</p><p>8.3_验证JSON结构</p><h2 id="第9章-编写清晰且可维护的代码" tabindex="-1">第9章_编写清晰且可维护的代码 <a class="header-anchor" href="#第9章-编写清晰且可维护的代码" aria-label="Permalink to &quot;第9章_编写清晰且可维护的代码&quot;">​</a></h2><p>9.1_组织JSON处理逻辑</p><p>9.2_使用扩展以提高可读性</p><p>9.3_避免常见陷阱</p><h2 id="第10章-优化json解析性能" tabindex="-1">第10章_优化JSON解析性能 <a class="header-anchor" href="#第10章-优化json解析性能" aria-label="Permalink to &quot;第10章_优化JSON解析性能&quot;">​</a></h2><p>10.1_使用SwiftyJSON减少内存占用</p><p>10.2_提高解析速度</p><p>10.3_高效处理大型JSON文件</p><h2 id="第11章-在ios应用中集成swiftyjson" tabindex="-1">第11章_在iOS应用中集成SwiftyJSON <a class="header-anchor" href="#第11章-在ios应用中集成swiftyjson" aria-label="Permalink to &quot;第11章_在iOS应用中集成SwiftyJSON&quot;">​</a></h2><p>11.1_从API获取并解析JSON</p><p>11.2_在UI组件中显示JSON数据</p><p>11.3_处理动态JSON响应</p><h2 id="第12章-在服务器端swift中使用swiftyjson" tabindex="-1">第12章_在服务器端Swift中使用SwiftyJSON <a class="header-anchor" href="#第12章-在服务器端swift中使用swiftyjson" aria-label="Permalink to &quot;第12章_在服务器端Swift中使用SwiftyJSON&quot;">​</a></h2><p>12.1_在Vapor应用中解析JSON</p><p>12.2_在Kitura项目中处理JSON</p><p>12.3_服务器端JSON处理的最佳实践</p>',49)]))}const N=t(r,[["render",s]]);export{f as __pageData,N as default};
