import{_ as i,c as n,o as a,ag as e}from"./chunks/framework.Bw-5EFTY.js";const o=JSON.parse('{"title":"使用EnvironmentValues传递全局配置","description":"","frontmatter":{},"headers":[],"relativePath":"custom_views/11.1_使用EnvironmentValues传递全局配置.md","filePath":"custom_views/11.1_使用EnvironmentValues传递全局配置.md"}'),l={name:"custom_views/11.1_使用EnvironmentValues传递全局配置.md"};function p(t,s,h,r,k,E){return a(),n("div",null,s[0]||(s[0]=[e(`<h1 id="使用environmentvalues传递全局配置" tabindex="-1">使用EnvironmentValues传递全局配置 <a class="header-anchor" href="#使用environmentvalues传递全局配置" aria-label="Permalink to &quot;使用EnvironmentValues传递全局配置&quot;">​</a></h1><p>使用 <code>EnvironmentValues</code> 传递全局配置，就像给你的 SwiftUI 应用添加了一套内置的配置中心！ 🤩 你可以通过它轻松地在整个应用中共享和访问配置信息，而无需手动传递。</p><h2 id="什么是-environmentvalues" tabindex="-1">什么是 EnvironmentValues？ <a class="header-anchor" href="#什么是-environmentvalues" aria-label="Permalink to &quot;什么是 EnvironmentValues？&quot;">​</a></h2><p><code>EnvironmentValues</code> 是 SwiftUI 提供的一个结构体，它存储了影响视图层次结构中所有视图的环境值。你可以把它想象成一个全局字典，其中键是 <code>EnvironmentKey</code> 的实例，值是与该键关联的数据。</p><ul><li>它允许你定义和访问全局配置，例如主题颜色、字体大小或 API 端点。</li><li><code>EnvironmentValues</code> 是只读的，这意味着你不能直接修改它。相反，你需要使用 <code>environment(_:_:)</code> 修饰符来设置新的环境值。</li></ul><h2 id="如何使用-environmentvalues" tabindex="-1">如何使用 EnvironmentValues？ <a class="header-anchor" href="#如何使用-environmentvalues" aria-label="Permalink to &quot;如何使用 EnvironmentValues？&quot;">​</a></h2><p>使用 <code>EnvironmentValues</code> 非常简单！ 你只需要以下几个步骤：</p><ol><li><p><strong>定义一个 <code>EnvironmentKey</code>：</strong> 创建一个遵循 <code>EnvironmentKey</code> 协议的结构体。这个结构体需要定义一个 <code>defaultValue</code> 属性，它指定了环境值的默认值。</p></li><li><p><strong>扩展 <code>EnvironmentValues</code>：</strong> 为你的自定义环境值添加一个计算属性到 <code>EnvironmentValues</code> 中。这使得你可以使用点语法来访问环境值。</p></li><li><p><strong>设置环境值：</strong> 使用 <code>environment(_:_:)</code> 修饰符在视图层次结构中设置环境值。</p></li><li><p><strong>访问环境值：</strong> 使用 <code>@Environment</code> 属性包装器在视图中访问环境值。</p></li></ol><p>例如，假设你想定义一个全局的 API 端点配置：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> APIEndpointKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EnvironmentKey </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> defaultValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://default.api.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extension</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EnvironmentValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apiEndpoint: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[APIEndpointKey.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[APIEndpointKey.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newValue }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>然后，你可以在你的应用中设置和访问这个 API 端点：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\\.apiEndpoint) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apiEndpoint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;API Endpoint: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(apiEndpoint)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">App </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scene {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        WindowGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\\.apiEndpoint, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://my.custom.api.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="environmentvalues-的优势" tabindex="-1">EnvironmentValues 的优势 <a class="header-anchor" href="#environmentvalues-的优势" aria-label="Permalink to &quot;EnvironmentValues 的优势&quot;">​</a></h2><p>使用 <code>EnvironmentValues</code> 有很多好处：</p><ul><li><strong>简化配置管理：</strong> 你可以集中管理你的应用配置，而无需手动传递。</li><li><strong>提高代码可读性：</strong> 使用 <code>@Environment</code> 属性包装器可以使你的代码更简洁易懂。</li><li><strong>支持动态配置：</strong> 你可以在运行时更改环境值，从而实现动态配置。</li><li><strong>方便测试：</strong> 你可以在测试中轻松地模拟环境值，从而提高测试覆盖率。</li></ul><p>总而言之，<code>EnvironmentValues</code> 是一个强大的工具，可以帮助你构建更灵活、可维护和可测试的 SwiftUI 应用。 🚀 试试看，你会发现它能大大简化你的开发工作！ 🎉</p>`,16)]))}const c=i(l,[["render",p]]);export{o as __pageData,c as default};
