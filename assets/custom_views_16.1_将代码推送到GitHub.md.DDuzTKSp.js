import{_ as s,c as a,o as t,ag as e}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"推送你的SwiftUI组件到GitHub","description":"","frontmatter":{},"headers":[],"relativePath":"custom_views/16.1_将代码推送到GitHub.md","filePath":"custom_views/16.1_将代码推送到GitHub.md"}'),n={name:"custom_views/16.1_将代码推送到GitHub.md"};function l(p,i,h,r,d,o){return t(),a("div",null,i[0]||(i[0]=[e('<h1 id="推送你的swiftui组件到github" tabindex="-1">推送你的SwiftUI组件到GitHub <a class="header-anchor" href="#推送你的swiftui组件到github" aria-label="Permalink to &quot;推送你的SwiftUI组件到GitHub&quot;">​</a></h1><h2 id="准备你的github仓库" tabindex="-1">准备你的GitHub仓库 <a class="header-anchor" href="#准备你的github仓库" aria-label="Permalink to &quot;准备你的GitHub仓库&quot;">​</a></h2><p>将你的SwiftUI组件库推送到GitHub是分享和协作的关键一步！🚀 首先，你需要在GitHub上创建一个新的仓库。这就像为你的代码准备一个家。</p><p>你可以选择公开或私有仓库。公开仓库能让全世界看到你的杰作，而私有仓库则更适合个人项目或团队内部使用。</p><ul><li><strong>创建新仓库</strong>： <ol><li>登录GitHub。</li><li>点击右上角的“+”号，选择“New repository”。</li><li>输入仓库名称，例如“MySwiftUIComponents”。</li><li>添加一个简短的描述。</li><li>选择公开或私有。</li><li>勾选“Add a README file”来初始化仓库。</li><li>点击“Create repository”。</li></ol></li></ul><h2 id="初始化本地git仓库" tabindex="-1">初始化本地Git仓库 <a class="header-anchor" href="#初始化本地git仓库" aria-label="Permalink to &quot;初始化本地Git仓库&quot;">​</a></h2><p>现在，你的本地项目需要与GitHub仓库连接起来。这需要一些简单的Git命令。别担心，这比你想象的要容易得多！</p><p>打开你的终端（Terminal）应用，导航到你的Swift包项目根目录。</p><ul><li><p><strong>初始化Git</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个命令会在你的项目文件夹中创建一个隐藏的.git目录，标志着它现在是一个Git仓库了。</p></li><li><p><strong>添加所有文件</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这会将你项目中的所有文件添加到暂存区，准备进行提交。</p></li><li><p><strong>首次提交</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Initial commit of SwiftUI component library&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这条命令会创建一个新的提交，并附上你的提交信息。这是一个重要的里程碑！</p></li></ul><h2 id="连接远程仓库并推送" tabindex="-1">连接远程仓库并推送 <a class="header-anchor" href="#连接远程仓库并推送" aria-label="Permalink to &quot;连接远程仓库并推送&quot;">​</a></h2><p>最后一步是将你的本地代码推送到GitHub。这就像把你的作品上传到云端，让它变得可访问。</p><ul><li><p><strong>添加远程源</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">你的GitHub仓库UR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>将<code>&lt;你的GitHub仓库URL&gt;</code>替换为你刚刚创建的GitHub仓库的HTTPS或SSH链接。例如，<code>https://github.com/yourusername/MySwiftUIComponents.git</code>。</p></li><li><p><strong>推送代码</strong>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这条命令会将你的本地<code>main</code>分支推送到GitHub上的<code>origin</code>远程仓库。如果你的默认分支是<code>master</code>，请将<code>main</code>替换为<code>master</code>。</p></li></ul><p>恭喜你！🎉 你的SwiftUI组件库现在已经在GitHub上安家了。这意味着其他开发者可以轻松地发现、克隆和使用你的组件。据统计，超过80%的开源项目都托管在GitHub上，这无疑是分享代码的最佳平台之一。你的贡献将帮助整个社区成长！💪</p>',13)]))}const b=s(n,[["render",l]]);export{c as __pageData,b as default};
