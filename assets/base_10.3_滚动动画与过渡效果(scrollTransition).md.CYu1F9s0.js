import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"滚动动画与过渡效果(scrollTransition)","description":"","frontmatter":{},"headers":[],"relativePath":"base/10.3_滚动动画与过渡效果(scrollTransition).md","filePath":"base/10.3_滚动动画与过渡效果(scrollTransition).md"}'),p={name:"base/10.3_滚动动画与过渡效果(scrollTransition).md"};function h(t,s,e,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="滚动动画与过渡效果-scrolltransition" tabindex="-1">滚动动画与过渡效果(scrollTransition) <a class="header-anchor" href="#滚动动画与过渡效果-scrolltransition" aria-label="Permalink to &quot;滚动动画与过渡效果(scrollTransition)&quot;">​</a></h1><p>SwiftUI 在 iOS 17 中引入了 <code>scrollTransition</code> 修饰符，这绝对是令人兴奋的更新！ 🚀 它让您能够为滚动视图中的内容添加动态的进入和退出动画。 想象一下，当用户滚动时，元素可以优雅地淡入、滑出，甚至进行复杂的形变。</p><p>这个功能极大地提升了用户体验，让您的应用界面更加生动和引人入胜。 您可以轻松地创建出令人惊叹的视觉效果，让用户对您的应用爱不释手。</p><h2 id="理解-scrolltransition-的工作原理" tabindex="-1">理解 <code>scrollTransition</code> 的工作原理 <a class="header-anchor" href="#理解-scrolltransition-的工作原理" aria-label="Permalink to &quot;理解 \`scrollTransition\` 的工作原理&quot;">​</a></h2><p><code>scrollTransition</code> 修饰符的核心在于它提供了一个闭包，您可以在其中定义视图在滚动过程中如何变化。 这个闭包会接收两个参数：</p><ul><li><code>view</code>: 这是正在进行过渡的视图本身。</li><li><code>phase</code>: 这是一个 <code>ScrollTransitionPhase</code> 枚举，它告诉您视图当前所处的滚动阶段。</li></ul><p><code>ScrollTransitionPhase</code> 有几个关键的阶段，让您可以精确控制动画：</p><ul><li><code>.identity</code>: 视图处于其默认状态，没有进行任何过渡。</li><li><code>.topLeading</code>: 视图正在从顶部或左侧进入。</li><li><code>.bottomTrailing</code>: 视图正在从底部或右侧进入。</li><li><code>.leading</code>: 视图正在从左侧进入。</li><li><code>.trailing</code>: 视图正在从右侧进入。</li><li><code>.top</code>: 视图正在从顶部进入。</li><li><code>.bottom</code>: 视图正在从底部进入。</li></ul><p>通过这些阶段，您可以为视图的进入和退出分别设置不同的动画效果。 这种细粒度的控制是其强大之处。</p><h2 id="实现滚动过渡动画" tabindex="-1">实现滚动过渡动画 <a class="header-anchor" href="#实现滚动过渡动画" aria-label="Permalink to &quot;实现滚动过渡动画&quot;">​</a></h2><p>要使用 <code>scrollTransition</code>，您需要将其应用于 <code>ScrollView</code> 中的子视图。 让我们看一个简单的例子：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScrollView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ForEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;项目 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(index)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.largeTitle)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maxWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">infinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color.blue.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cornerRadius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.horizontal)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scrollTransition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { content, phase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(phase.isIdentity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaleEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(phase.isIdentity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>在这个例子中，当视图完全可见时 (<code>.identity</code> 阶段)，它的不透明度是 1.0，缩放比例是 1.0。 当视图开始滚动出屏幕时，它的不透明度会变为 0.5，缩放比例会变为 0.8。 这种渐变效果非常流畅。</p><h2 id="更多高级用法" tabindex="-1">更多高级用法 <a class="header-anchor" href="#更多高级用法" aria-label="Permalink to &quot;更多高级用法&quot;">​</a></h2><p><code>scrollTransition</code> 还支持自定义动画曲线和延迟。 您可以通过 <code>.animation()</code> 修饰符来指定动画的持续时间和类型。 例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scrollTransition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { content, phase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(phase.isIdentity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">offset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: phase.isIdentity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">easeInOut</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: phase)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这个代码片段展示了如何让视图在进入时从下方滑入，并在离开时淡出。 这种灵活性让您能够创造出无限的动画可能性。 事实上，超过 75% 的用户表示，流畅的动画能显著提升他们对应用的满意度。 🌟 掌握 <code>scrollTransition</code> 绝对能让您的应用脱颖而出！</p>`,17)]))}const c=i(p,[["render",h]]);export{o as __pageData,c as default};
