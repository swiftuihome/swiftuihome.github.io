import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const c=JSON.parse('{"title":"id 参数：标识视图的唯一性","description":"","frontmatter":{},"headers":[],"relativePath":"geometry/1.5_id参数：标识视图的唯一性.md","filePath":"geometry/1.5_id参数：标识视图的唯一性.md"}'),l={name:"geometry/1.5_id参数：标识视图的唯一性.md"};function t(h,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="id-参数-标识视图的唯一性" tabindex="-1">id 参数：标识视图的唯一性 <a class="header-anchor" href="#id-参数-标识视图的唯一性" aria-label="Permalink to &quot;id 参数：标识视图的唯一性&quot;">​</a></h1><p>在使用 <code>matchedGeometryEffect</code> 时，<code>id</code> 参数是至关重要的。它用于标识视图的唯一性，使得在动画过渡过程中，系统能够正确地识别和匹配源视图与目标视图。通过为每个视图分配一个唯一的 <code>id</code>，你可以确保动画的流畅性和一致性。</p><h2 id="_1-如何使用-id-参数" tabindex="-1">1. 如何使用 id 参数 <a class="header-anchor" href="#_1-如何使用-id-参数" aria-label="Permalink to &quot;1. 如何使用 id 参数&quot;">​</a></h2><ul><li><strong>唯一性</strong>：每个视图都需要一个独特的 <code>id</code>，以便在动画过程中进行匹配。例如，如果你有两个视图需要进行过渡，确保它们的 <code>id</code> 不同。</li><li><strong>示例代码</strong>：<div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@Namespace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> animationNamespace</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    VStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isExpanded {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color.blue)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">matchedGeometryEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rectangle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: animationNamespace)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color.blue)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">matchedGeometryEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rectangle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: animationNamespace)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li></ul><h2 id="_2-动画效果的实现" tabindex="-1">2. 动画效果的实现 <a class="header-anchor" href="#_2-动画效果的实现" aria-label="Permalink to &quot;2. 动画效果的实现&quot;">​</a></h2><p>通过为视图指定相同的 <code>id</code>，你可以实现平滑的动画效果。当视图状态发生变化时，系统会自动处理视图之间的过渡。这样，用户在界面上看到的变化将更加自然。</p><ul><li><strong>状态切换</strong>：使用 <code>@State</code> 来控制视图的显示状态。例如，点击按钮可以切换 <code>isExpanded</code> 的值，从而触发动画。</li><li><strong>用户体验</strong>：这种方式不仅提升了用户体验，还使得界面更加生动。</li></ul><h2 id="_3-视图之间的匹配" tabindex="-1">3. 视图之间的匹配 <a class="header-anchor" href="#_3-视图之间的匹配" aria-label="Permalink to &quot;3. 视图之间的匹配&quot;">​</a></h2><p>在多个视图之间使用相同的 <code>id</code>，可以确保它们在动画过程中保持一致性。无论是位置、大小还是其他几何属性，系统都会根据 <code>id</code> 来进行匹配。</p><ul><li><strong>匹配属性</strong>：你可以选择匹配特定的几何属性，如位置或大小，这样可以更精确地控制动画效果。</li><li><strong>示例</strong>：<div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rectangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">matchedGeometryEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rectangle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: animationNamespace, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .frame)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h2 id="_4-小贴士" tabindex="-1">4. 小贴士 <a class="header-anchor" href="#_4-小贴士" aria-label="Permalink to &quot;4. 小贴士&quot;">​</a></h2><ul><li><strong>避免重复</strong>：确保每个视图的 <code>id</code> 唯一，避免在同一动画命名空间中重复使用相同的 <code>id</code>。</li><li><strong>调试</strong>：在调试动画时，检查 <code>id</code> 是否正确设置，以确保动画效果如预期。</li></ul><p>通过合理使用 <code>id</code> 参数，你可以在 SwiftUI 中创建出色的动画效果，提升应用的视觉吸引力和用户体验。🎉</p>`,13)]))}const o=i(l,[["render",t]]);export{c as __pageData,o as default};
