import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"10.4_配置UIStackView的spacing属性","description":"","frontmatter":{},"headers":[],"relativePath":"swift/uikit/basics/10.4_配置UIStackView的spacing属性.md","filePath":"swift/uikit/basics/10.4_配置UIStackView的spacing属性.md"}'),l={name:"swift/uikit/basics/10.4_配置UIStackView的spacing属性.md"};function t(p,s,c,h,k,r){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_10-4-配置uistackview的spacing属性" tabindex="-1">10.4_配置UIStackView的spacing属性 <a class="header-anchor" href="#_10-4-配置uistackview的spacing属性" aria-label="Permalink to &quot;10.4_配置UIStackView的spacing属性&quot;">​</a></h1><blockquote><p>UIStackView 是一个强大的布局容器，可以帮助你轻松创建各种线性布局。其中，<code>spacing</code> 属性用于设置 stack view 中各个视图之间的间距。掌握 <code>spacing</code> 的配置，能让你更好地控制布局效果，让你的界面更加美观和专业。</p></blockquote><h2 id="什么是-spacing-🤔" tabindex="-1">什么是 spacing？🤔 <a class="header-anchor" href="#什么是-spacing-🤔" aria-label="Permalink to &quot;什么是 spacing？🤔&quot;">​</a></h2><p><code>spacing</code> 属性定义了 UIStackView 中相邻视图之间的最小距离。你可以把它想象成视图之间的“呼吸空间”。通过调整 <code>spacing</code> 的值，你可以控制视图之间的紧密程度，从而影响整个布局的视觉效果。</p><ul><li><strong>默认值:</strong> 默认情况下，<code>spacing</code> 的值为 0。</li><li><strong>正值:</strong> 正值表示视图之间存在间距。</li><li><strong>负值:</strong> 负值允许视图重叠，但需要谨慎使用，避免出现视觉混乱。</li></ul><h2 id="如何设置-spacing-🛠️" tabindex="-1">如何设置 spacing？🛠️ <a class="header-anchor" href="#如何设置-spacing-🛠️" aria-label="Permalink to &quot;如何设置 spacing？🛠️&quot;">​</a></h2><p>你可以通过代码来设置 <code>spacing</code> 属性。以下是一个简单的例子：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stackView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIStackView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stackView.spacing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 设置间距为 10 points</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>你也可以在 Interface Builder 中设置 <code>spacing</code> 属性。选择你的 stack view，然后在 Attributes Inspector 中找到 &quot;Spacing&quot; 选项，输入你想要的数值即可。</p><h2 id="spacing-的不同模式-🌈" tabindex="-1">spacing 的不同模式 🌈 <a class="header-anchor" href="#spacing-的不同模式-🌈" aria-label="Permalink to &quot;spacing 的不同模式 🌈&quot;">​</a></h2><p>UIStackView 的 <code>distribution</code> 属性会影响 <code>spacing</code> 的行为。不同的 <code>distribution</code> 模式下，<code>spacing</code> 的作用方式略有不同。</p><ol><li><strong><code>Fill</code>:</strong> 视图会尽可能填充 stack view 的可用空间，<code>spacing</code> 保持不变。</li><li><strong><code>Fill Equally</code>:</strong> 视图会平均分配 stack view 的可用空间，<code>spacing</code> 保持不变。</li><li><strong><code>Fill Proportionally</code>:</strong> 视图会根据其 intrinsic content size 比例分配空间，<code>spacing</code> 保持不变。</li><li><strong><code>Equal Spacing</code>:</strong> 视图之间的间距相等，视图的大小会根据可用空间进行调整。</li><li><strong><code>Equal Centering</code>:</strong> 视图的中心点之间的距离相等，视图的大小和间距都会根据可用空间进行调整。</li></ol><h2 id="spacing-的实际应用-💡" tabindex="-1">spacing 的实际应用 💡 <a class="header-anchor" href="#spacing-的实际应用-💡" aria-label="Permalink to &quot;spacing 的实际应用 💡&quot;">​</a></h2><ul><li><strong>创建列表:</strong> 使用 UIStackView 和 <code>spacing</code> 可以轻松创建列表，例如设置列表项之间的间距。</li><li><strong>按钮组:</strong> 将多个按钮放入 UIStackView 中，并设置合适的 <code>spacing</code>，可以创建美观的按钮组。</li><li><strong>自定义布局:</strong> 结合不同的 <code>distribution</code> 模式和 <code>spacing</code> 值，你可以创建各种复杂的自定义布局。</li></ul><h2 id="示例代码-📝" tabindex="-1">示例代码 📝 <a class="header-anchor" href="#示例代码-📝" aria-label="Permalink to &quot;示例代码 📝&quot;">​</a></h2><p>以下是一个更完整的示例，展示如何使用 UIStackView 和 <code>spacing</code> 创建一个简单的水平布局：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> label1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UILabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">label1.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Label 1&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> label2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UILabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">label2.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Label 2&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> label3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UILabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">label3.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Label 3&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stackView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIStackView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrangedSubviews</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [label1, label2, label3])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stackView.axis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .horizontal</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stackView.distribution </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .fillEqually</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stackView.spacing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 添加 stackView 到你的 view 中，并设置约束</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>通过调整 <code>stackView.spacing</code> 的值，你可以改变 label 之间的间距，从而影响整个布局的视觉效果。记住，实践是最好的老师！动手尝试不同的 <code>spacing</code> 值，你会更好地理解它的作用。加油！💪</p>`,18)]))}const g=i(l,[["render",t]]);export{o as __pageData,g as default};
