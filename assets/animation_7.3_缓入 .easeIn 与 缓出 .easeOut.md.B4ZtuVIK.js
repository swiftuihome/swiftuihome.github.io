import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const E=JSON.parse('{"title":"7.3_缓入 .easeIn 与 缓出 .easeOut","description":"","frontmatter":{},"headers":[],"relativePath":"animation/7.3_缓入 .easeIn 与 缓出 .easeOut.md","filePath":"animation/7.3_缓入 .easeIn 与 缓出 .easeOut.md"}'),l={name:"animation/7.3_缓入 .easeIn 与 缓出 .easeOut.md"};function t(p,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_7-3-缓入-easein-与-缓出-easeout" tabindex="-1">7.3_缓入 .easeIn 与 缓出 .easeOut <a class="header-anchor" href="#_7-3-缓入-easein-与-缓出-easeout" aria-label="Permalink to &quot;7.3_缓入 .easeIn 与 缓出 .easeOut&quot;">​</a></h1><p>SwiftUI动画中，<code>.easeIn</code> 和 <code>.easeOut</code> 是两种常用的内置动画曲线，它们分别代表<strong>加速</strong>和<strong>减速</strong>的效果。掌握它们，能让你的动画更具表现力！🚀</p><h2 id="缓入-ease-in-起步慢-后程快" tabindex="-1">缓入（Ease In）：起步慢，后程快 <a class="header-anchor" href="#缓入-ease-in-起步慢-后程快" aria-label="Permalink to &quot;缓入（Ease In）：起步慢，后程快&quot;">​</a></h2><p><code>.easeIn</code> 动画曲线的特点是<strong>开始时速度较慢，然后逐渐加速</strong>。想象一下，一辆汽车缓缓启动，然后逐渐加速到正常速度。这种效果非常适合用于元素的<strong>进入</strong>动画，例如：</p><ul><li>视图从屏幕外滑入。</li><li>元素逐渐显示出来。</li><li>属性值缓慢增加。</li></ul><p>使用 <code>.easeIn</code> 可以让动画显得更加自然和流畅，避免突兀感。例如，一个按钮从透明到完全显示，使用 <code>.easeIn</code> 会让它看起来更优雅。</p><h2 id="缓出-ease-out-起步快-后程慢" tabindex="-1">缓出（Ease Out）：起步快，后程慢 <a class="header-anchor" href="#缓出-ease-out-起步快-后程慢" aria-label="Permalink to &quot;缓出（Ease Out）：起步快，后程慢&quot;">​</a></h2><p>与 <code>.easeIn</code> 相反，<code>.easeOut</code> 动画曲线的特点是<strong>开始时速度较快，然后逐渐减速</strong>。想象一下，一辆汽车高速行驶，然后逐渐减速到停止。这种效果非常适合用于元素的<strong>退出</strong>动画，例如：</p><ul><li>视图滑出屏幕。</li><li>元素逐渐消失。</li><li>属性值缓慢减小。</li></ul><p><code>.easeOut</code> 可以让动画的结束更加柔和，避免生硬感。例如，一个视图从屏幕中心缩小并消失，使用 <code>.easeOut</code> 会让它看起来更平滑。</p><h2 id="如何选择-easein-vs-easeout" tabindex="-1">如何选择：<code>.easeIn</code> vs <code>.easeOut</code>？ <a class="header-anchor" href="#如何选择-easein-vs-easeout" aria-label="Permalink to &quot;如何选择：\`.easeIn\` vs \`.easeOut\`？&quot;">​</a></h2><p>选择 <code>.easeIn</code> 还是 <code>.easeOut</code>，取决于你想要表达的动画效果。一般来说：</p><ol><li><strong>进入动画</strong>：使用 <code>.easeIn</code>，让元素逐渐进入视野。</li><li><strong>退出动画</strong>：使用 <code>.easeOut</code>，让元素平滑退出视野。</li></ol><p>当然，这并不是绝对的规则。你可以根据具体情况进行调整，甚至可以结合使用 <code>.easeIn</code> 和 <code>.easeOut</code>，创造出更复杂的动画效果。例如，一个视图先使用 <code>.easeIn</code> 进入，然后使用 <code>.easeOut</code> 退出，可以产生一种“弹簧”的效果。</p><ul><li><strong>例子</strong>：一个气泡从屏幕底部升起（<code>.easeIn</code>），到达顶部后缓缓消失（<code>.easeOut</code>）。</li><li><strong>例子</strong>：一个菜单从屏幕左侧滑入（<code>.easeIn</code>），点击后平滑滑出（<code>.easeOut</code>）。</li></ul><h2 id="代码示例" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例" aria-label="Permalink to &quot;代码示例&quot;">​</a></h2><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SwiftUI</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @State</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isAnimating </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        VStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">offset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: isAnimating </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 150</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">easeIn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: isAnimating) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用 easeIn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Animate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                isAnimating.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">toggle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>在这个例子中，圆圈会以 <code>.easeIn</code> 的方式从左向右移动。你可以尝试将 <code>.easeIn</code> 替换为 <code>.easeOut</code>，看看效果有什么不同。你会发现，使用 <code>.easeOut</code> 时，圆圈一开始移动速度很快，然后逐渐减速。🎉</p>`,18)]))}const c=i(l,[["render",t]]);export{E as __pageData,c as default};
