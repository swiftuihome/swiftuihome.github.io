import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.ymCRTBvy.js";const c=JSON.parse('{"title":"在AppDelegate中处理旧版iOS启动流程","description":"","frontmatter":{},"headers":[],"relativePath":"swift/uikit/advanced/1.4_在AppDelegate中处理旧版iOS启动流程.md","filePath":"swift/uikit/advanced/1.4_在AppDelegate中处理旧版iOS启动流程.md"}'),l={name:"swift/uikit/advanced/1.4_在AppDelegate中处理旧版iOS启动流程.md"};function p(t,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="在appdelegate中处理旧版ios启动流程" tabindex="-1">在AppDelegate中处理旧版iOS启动流程 <a class="header-anchor" href="#在appdelegate中处理旧版ios启动流程" aria-label="Permalink to &quot;在AppDelegate中处理旧版iOS启动流程&quot;">​</a></h1><h2 id="适配旧版ios启动流程的必要性" tabindex="-1">适配旧版iOS启动流程的必要性 <a class="header-anchor" href="#适配旧版ios启动流程的必要性" aria-label="Permalink to &quot;适配旧版iOS启动流程的必要性&quot;">​</a></h2><p>在告别Storyboard的纯代码项目中，我们通常会利用<code>SceneDelegate</code>来管理iOS 13及更高版本应用的生命周期和UI。然而，为了确保你的应用能在更广泛的设备上运行，特别是那些仍在使用iOS 12或更早版本的用户，对<code>AppDelegate</code>进行适当的配置是至关重要的。这就像为你的应用搭建了一座时光机，让它能无缝穿梭于新旧系统之间！🚀</p><h2 id="配置appdelegate以支持旧版系统" tabindex="-1">配置AppDelegate以支持旧版系统 <a class="header-anchor" href="#配置appdelegate以支持旧版系统" aria-label="Permalink to &quot;配置AppDelegate以支持旧版系统&quot;">​</a></h2><p>当你的应用在iOS 12或更早的系统上启动时，系统不会调用<code>SceneDelegate</code>。相反，它会直接与<code>AppDelegate</code>进行交互。因此，你需要在<code>AppDelegate</code>中实现一个关键方法来设置应用的初始界面。这个方法就是<code>application(_:didFinishLaunchingWithOptions:)</code>，它是应用启动的入口点。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// AppDelegate.swift</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UIKit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AppDelegate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UIResponder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UIApplicationDelegate </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window: UIWindow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 为旧版iOS声明一个UIWindow属性</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> application: UIApplication, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">didFinishLaunchingWithOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> launchOptions: [UIApplication.LaunchOptionsKey: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 仅在iOS 13以下版本执行此代码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">iOS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // iOS 13及更高版本由SceneDelegate处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 为旧版iOS手动设置window和根视图控制器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            window </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: UIScreen.main.bounds)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            window</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.rootViewController </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ViewController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设你的初始视图控制器是ViewController</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            window</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">makeKeyAndVisible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // MARK: UISceneSession lifecycle (iOS 13+ only)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ... 其他SceneDelegate相关方法 ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="深入理解-available条件编译" tabindex="-1">深入理解<code>#available</code>条件编译 <a class="header-anchor" href="#深入理解-available条件编译" aria-label="Permalink to &quot;深入理解\`#available\`条件编译&quot;">​</a></h2><p>你可能注意到了代码中的<code>#available(iOS 13.0, *)</code>。这是一个非常强大的Swift特性，被称为条件编译。它允许你根据运行时的iOS版本来执行不同的代码块。这意味着你可以编写一套代码，既能完美支持最新的iOS系统，又能优雅地兼容旧版本，真是太棒了！✨</p><ul><li><code>iOS 13.0</code>: 指定了该代码块适用的最低iOS版本。</li><li><code>*</code>: 表示在所有其他更高版本上都适用。</li></ul><h2 id="设置旧版应用的根视图控制器" tabindex="-1">设置旧版应用的根视图控制器 <a class="header-anchor" href="#设置旧版应用的根视图控制器" aria-label="Permalink to &quot;设置旧版应用的根视图控制器&quot;">​</a></h2><p>在<code>application(_:didFinishLaunchingWithOptions:)</code>方法中，当检测到是iOS 13以下系统时，你需要手动完成以下步骤：</p><ol><li><strong>创建<code>UIWindow</code>实例</strong>: <ul><li><code>window = UIWindow(frame: UIScreen.main.bounds)</code>：这会创建一个与设备屏幕大小相同的窗口。<code>UIWindow</code>是所有视图的容器，没有它，你的应用就无法显示任何内容。</li></ul></li><li><strong>设置根视图控制器</strong>: <ul><li><code>window?.rootViewController = ViewController()</code>：将你的初始视图控制器（例如<code>ViewController</code>）设置为窗口的根视图控制器。这是应用启动后用户看到的第一个界面。</li></ul></li><li><strong>使窗口可见</strong>: <ul><li><code>window?.makeKeyAndVisible()</code>：这个方法会使你的窗口成为主窗口并显示出来。没有这一步，即使你设置了根视图控制器，用户也看不到它。</li></ul></li></ol><h2 id="确保兼容性的重要性" tabindex="-1">确保兼容性的重要性 <a class="header-anchor" href="#确保兼容性的重要性" aria-label="Permalink to &quot;确保兼容性的重要性&quot;">​</a></h2><p>忽略旧版iOS的兼容性可能会导致你的应用无法在大量设备上运行，从而失去潜在用户。根据最新的统计数据，虽然iOS 13及更高版本的普及率很高，但仍有约5%到10%的用户停留在旧版本。通过在<code>AppDelegate</code>中进行这些简单的配置，你就能确保你的应用能够触达更广泛的用户群体，让更多人体验到你的精彩作品！这绝对是值得投入的精力！👍</p>`,14)]))}const g=i(l,[["render",p]]);export{c as __pageData,g as default};
