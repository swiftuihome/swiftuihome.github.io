import{_ as i,c as a,o as n,ag as p}from"./chunks/framework.ymCRTBvy.js";const c=JSON.parse('{"title":"1.2_创建新的iOS_App项目模板","description":"","frontmatter":{},"headers":[],"relativePath":"uikit/basics/1.2_创建新的iOS_App项目模板.md","filePath":"uikit/basics/1.2_创建新的iOS_App项目模板.md"}'),l={name:"uikit/basics/1.2_创建新的iOS_App项目模板.md"};function e(t,s,h,r,k,o){return n(),a("div",null,s[0]||(s[0]=[p(`<h1 id="_1-2-创建新的ios-app项目模板" tabindex="-1">1.2_创建新的iOS_App项目模板 <a class="header-anchor" href="#_1-2-创建新的ios-app项目模板" aria-label="Permalink to &quot;1.2_创建新的iOS_App项目模板&quot;">​</a></h1><p>创建新的iOS App项目模板，开启你的iOS开发之旅吧！🎉 让我们一起创建一个没有Storyboard的iOS应用项目模板，这会让你更深入地理解UIKit的底层工作原理。</p><h2 id="创建新项目" tabindex="-1">创建新项目 <a class="header-anchor" href="#创建新项目" aria-label="Permalink to &quot;创建新项目&quot;">​</a></h2><p>首先，打开Xcode。在启动界面，选择 &quot;Create a new Xcode project&quot;。你会看到一个模板选择界面。选择 &quot;iOS&quot; 选项卡，然后选择 &quot;App&quot; 模板。点击 &quot;Next&quot;。</p><p>接下来，你需要填写一些项目信息。</p><ul><li><strong>Product Name</strong>: 这是你的应用名称。例如，你可以命名为 &quot;MyUIKitApp&quot;。</li><li><strong>Organization Identifier</strong>: 这是你的组织标识符，通常是反向域名格式。例如，&quot;com.example&quot;。</li><li><strong>Bundle Identifier</strong>: 这是应用的唯一标识符，由Organization Identifier和Product Name组成。</li><li><strong>Interface</strong>: 这里非常重要！确保选择 &quot;SwiftUI&quot; 而不是 &quot;Storyboard&quot;。虽然我们最终会移除SwiftUI的内容，但这是创建无Storyboard项目的起点。</li><li><strong>Language</strong>: 选择 &quot;Swift&quot;。</li></ul><p>点击 &quot;Next&quot;，选择一个保存项目的目录，然后点击 &quot;Create&quot;。</p><h2 id="项目结构概览" tabindex="-1">项目结构概览 <a class="header-anchor" href="#项目结构概览" aria-label="Permalink to &quot;项目结构概览&quot;">​</a></h2><p>创建项目后，你会看到Xcode的项目结构。你会注意到以下几个重要的文件：</p><ul><li><code>MyUIKitAppApp.swift</code>: 这是SwiftUI应用的入口点。</li><li><code>ContentView.swift</code>: 这是一个默认的SwiftUI视图。</li><li><code>Info.plist</code>: 这是一个包含应用配置信息的文件。</li></ul><h2 id="清理swiftui模板" tabindex="-1">清理SwiftUI模板 <a class="header-anchor" href="#清理swiftui模板" aria-label="Permalink to &quot;清理SwiftUI模板&quot;">​</a></h2><p>虽然我们选择了SwiftUI模板，但我们的目标是创建一个纯UIKit项目。因此，我们需要清理一些SwiftUI相关的代码。</p><ol><li>删除 <code>ContentView.swift</code> 文件。在项目导航器中，右键点击 <code>ContentView.swift</code>，然后选择 &quot;Delete&quot;，并选择 &quot;Move to Trash&quot;。</li><li>修改 <code>MyUIKitAppApp.swift</code> 文件。打开 <code>MyUIKitAppApp.swift</code> 文件，你会看到类似下面的代码：</li></ol><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SwiftUI</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyUIKitAppApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">App </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scene {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        WindowGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>将这段代码替换为以下代码：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UIKit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AppDelegate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UIResponder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UIApplicationDelegate </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window: UIWindow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> application: UIApplication, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">didFinishLaunchingWithOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> launchOptions: [UIApplication.LaunchOptionsKey: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Override point for customization after application launch.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        window </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: UIScreen.main.bounds)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viewController </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UIViewController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        viewController.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.backgroundColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .white</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        window</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.rootViewController </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viewController</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        window</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">makeKeyAndVisible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>这段代码做了以下几件事：</p><ol><li>将 <code>App</code> 结构体替换为 <code>AppDelegate</code> 类，并继承 <code>UIResponder</code> 和 <code>UIApplicationDelegate</code>。</li><li>声明一个 <code>window</code> 属性，类型为 <code>UIWindow?</code>。</li><li>在 <code>application(_:didFinishLaunchingWithOptions:)</code> 方法中，创建 <code>UIWindow</code> 对象，设置根视图控制器，并将窗口显示出来。</li></ol><h2 id="运行项目" tabindex="-1">运行项目 <a class="header-anchor" href="#运行项目" aria-label="Permalink to &quot;运行项目&quot;">​</a></h2><p>现在，你可以运行你的项目了。点击Xcode的 &quot;Run&quot; 按钮（或按下 <code>Command + R</code>）。你应该会看到一个空白的白色屏幕。这表明你已经成功创建了一个没有Storyboard的UIKit项目！🎉</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>通过以上步骤，你已经成功创建了一个没有Storyboard的iOS应用项目模板。这个模板为你后续的UIKit开发打下了坚实的基础。你可以继续添加视图、控制器和其他UI元素，构建你的应用。记住，理解UIKit的底层工作原理对于成为一名优秀的iOS开发者至关重要。继续加油！💪</p>`,22)]))}const E=i(l,[["render",e]]);export{c as __pageData,E as default};
