import{_ as e,c as t,o as r,ag as a}from"./chunks/framework.ymCRTBvy.js";const f=JSON.parse('{"title":"1.4_移除Info.plist中的Storyboard配置","description":"","frontmatter":{},"headers":[],"relativePath":"swift/uikit/basics/1.4_移除Info.plist中的Storyboard配置.md","filePath":"swift/uikit/basics/1.4_移除Info.plist中的Storyboard配置.md"}'),d={name:"swift/uikit/basics/1.4_移除Info.plist中的Storyboard配置.md"};function i(c,o,n,s,l,p){return r(),t("div",null,o[0]||(o[0]=[a('<h1 id="_1-4-移除info-plist中的storyboard配置" tabindex="-1">1.4_移除Info.plist中的Storyboard配置 <a class="header-anchor" href="#_1-4-移除info-plist中的storyboard配置" aria-label="Permalink to &quot;1.4_移除Info.plist中的Storyboard配置&quot;">​</a></h1><h2 id="告别storyboard入口-🚀" tabindex="-1">告别Storyboard入口 🚀 <a class="header-anchor" href="#告别storyboard入口-🚀" aria-label="Permalink to &quot;告别Storyboard入口 🚀&quot;">​</a></h2><p>在iOS开发中，<code>Info.plist</code> 文件扮演着应用程序配置中心的角色。它包含了许多关键信息，例如应用名称、图标、权限设置等。对于我们告别Storyboard的项目，移除其中关于Storyboard的配置是至关重要的一步。这一操作确保了系统不会尝试加载一个不存在的Storyboard文件，从而避免了潜在的运行时错误。</p><h2 id="为什么需要移除storyboard配置-🤔" tabindex="-1">为什么需要移除Storyboard配置？ 🤔 <a class="header-anchor" href="#为什么需要移除storyboard配置-🤔" aria-label="Permalink to &quot;为什么需要移除Storyboard配置？ 🤔&quot;">​</a></h2><p>当你创建一个新的iOS项目时，Xcode默认会为你配置一个名为 <code>Main.storyboard</code> 的文件作为应用程序的用户界面入口。这个配置信息就存储在 <code>Info.plist</code> 中。具体来说，它通常位于 <code>Application Scene Manifest</code> -&gt; <code>Scene Configuration</code> -&gt; <code>Application Session Role</code> -&gt; <code>Item 0</code> -&gt; <code>Storyboard Name</code> 键下。如果这个键值存在，系统就会在应用启动时去寻找并加载 <code>Main.storyboard</code>。</p><ul><li><strong>避免崩溃</strong>: 如果我们删除了 <code>Main.storyboard</code> 文件，但没有移除 <code>Info.plist</code> 中的相应配置，应用在启动时会因为找不到指定的Storyboard而崩溃。</li><li><strong>纯代码UI</strong>: 我们的目标是完全通过代码来构建用户界面。移除Storyboard配置是实现这一目标的关键一步，它标志着我们正式转向纯代码UI开发。</li><li><strong>清晰的项目结构</strong>: 这样做能让项目结构更清晰，避免了不必要的配置项，让你的项目更加精简高效。</li></ul><h2 id="动手移除storyboard配置-🛠️" tabindex="-1">动手移除Storyboard配置 🛠️ <a class="header-anchor" href="#动手移除storyboard配置-🛠️" aria-label="Permalink to &quot;动手移除Storyboard配置 🛠️&quot;">​</a></h2><p>移除 <code>Info.plist</code> 中的Storyboard配置是一个非常简单的过程，但它对项目的运行方式有着深远的影响。</p><ol><li><strong>打开 <code>Info.plist</code> 文件</strong>: 在Xcode的项目导航器中，找到并点击你的项目名称，然后展开 <code>Info</code> 文件夹，你会看到 <code>Info.plist</code> 文件。双击它即可打开。</li><li><strong>定位 <code>Application Scene Manifest</code></strong>: 在 <code>Info.plist</code> 的属性列表中，找到 <code>Application Scene Manifest</code> 这一项。它通常是一个字典类型。</li><li><strong>展开 <code>Scene Configuration</code></strong>: 在 <code>Application Scene Manifest</code> 下，展开 <code>Scene Configuration</code>。</li><li><strong>找到 <code>Application Session Role</code></strong>: 接着展开 <code>Application Session Role</code>。</li><li><strong>删除 <code>Storyboard Name</code></strong>: 在 <code>Item 0</code> 下，你会看到一个名为 <code>Storyboard Name</code> 的键。选中它，然后点击底部的减号 (-) 按钮将其删除。</li></ol><p>恭喜你！🎉 你已经成功地从 <code>Info.plist</code> 中移除了Storyboard的配置。这一步是迈向纯代码UI开发的重要里程碑。</p><h2 id="验证配置移除的正确性-✅" tabindex="-1">验证配置移除的正确性 ✅ <a class="header-anchor" href="#验证配置移除的正确性-✅" aria-label="Permalink to &quot;验证配置移除的正确性 ✅&quot;">​</a></h2><p>完成上述步骤后，你可以通过以下方式来验证配置是否已成功移除：</p><ul><li><strong>再次检查 <code>Info.plist</code></strong>: 重新打开 <code>Info.plist</code> 文件，确保 <code>Storyboard Name</code> 键已经不存在。</li><li><strong>尝试运行应用</strong>: 尽管我们还没有设置根视图控制器，但你可以尝试运行应用。如果之前删除了 <code>Main.storyboard</code> 且没有移除 <code>Info.plist</code> 配置，应用会崩溃。现在，它应该会启动到一个空白屏幕（因为我们还没有设置任何视图），这表明Storyboard配置已不再影响应用启动。</li></ul><p>这一小步，却是你掌握纯代码iOS开发的一大步！继续加油，你正在构建一个更灵活、更强大的应用！💪</p>',14)]))}const S=e(d,[["render",i]]);export{f as __pageData,S as default};
