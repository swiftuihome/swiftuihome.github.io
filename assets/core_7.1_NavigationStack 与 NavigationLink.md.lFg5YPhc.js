import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.Bw-5EFTY.js";const o=JSON.parse('{"title":"NavigationStack 与 NavigationLink","description":"","frontmatter":{},"headers":[],"relativePath":"core/7.1_NavigationStack 与 NavigationLink.md","filePath":"core/7.1_NavigationStack 与 NavigationLink.md"}'),l={name:"core/7.1_NavigationStack 与 NavigationLink.md"};function p(k,s,e,h,r,E){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="navigationstack-与-navigationlink" tabindex="-1">NavigationStack 与 NavigationLink <a class="header-anchor" href="#navigationstack-与-navigationlink" aria-label="Permalink to &quot;NavigationStack 与 NavigationLink&quot;">​</a></h1><h2 id="探索-navigationstack-的魅力" tabindex="-1">探索 NavigationStack 的魅力 <a class="header-anchor" href="#探索-navigationstack-的魅力" aria-label="Permalink to &quot;探索 NavigationStack 的魅力&quot;">​</a></h2><p>NavigationStack 是 SwiftUI 中构建导航流的核心组件，它提供了一个基于栈的导航模型。你可以轻松地将视图推入或弹出栈，实现流畅的页面跳转体验。这就像你正在翻阅一本精彩的书籍，每一页都是一个新视图！📚</p><p>使用 NavigationStack，你的应用将拥有清晰的层级结构。用户可以直观地理解他们在应用中的位置。这对于提升用户体验至关重要，因为没有人喜欢在应用中迷失方向。</p><h2 id="navigationlink-连接视图的桥梁" tabindex="-1">NavigationLink：连接视图的桥梁 <a class="header-anchor" href="#navigationlink-连接视图的桥梁" aria-label="Permalink to &quot;NavigationLink：连接视图的桥梁&quot;">​</a></h2><p>NavigationLink 是实现视图跳转的关键。它允许你声明一个可点击的元素，当用户点击时，会将目标视图推送到 NavigationStack 中。想象一下，它就像一道神奇的传送门，瞬间将用户带到新的目的地！✨</p><p>例如，你可以将 NavigationLink 嵌入到列表中，让每个列表项都能导航到详情页。这种模式在许多应用中都非常常见，例如电商应用的商品列表或新闻应用的文章列表。</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ContentView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NavigationStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                NavigationLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;前往详情页 A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;详情 A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                NavigationLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;前往详情页 B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;详情 B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">navigationDestination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                DetailView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: value)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">navigationTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;主页&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DetailView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">View </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> body: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> View {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">navigationTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="深度解析导航目的地" tabindex="-1">深度解析导航目的地 <a class="header-anchor" href="#深度解析导航目的地" aria-label="Permalink to &quot;深度解析导航目的地&quot;">​</a></h2><p>NavigationStack 结合 <code>navigationDestination(for:destination:)</code> 修饰符，能够根据数据类型自动处理导航。这意味着你可以定义不同类型的数据如何映射到不同的目标视图。这极大地增强了导航的灵活性和可维护性。</p><ul><li><strong>类型安全导航</strong>: 你可以为特定的数据类型定义导航路径。</li><li><strong>数据驱动</strong>: 导航不再是硬编码的，而是由数据驱动。</li><li><strong>可重用性</strong>: 相同的导航逻辑可以应用于不同的场景。</li></ul><p>例如，当用户点击一个 <code>String</code> 类型的值时，你可以将其导航到一个显示该字符串的详情页。如果点击的是一个 <code>Int</code> 类型的值，则可以导航到另一个显示数字的视图。这种强大的机制让你的导航逻辑更加健壮。</p><h2 id="实践中的导航技巧" tabindex="-1">实践中的导航技巧 <a class="header-anchor" href="#实践中的导航技巧" aria-label="Permalink to &quot;实践中的导航技巧&quot;">​</a></h2><p>掌握 NavigationStack 和 NavigationLink 的使用，将为你的 SwiftUI 应用带来无限可能。以下是一些实用的技巧：</p><ul><li><strong>嵌套导航</strong>: 你可以在 NavigationStack 内部嵌套其他视图，甚至其他 NavigationStack，以创建复杂的导航层次。</li><li><strong>编程式导航</strong>: 除了声明式导航，你还可以通过编程方式控制导航栈，例如在某个操作完成后自动跳转到特定页面。</li><li><strong>自定义导航栏</strong>: 利用 <code>navigationTitle</code> 和 <code>toolbar</code> 修饰符，你可以轻松定制导航栏的外观和行为，添加按钮或自定义视图。</li></ul><p>根据统计，超过 70% 的 iOS 应用都依赖于强大的导航功能来提供流畅的用户体验。熟练掌握这些技术，你将能够构建出令人惊叹的应用！🚀</p>`,16)]))}const d=i(l,[["render",p]]);export{o as __pageData,d as default};
