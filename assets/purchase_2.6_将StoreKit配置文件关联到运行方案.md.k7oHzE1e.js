import{_ as e,c as o,o as i,ag as a}from"./chunks/framework.ymCRTBvy.js";const h=JSON.parse('{"title":"将StoreKit配置文件关联到运行方案","description":"","frontmatter":{},"headers":[],"relativePath":"purchase/2.6_将StoreKit配置文件关联到运行方案.md","filePath":"purchase/2.6_将StoreKit配置文件关联到运行方案.md"}'),r={name:"purchase/2.6_将StoreKit配置文件关联到运行方案.md"};function l(d,t,c,u,_,n){return i(),o("div",null,t[0]||(t[0]=[a('<h1 id="将storekit配置文件关联到运行方案" tabindex="-1">将StoreKit配置文件关联到运行方案 <a class="header-anchor" href="#将storekit配置文件关联到运行方案" aria-label="Permalink to &quot;将StoreKit配置文件关联到运行方案&quot;">​</a></h1><p>将 StoreKit 配置文件关联到运行方案，是确保你的 SwiftUI 订阅功能在 Xcode 中能够正确模拟和测试的关键一步。 让我们一起看看如何操作，让你的应用顺利支持订阅功能！🚀</p><h2 id="选择正确的运行方案" tabindex="-1">选择正确的运行方案 <a class="header-anchor" href="#选择正确的运行方案" aria-label="Permalink to &quot;选择正确的运行方案&quot;">​</a></h2><p>首先，你需要确保你正在使用正确的运行方案。 运行方案定义了 Xcode 在构建和运行你的应用时使用的设置。 确保你选择的方案是你想要测试订阅功能的那个。</p><ul><li>点击 Xcode 窗口顶部的方案菜单（通常显示你的应用名称）。</li><li>选择你的目标设备或模拟器。</li><li>确保选择的方案与你的开发环境相匹配。</li></ul><h2 id="编辑运行方案" tabindex="-1">编辑运行方案 <a class="header-anchor" href="#编辑运行方案" aria-label="Permalink to &quot;编辑运行方案&quot;">​</a></h2><p>接下来，你需要编辑你的运行方案，以便 Xcode 知道使用你的 StoreKit 配置文件。 这将允许你在本地模拟购买流程，而无需连接到真实的 App Store。</p><ol><li>点击 Xcode 窗口顶部的方案菜单。</li><li>选择 &quot;Edit Scheme...&quot;。</li><li>在弹出的窗口中，选择 &quot;Run&quot; 选项卡。</li></ol><h2 id="配置-storekit" tabindex="-1">配置 StoreKit <a class="header-anchor" href="#配置-storekit" aria-label="Permalink to &quot;配置 StoreKit&quot;">​</a></h2><p>现在，让我们配置 StoreKit 以使用你的 <code>.storekit</code> 文件。 这将告诉 Xcode 在测试期间使用你的本地订阅配置。</p><ul><li>在 &quot;Run&quot; 选项卡中，找到 &quot;Options&quot; 部分。</li><li>勾选 &quot;StoreKit Configuration&quot; 复选框。</li><li>在下拉菜单中，选择你的 <code>.storekit</code> 文件。 如果你的文件没有显示，请确保它已添加到你的项目中。🎉</li></ul><h2 id="验证配置" tabindex="-1">验证配置 <a class="header-anchor" href="#验证配置" aria-label="Permalink to &quot;验证配置&quot;">​</a></h2><p>最后，验证你的配置是否正确。 运行你的应用，并检查 Xcode 的控制台输出，以确保 StoreKit 正在使用你的配置文件。 你应该看到类似 &quot;Loaded StoreKit configuration from...&quot; 的消息。</p><ul><li>构建并运行你的应用。</li><li>检查 Xcode 的控制台输出。</li><li>确认 StoreKit 正在使用你的 <code>.storekit</code> 文件。</li></ul><p>通过这些步骤，你就可以成功地将 StoreKit 配置文件关联到你的运行方案了！ 这样，你就可以在本地测试你的订阅功能，确保一切都按预期工作。 祝你编码愉快！ 🥳</p>',15)]))}const p=e(r,[["render",l]]);export{h as __pageData,p as default};
