import{_ as e,c as t,o as i,ag as r}from"./chunks/framework.Bw-5EFTY.js";const u=JSON.parse('{"title":"《SwiftUI从入门到进阶》","description":"","frontmatter":{},"headers":[],"relativePath":"base/目录.md","filePath":"base/目录.md"}'),o={name:"base/目录.md"};function n(l,a,h,d,s,c){return i(),t("div",null,a[0]||(a[0]=[r('<h1 id="《swiftui从入门到进阶》" tabindex="-1">《SwiftUI从入门到进阶》 <a class="header-anchor" href="#《swiftui从入门到进阶》" aria-label="Permalink to &quot;《SwiftUI从入门到进阶》&quot;">​</a></h1><h2 id="第1章-环境搭建与项目创建" tabindex="-1">第1章：环境搭建与项目创建 <a class="header-anchor" href="#第1章-环境搭建与项目创建" aria-label="Permalink to &quot;第1章：环境搭建与项目创建&quot;">​</a></h2><p>1.1 安装Xcode 15 1.2 创建第一个SwiftUI项目 1.3 理解项目文件结构 1.4 认识Xcode预览画布(Canvas)</p><h2 id="第2章-核心概念-视图与修饰符" tabindex="-1">第2章：核心概念：视图与修饰符 <a class="header-anchor" href="#第2章-核心概念-视图与修饰符" aria-label="Permalink to &quot;第2章：核心概念：视图与修饰符&quot;">​</a></h2><p>2.1 什么是视图(View) 2.2 使用文本视图(Text) 2.3 使用图像视图(Image) 2.4 应用修饰符(Modifiers)改变外观 2.5 链式调用修饰符的顺序影响</p><h2 id="第3章-构建简单布局" tabindex="-1">第3章：构建简单布局 <a class="header-anchor" href="#第3章-构建简单布局" aria-label="Permalink to &quot;第3章：构建简单布局&quot;">​</a></h2><p>3.1 垂直布局容器(VStack) 3.2 水平布局容器(HStack) 3.3 层叠布局容器(ZStack) 3.4 使用Spacer和Divider进行空间调整</p><h2 id="第4章-管理视图内部状态" tabindex="-1">第4章：管理视图内部状态 <a class="header-anchor" href="#第4章-管理视图内部状态" aria-label="Permalink to &quot;第4章：管理视图内部状态&quot;">​</a></h2><p>4.1 使用@State管理简单值类型 4.2 通过$符号创建双向绑定(Binding) 4.3 了解视图的生命周期与状态更新</p><h2 id="第5章-跨视图共享数据" tabindex="-1">第5章：跨视图共享数据 <a class="header-anchor" href="#第5章-跨视图共享数据" aria-label="Permalink to &quot;第5章：跨视图共享数据&quot;">​</a></h2><p>5.1 使用@ObservedObject监听外部对象 5.2 使用@StateObject确保对象生命周期 5.3 定义符合ObservableObject协议的类 5.4 使用@Published发布属性变更</p><h2 id="第6章-全局数据与环境" tabindex="-1">第6章：全局数据与环境 <a class="header-anchor" href="#第6章-全局数据与环境" aria-label="Permalink to &quot;第6章：全局数据与环境&quot;">​</a></h2><p>6.1 使用@EnvironmentObject在全局共享数据 6.2 在视图层级中注入环境对象 6.3 读取系统环境值(@Environment)</p><h2 id="第7章-用户输入与控件" tabindex="-1">第7章：用户输入与控件 <a class="header-anchor" href="#第7章-用户输入与控件" aria-label="Permalink to &quot;第7章：用户输入与控件&quot;">​</a></h2><p>7.1 创建按钮(Button) 7.2 使用文本输入框(TextField) 7.3 安全文本输入框(SecureField) 7.4 使用开关(Toggle) 7.5 创建滑块(Slider) 7.6 使用步进器(Stepper) 7.7 选择器(Picker)的用法</p><h2 id="第8章-列表与导航" tabindex="-1">第8章：列表与导航 <a class="header-anchor" href="#第8章-列表与导航" aria-label="Permalink to &quot;第8章：列表与导航&quot;">​</a></h2><p>8.1 创建静态列表(List) 8.2 创建动态数据列表(List与ForEach) 8.3 实现列表项选择与操作 8.4 使用NavigationStack进行导航 8.5 通过NavigationLink跳转页面 8.6 自定义导航栏标题与按钮</p><h2 id="第9章-高级视图与布局" tabindex="-1">第9章：高级视图与布局 <a class="header-anchor" href="#第9章-高级视图与布局" aria-label="Permalink to &quot;第9章：高级视图与布局&quot;">​</a></h2><p>9.1 创建可滚动视图(ScrollView) 9.2 使用网格布局(Grid) 9.3 表单的构建(Form) 9.4 分组框(GroupBox)与控制组(ControlGroup) 9.5 标签视图(TabView)实现多标签页</p><h2 id="第10章-ios-17新增功能" tabindex="-1">第10章：iOS 17新增功能 <a class="header-anchor" href="#第10章-ios-17新增功能" aria-label="Permalink to &quot;第10章：iOS 17新增功能&quot;">​</a></h2><p>10.1 探索SwiftData数据持久化框架 10.2 使用#Preview宏进行预览 10.3 滚动动画与过渡效果(scrollTransition) 10.4 视图动画的相位(phaseAnimator)</p><h2 id="第11章-动画与交互" tabindex="-1">第11章：动画与交互 <a class="header-anchor" href="#第11章-动画与交互" aria-label="Permalink to &quot;第11章：动画与交互&quot;">​</a></h2><p>11.1 隐式动画(.animation) 11.2 显式动画(withAnimation) 11.3 自定义过渡效果(.transition) 11.4 手势识别(Tap, LongPress, Drag)</p><h2 id="第12章-swiftdata入门" tabindex="-1">第12章：SwiftData入门 <a class="header-anchor" href="#第12章-swiftdata入门" aria-label="Permalink to &quot;第12章：SwiftData入门&quot;">​</a></h2><p>12.1 定义数据模型(@Model) 12.2 设置模型容器(modelContainer) 12.3 使用@Query获取数据 12.4 插入、更新和删除数据</p><h2 id="第13章-构建可复用视图" tabindex="-1">第13章：构建可复用视图 <a class="header-anchor" href="#第13章-构建可复用视图" aria-label="Permalink to &quot;第13章：构建可复用视图&quot;">​</a></h2><p>13.1 抽取子视图以简化代码 13.2 创建自定义修饰符(ViewModifier) 13.3 定义自定义视图样式(Style)</p>',27)]))}const b=e(o,[["render",n]]);export{u as __pageData,b as default};
