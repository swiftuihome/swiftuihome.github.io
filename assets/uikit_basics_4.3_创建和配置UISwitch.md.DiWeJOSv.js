import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.ymCRTBvy.js";const o=JSON.parse('{"title":"4.3_创建和配置 UISwitch","description":"","frontmatter":{},"headers":[],"relativePath":"uikit/basics/4.3_创建和配置UISwitch.md","filePath":"uikit/basics/4.3_创建和配置UISwitch.md"}'),n={name:"uikit/basics/4.3_创建和配置UISwitch.md"};function h(l,i,p,d,k,c){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="_4-3-创建和配置-uiswitch" tabindex="-1">4.3_创建和配置 UISwitch <a class="header-anchor" href="#_4-3-创建和配置-uiswitch" aria-label="Permalink to &quot;4.3_创建和配置 UISwitch&quot;">​</a></h1><p>UISwitch 是 iOS 开发中一个非常实用的控件，它提供了一个简单的开关按钮，让用户可以轻松地在两种状态之间切换。你可以用它来控制应用程序中的各种设置，例如启用或禁用某个功能，或者切换不同的模式。让我们一起学习如何创建和配置 UISwitch 吧！🎉</p><h2 id="创建-uiswitch" tabindex="-1">创建 UISwitch <a class="header-anchor" href="#创建-uiswitch" aria-label="Permalink to &quot;创建 UISwitch&quot;">​</a></h2><p>首先，我们需要在代码中创建一个 UISwitch 实例。你可以使用以下代码来创建一个简单的 UISwitch：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mySwitch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UISwitch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这行代码创建了一个新的 UISwitch 对象，并将其赋值给 <code>mySwitch</code> 变量。现在，你就可以开始配置这个开关了。是不是很简单？😎</p><h2 id="配置-uiswitch-的状态" tabindex="-1">配置 UISwitch 的状态 <a class="header-anchor" href="#配置-uiswitch-的状态" aria-label="Permalink to &quot;配置 UISwitch 的状态&quot;">​</a></h2><p>UISwitch 有两种状态：<code>on</code> 和 <code>off</code>。你可以使用 <code>isOn</code> 属性来设置或获取 UISwitch 的状态。例如，要将 UISwitch 设置为 <code>on</code> 状态，可以使用以下代码：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mySwitch.isOn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>同样，要将 UISwitch 设置为 <code>off</code> 状态，可以使用以下代码：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mySwitch.isOn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>你还可以使用 <code>setOn(_:animated:)</code> 方法来设置 UISwitch 的状态，并带有动画效果。例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mySwitch.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">animated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个方法会平滑地将 UISwitch 切换到 <code>on</code> 状态。动画效果让用户体验更佳！✨</p><h2 id="设置-uiswitch-的颜色" tabindex="-1">设置 UISwitch 的颜色 <a class="header-anchor" href="#设置-uiswitch-的颜色" aria-label="Permalink to &quot;设置 UISwitch 的颜色&quot;">​</a></h2><p>你可以自定义 UISwitch 的颜色，使其与你的应用程序的整体风格相匹配。以下是一些常用的颜色属性：</p><ul><li><code>onTintColor</code>: 设置 UISwitch 在 <code>on</code> 状态下的颜色。</li><li><code>thumbTintColor</code>: 设置 UISwitch 滑块的颜色。</li><li><code>tintColor</code>: 设置 UISwitch 在 <code>off</code> 状态下的颜色。</li></ul><p>例如，要将 UISwitch 在 <code>on</code> 状态下的颜色设置为蓝色，可以使用以下代码：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mySwitch.onTintColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UIColor.blue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>通过调整这些颜色属性，你可以创建出各种各样的 UISwitch 样式。🎨</p><h2 id="添加-uiswitch-到视图" tabindex="-1">添加 UISwitch 到视图 <a class="header-anchor" href="#添加-uiswitch-到视图" aria-label="Permalink to &quot;添加 UISwitch 到视图&quot;">​</a></h2><p>创建和配置好 UISwitch 后，你需要将其添加到视图中，才能在屏幕上显示出来。你可以使用以下代码将 UISwitch 添加到视图中：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addSubview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mySwitch)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>当然，你还需要设置 UISwitch 的位置和大小，才能使其在视图中正确显示。你可以使用 <code>frame</code> 属性来设置 UISwitch 的位置和大小。例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mySwitch.frame </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CGRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这段代码将 UISwitch 的位置设置为 (100, 100)，大小设置为 50x30。现在，你就可以在屏幕上看到你的 UISwitch 了！🎉</p><h2 id="监听-uiswitch-的状态变化" tabindex="-1">监听 UISwitch 的状态变化 <a class="header-anchor" href="#监听-uiswitch-的状态变化" aria-label="Permalink to &quot;监听 UISwitch 的状态变化&quot;">​</a></h2><p>为了响应 UISwitch 的状态变化，你需要为其添加一个事件监听器。你可以使用 <code>addTarget(_:action:for:)</code> 方法来添加事件监听器。例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mySwitch.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addTarget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(switchValueChanged), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .valueChanged)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这段代码将 <code>switchValueChanged</code> 方法添加到 UISwitch 的 <code>valueChanged</code> 事件监听器中。当 UISwitch 的状态发生变化时，<code>switchValueChanged</code> 方法会被调用。</p><p>接下来，你需要实现 <code>switchValueChanged</code> 方法，来处理 UISwitch 的状态变化。例如：</p><div class="language-swift vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@objc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> switchValueChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: UISwitch) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sender.isOn {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Switch is on&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Switch is off&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>在这个方法中，你可以根据 UISwitch 的状态来执行不同的操作。例如，你可以启用或禁用某个功能，或者更新应用程序的界面。</p><p>通过监听 UISwitch 的状态变化，你可以让你的应用程序更加智能和灵活。💡</p><p>希望这个教程能够帮助你更好地理解和使用 UISwitch。祝你编程愉快！😊</p>`,35)]))}const E=s(n,[["render",h]]);export{o as __pageData,E as default};
